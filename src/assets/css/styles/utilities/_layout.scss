// Layout Utilities
// Grid and flexbox utilities that complement Tailwind

@use "../mixins" as *;

// CSS Grid utilities with responsive variations
.rpg-grid {
	display: grid;
	gap: var(--spacing-4);

	// Auto-fit responsive grid
	&.rpg-grid-auto {
		grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
	}

	// Fixed column grids with responsive breakpoints
	@for $i from 1 through 12 {
		&.rpg-grid-cols-#{$i} {
			grid-template-columns: repeat(#{$i}, 1fr);
		}
	}

	// Responsive grid columns
	@include breakpoint-up("sm") {
		@for $i from 1 through 12 {
			&.sm\:rpg-grid-cols-#{$i} {
				grid-template-columns: repeat(#{$i}, 1fr);
			}
		}
	}

	@include breakpoint-up("md") {
		@for $i from 1 through 12 {
			&.md\:rpg-grid-cols-#{$i} {
				grid-template-columns: repeat(#{$i}, 1fr);
			}
		}
	}

	@include breakpoint-up("lg") {
		@for $i from 1 through 12 {
			&.lg\:rpg-grid-cols-#{$i} {
				grid-template-columns: repeat(#{$i}, 1fr);
			}
		}
	}
}

// RPG-specific grid patterns
.rpg-grid-dashboard {
	display: grid;
	gap: var(--spacing-6);
	grid-template-columns: 1fr;

	@include breakpoint-up("md") {
		grid-template-columns: 250px 1fr;
	}

	@include breakpoint-up("lg") {
		grid-template-columns: 280px 1fr;
	}
}

.rpg-grid-cards {
	display: grid;
	gap: var(--spacing-6);
	grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
}

// Flexbox utilities
.rpg-flex-center {
	@include flex-center;
}

.rpg-flex-between {
	@include flex-between;
}

// Stack layouts with spacing
.rpg-stack {
	display: flex;
	flex-direction: column;
	gap: var(--spacing-4);

	&.rpg-stack-sm {
		gap: var(--spacing-2);
	}

	&.rpg-stack-lg {
		gap: var(--spacing-6);
	}

	&.rpg-stack-xl {
		gap: var(--spacing-8);
	}
}

// Inline stack (horizontal)
.rpg-inline-stack {
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: var(--spacing-4);
	flex-wrap: wrap;

	&.rpg-inline-stack-sm {
		gap: var(--spacing-2);
	}

	&.rpg-inline-stack-lg {
		gap: var(--spacing-6);
	}
}

// Aspect ratio boxes
.rpg-aspect-square {
	@include aspect-ratio(1, 1);
}

.rpg-aspect-video {
	@include aspect-ratio(16, 9);
}

.rpg-aspect-portrait {
	@include aspect-ratio(3, 4);
}

.rpg-aspect-landscape {
	@include aspect-ratio(4, 3);
}

// Position utilities
.rpg-center-absolute {
	@include absolute-center;
}

.rpg-fill-absolute {
	@include absolute-fill;
}

// Sticky positioning with proper z-index
.rpg-sticky-top {
	position: sticky;
	top: 0;
	z-index: var(--z-index-sticky);
}

.rpg-sticky-bottom {
	position: sticky;
	bottom: 0;
	z-index: var(--z-index-sticky);
}

// Overflow utilities
.rpg-overflow-fade {
	position: relative;

	&::after {
		content: "";
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		height: 40px;
		background: linear-gradient(to bottom, transparent, var(--color-background));
		pointer-events: none;
	}
}

// Screen reader only
.rpg-sr-only {
	@include visually-hidden;
}

// Focus trap utility
.rpg-focus-trap {
	&:focus-within {
		box-shadow: 0 0 0 2px var(--color-primary);
	}
}
