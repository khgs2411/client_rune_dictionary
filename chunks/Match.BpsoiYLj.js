import{B as re,a1 as le,c as m,o as u,h as F,a as e,d as I,f as U,H as $,a2 as j,F as D,r as O,n as b,G as c,b as g,a3 as X,w as H,u as d,a4 as B,_ as E,z as S,s as M,V,U as x,A as G,e as Z,a5 as oe,a6 as ce,a7 as ue,O as de,a8 as pe,a9 as me}from"./index.BCRmze3N.js";import{s as q}from"./index.BSjjLJ9B.js";var he=({dt:p})=>`
.p-progressspinner {
    position: relative;
    margin: 0 auto;
    width: 100px;
    height: 100px;
    display: inline-block;
}

.p-progressspinner::before {
    content: "";
    display: block;
    padding-top: 100%;
}

.p-progressspinner-spin {
    height: 100%;
    transform-origin: center center;
    width: 100%;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    animation: p-progressspinner-rotate 2s linear infinite;
}

.p-progressspinner-circle {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: 0;
    stroke: ${p("progressspinner.colorOne")};
    animation: p-progressspinner-dash 1.5s ease-in-out infinite, p-progressspinner-color 6s ease-in-out infinite;
    stroke-linecap: round;
}

@keyframes p-progressspinner-rotate {
    100% {
        transform: rotate(360deg);
    }
}
@keyframes p-progressspinner-dash {
    0% {
        stroke-dasharray: 1, 200;
        stroke-dashoffset: 0;
    }
    50% {
        stroke-dasharray: 89, 200;
        stroke-dashoffset: -35px;
    }
    100% {
        stroke-dasharray: 89, 200;
        stroke-dashoffset: -124px;
    }
}
@keyframes p-progressspinner-color {
    100%,
    0% {
        stroke: ${p("progressspinner.colorOne")};
    }
    40% {
        stroke: ${p("progressspinner.colorTwo")};
    }
    66% {
        stroke: ${p("progressspinner.colorThree")};
    }
    80%,
    90% {
        stroke: ${p("progressspinner.colorFour")};
    }
}
`,ye={root:"p-progressspinner",spin:"p-progressspinner-spin",circle:"p-progressspinner-circle"},ve=re.extend({name:"progressspinner",style:he,classes:ye}),ge={name:"BaseProgressSpinner",extends:le,props:{strokeWidth:{type:String,default:"2"},fill:{type:String,default:"none"},animationDuration:{type:String,default:"2s"}},style:ve,provide:function(){return{$pcProgressSpinner:this,$parentInstance:this}}},ee={name:"ProgressSpinner",extends:ge,inheritAttrs:!1,computed:{svgStyle:function(){return{"animation-duration":this.animationDuration}}}},fe=["fill","stroke-width"];function be(p,a,l,o,n,r){return u(),m("div",F({class:p.cx("root"),role:"progressbar"},p.ptmi("root")),[(u(),m("svg",F({class:p.cx("spin"),viewBox:"25 25 50 50",style:r.svgStyle},p.ptm("spin")),[e("circle",F({class:p.cx("circle"),cx:"50",cy:"50",r:"20",fill:p.fill,"stroke-width":p.strokeWidth,strokeMiterlimit:"10"},p.ptm("circle")),null,16,fe)],16))],16)}ee.render=be;const $e={class:"battle-arena"},_e={class:"battle-background"},ke={class:"atmospheric-effects"},Te={class:"turn-badge"},Pe={class:"turn-text"},we={class:"turn-number"},Me={class:"battle-field"},Se={class:"combatant-area player-area"},He={class:"character-card-content"},Le={class:"character-details"},Ae={class:"character-header"},Re={class:"character-name"},Ce={class:"character-level"},Ie={class:"hp-container"},Ee={class:"hp-bar"},Ne={class:"hp-text"},Be={class:"combatant-area enemy-area"},De={class:"character-card-content"},Oe={class:"character-details"},Ve={class:"character-header"},Ge={class:"character-name"},ze={class:"character-level"},We={class:"hp-container"},Ye={class:"hp-bar"},Fe={class:"hp-text"},Ue=I({__name:"BattleArena",props:{playerName:{default:"You"},playerHealth:{},playerMaxHealth:{},playerLevel:{default:50},enemyName:{},enemyHealth:{},enemyMaxHealth:{},enemyLevel:{default:48},isPlayerTurn:{type:Boolean},isEnemyTurn:{type:Boolean},isProcessingAction:{type:Boolean},currentTurn:{default:1}},setup(p){const a=p,l=U(()=>Math.max(0,Math.min(100,a.playerHealth/a.playerMaxHealth*100))),o=U(()=>Math.max(0,Math.min(100,a.enemyHealth/a.enemyMaxHealth*100)));function n(i){return i>50?"hp-green":i>25?"hp-yellow":"hp-red"}const r=$(1);let T=a.isPlayerTurn;j(()=>a.isPlayerTurn,i=>{i&&!T&&r.value++,T=i});const s=U(()=>r.value),t=$(!1),f=$(!1),_=$(!1),k=$(!1),P=$([]),L=$([]);let z=0;const W=Math.random()*-2,Y=Math.random()*-2;let R=a.playerHealth,C=a.enemyHealth;function N(i,y){const v={id:z++,value:i,isHeal:i>0};y?(P.value.push(v),setTimeout(()=>{P.value=P.value.filter(A=>A.id!==v.id)},1500)):(L.value.push(v),setTimeout(()=>{L.value=L.value.filter(A=>A.id!==v.id)},1500))}return j(()=>a.playerHealth,i=>{const y=i-R;y!==0&&(N(y,!0),i<R?(t.value=!0,setTimeout(()=>{t.value=!1},600)):i>R&&(_.value=!0,setTimeout(()=>{_.value=!1},600))),R=i}),j(()=>a.enemyHealth,i=>{const y=i-C;y!==0&&(N(y,!1),i<C?(f.value=!0,setTimeout(()=>{f.value=!1},600)):i>C&&(k.value=!0,setTimeout(()=>{k.value=!1},600))),C=i}),(i,y)=>(u(),m("div",$e,[e("div",_e,[y[0]||(y[0]=e("div",{class:"gradient-overlay"},null,-1)),e("div",ke,[(u(),m(D,null,O(15,v=>e("div",{key:v,class:b(["particle",`particle-${v}`])},null,2)),64))])]),e("div",{class:b(["turn-indicator",{"player-turn":i.isPlayerTurn,"enemy-turn":i.isEnemyTurn}])},[e("div",Te,[e("i",{class:b(["pi",i.isPlayerTurn?"pi-user":"pi-android"])},null,2),e("span",Pe,c(i.isPlayerTurn?"Your Turn":`${i.enemyName}'s Turn`),1),e("span",we,"Turn "+c(s.value),1)])],2),e("div",Me,[e("div",Se,[g(X,{name:"damage-number"},{default:H(()=>[(u(!0),m(D,null,O(P.value,v=>(u(),m("div",{key:v.id,class:b(["damage-number",{"heal-number":v.isHeal}])},c(v.isHeal?"+":"-")+c(Math.abs(v.value)),3))),128))]),_:1}),g(d(q),{class:b(["character-card player-card",{"taking-damage":t.value,healing:_.value,breathing:!0}]),style:B({"--health-percentage":l.value,"animation-delay":W+"s"})},{content:H(()=>[e("div",He,[y[1]||(y[1]=e("div",{class:"character-icon"},[e("i",{class:"pi pi-user"})],-1)),e("div",Le,[e("div",Ae,[e("span",Re,c(i.playerName),1),e("span",Ce,"Lv"+c(i.playerLevel),1)]),e("div",Ie,[e("div",Ee,[e("div",{class:b(["hp-bar-fill",[n(l.value),{healing:_.value}]]),style:B({width:l.value+"%"})},null,6)]),e("div",Ne,c(i.playerHealth)+"/"+c(i.playerMaxHealth)+" HP",1)])])])]),_:1},8,["class","style"])]),e("div",Be,[g(X,{name:"damage-number"},{default:H(()=>[(u(!0),m(D,null,O(L.value,v=>(u(),m("div",{key:v.id,class:b(["damage-number",{"heal-number":v.isHeal}])},c(v.isHeal?"+":"-")+c(Math.abs(v.value)),3))),128))]),_:1}),g(d(q),{class:b(["character-card enemy-card",{"taking-damage":f.value,healing:k.value,breathing:!0}]),style:B({"--health-percentage":o.value,"animation-delay":Y+"s"})},{content:H(()=>[e("div",De,[y[2]||(y[2]=e("div",{class:"character-icon"},[e("i",{class:"pi pi-android"})],-1)),e("div",Oe,[e("div",Ve,[e("span",Ge,c(i.enemyName),1),e("span",ze,"Lv"+c(i.enemyLevel),1)]),e("div",We,[e("div",Ye,[e("div",{class:b(["hp-bar-fill",[n(o.value),{healing:k.value}]]),style:B({width:o.value+"%"})},null,6)]),e("div",Fe,c(i.enemyHealth)+"/"+c(i.enemyMaxHealth)+" HP",1)])])])]),_:1},8,["class","style"])])])]))}}),je=E(Ue,[["__scopeId","data-v-dbbba52f"]]),qe={class:"game-actions"},Je={key:0,class:"collapsed-content"},Ke={class:"collapsed-inner"},Qe={key:1,class:"expanded-content"},Xe={key:0,class:"action-prompt"},Ze={key:1,class:"action-prompt"},xe={key:2,class:"action-buttons"},et={class:"control-buttons"},tt=I({__name:"GameActions",props:{playerName:{},enemyName:{},isPlayerTurn:{type:Boolean},isEnemyTurn:{type:Boolean},isProcessingAction:{type:Boolean}},emits:["attack","leave-match","open-settings","toggle-log"],setup(p){const a=$(!1),l=$(window.innerWidth<=576);window.addEventListener("resize",()=>{l.value=window.innerWidth<=576,l.value||(a.value=!1)});const o=()=>{a.value=!a.value};return(n,r)=>{const T=x("tooltip");return u(),m("div",qe,[e("div",{class:b(["action-panel",{expanded:a.value,collapsed:!a.value}])},[!a.value&&l.value&&n.isPlayerTurn&&!n.isProcessingAction?(u(),m("div",Je,[e("div",Ke,[g(d(M),{label:"Attack",icon:"pi pi-bolt",severity:"danger",class:"action-btn attack-btn",disabled:n.isProcessingAction,onClick:r[0]||(r[0]=s=>n.$emit("attack"))},null,8,["disabled"]),e("button",{class:"expand-indicator",onClick:o},r[6]||(r[6]=[e("i",{class:"pi pi-angle-double-up"},null,-1)]))])])):S("",!0),a.value&&l.value||!l.value||!n.isPlayerTurn?(u(),m("div",Qe,[n.isPlayerTurn&&!n.isProcessingAction?(u(),m("div",Xe,"What will "+c(n.playerName)+" do?",1)):n.isEnemyTurn?(u(),m("div",Ze,c(n.enemyName)+" is thinking...",1)):S("",!0),n.isPlayerTurn&&!n.isProcessingAction?(u(),m("div",xe,[g(d(M),{label:"Attack",icon:"pi pi-bolt",severity:"danger",class:"action-btn attack-btn",disabled:n.isProcessingAction,onClick:r[1]||(r[1]=s=>n.$emit("attack"))},null,8,["disabled"]),g(d(M),{label:"Defend",icon:"pi pi-shield",severity:"info",class:"action-btn",disabled:n.isProcessingAction},null,8,["disabled"]),g(d(M),{label:"Item",icon:"pi pi-box",severity:"success",class:"action-btn",disabled:n.isProcessingAction},null,8,["disabled"]),g(d(M),{label:"Run",icon:"pi pi-directions",severity:"warning",class:"action-btn",disabled:n.isProcessingAction,onClick:r[2]||(r[2]=s=>n.$emit("leave-match"))},null,8,["disabled"])])):S("",!0),e("div",et,[V(g(d(M),{icon:"pi pi-cog",class:"control-btn",severity:"secondary",text:"",rounded:"",onClick:r[3]||(r[3]=s=>n.$emit("open-settings"))},null,512),[[T,"Settings",void 0,{top:!0}]]),V(g(d(M),{icon:"pi pi-book",class:"control-btn",severity:"secondary",text:"",rounded:"",onClick:r[4]||(r[4]=s=>n.$emit("toggle-log"))},null,512),[[T,"Combat Log",void 0,{top:!0}]]),V(g(d(M),{icon:"pi pi-times",class:"control-btn",severity:"secondary",text:"",rounded:"",onClick:r[5]||(r[5]=s=>n.$emit("leave-match"))},null,512),[[T,"Leave Match",void 0,{top:!0}]])]),l.value&&n.isPlayerTurn?(u(),m("button",{key:3,class:"collapse-indicator",onClick:o},r[7]||(r[7]=[e("i",{class:"pi pi-angle-double-down"},null,-1)]))):S("",!0)])):S("",!0)],2)])}}}),st=E(tt,[["__scopeId","data-v-acdb4c86"]]),at={class:"game-interface"},nt=I({__name:"GameInterface",props:{matchTypeLabel:{},matchId:{},playerName:{},enemyName:{},gameState:{},isPlayerTurn:{type:Boolean},isEnemyTurn:{type:Boolean},isProcessingAction:{type:Boolean},gameLog:{}},emits:["attack","leave-match","open-settings","toggle-log"],setup(p){return(a,l)=>(u(),m("div",at,[g(je,{"player-health":a.gameState.playerHealth,"player-max-health":a.gameState.playerMaxHealth,"enemy-health":a.gameState.enemyHealth,"enemy-max-health":a.gameState.enemyMaxHealth,"enemy-name":a.enemyName,"is-player-turn":a.isPlayerTurn,"is-enemy-turn":a.isEnemyTurn,"is-processing-action":a.isProcessingAction},null,8,["player-health","player-max-health","enemy-health","enemy-max-health","enemy-name","is-player-turn","is-enemy-turn","is-processing-action"]),g(st,{"player-name":a.playerName,"enemy-name":a.enemyName,"is-player-turn":a.isPlayerTurn,"is-enemy-turn":a.isEnemyTurn,"is-processing-action":a.isProcessingAction,onAttack:l[0]||(l[0]=o=>a.$emit("attack")),onLeaveMatch:l[1]||(l[1]=o=>a.$emit("leave-match")),onOpenSettings:l[2]||(l[2]=o=>a.$emit("open-settings")),onToggleLog:l[3]||(l[3]=o=>a.$emit("toggle-log"))},null,8,["player-name","enemy-name","is-player-turn","is-enemy-turn","is-processing-action"])]))}}),it=E(nt,[["__scopeId","data-v-2a067bd4"]]),rt={class:"match-lobby"},lt={class:"flex gap large wrap match-card-wrapper"},ot={key:0,class:"wip-badge"},ct={class:"card-header-container"},ut=["alt","src"],dt={key:0,class:"loading-overlay"},pt={class:"text-center flex"},mt={class:"text-center flex"},ht={class:"flex text-center"},yt=I({__name:"MatchLobby",props:{matchCards:{},imageUrl:{}},emits:["matchTypeSelected"],setup(p,{emit:a}){const l=a;function o(n){l("matchTypeSelected",n)}return(n,r)=>{const T=x("ripple");return u(),m("div",rt,[e("div",lt,[(u(!0),m(D,null,O(n.matchCards,s=>(u(),m("div",{key:s.type,class:"match-card-wrapper-outer"},[s.wip?(u(),m("span",ot,"WIP")):S("",!0),V((u(),G(d(q),{class:b(["match-card",s.type,{disabled:s.disabled||s.loading,loading:s.loading}]),onClick:t=>!s.disabled&&!s.loading&&o(s)},{header:H(()=>[e("div",ct,[e("img",{alt:`${s.type} header`,class:"card-image",src:`${n.imageUrl}match.webp`},null,8,ut),s.loading?(u(),m("div",dt,[g(d(ee),{size:"large","stroke-width":"3"}),r[0]||(r[0]=e("p",null,"Starting match...",-1))])):S("",!0)])]),title:H(()=>[e("span",pt,c(s.title),1)]),subtitle:H(()=>[e("span",mt,c(s.subtitle),1)]),content:H(()=>[e("p",ht,c(s.content),1)]),_:2},1032,["class","onClick"])),[[T]])]))),128))])])}}}),vt=E(yt,[["__scopeId","data-v-9c28998f"]]),gt={class:"match-result-screen"},ft={class:"result-header"},bt={class:"result-title"},$t={class:"result-subtitle"},_t={class:"result-stats"},kt={class:"stat-row"},Tt={class:"stat-value"},Pt={class:"stat-row"},wt={class:"stat-value"},Mt={class:"stat-row"},St={class:"stat-value"},Ht={class:"stat-row"},Lt={class:"stat-value"},At={class:"session-stats"},Rt={class:"stats-grid"},Ct={class:"stat-item"},It={class:"stat-number"},Et={class:"stat-item"},Nt={class:"stat-number"},Bt={class:"stat-item"},Dt={class:"stat-number"},Ot={class:"stat-item"},Vt={class:"stat-number"},Gt={class:"result-actions"},zt=I({__name:"MatchResult",props:{matchResult:{},sessionStats:{},isLoading:{type:Boolean}},emits:["rematch","returnToLobby"],setup(p){const a=p;function l(){var t;return((t=a.matchResult)==null?void 0:t.result)||"disconnect"}function o(){var t;switch((t=a.matchResult)==null?void 0:t.result){case"victory":return"pi pi-trophy";case"defeat":return"pi pi-times-circle";case"draw":return"pi pi-minus-circle";default:return"pi pi-info-circle"}}function n(){var t;switch((t=a.matchResult)==null?void 0:t.result){case"victory":return"Victory!";case"defeat":return"Defeat";case"draw":return"Draw";default:return"Match Complete"}}function r(){var t;switch((t=a.matchResult)==null?void 0:t.result){case"victory":return"You defeated the AI opponent!";case"defeat":return"The AI opponent proved too strong.";case"draw":return"Both fighters fell in battle.";default:return"The match has ended."}}function T(s){const t=Math.floor(s/60),f=s%60;return`${t}:${f.toString().padStart(2,"0")}`}return(s,t)=>{var f,_,k,P;return u(),m("div",gt,[e("div",{class:b(["result-container",l()])},[e("div",ft,[e("div",{class:b(["result-icon",l()])},[e("i",{class:b(o())},null,2)],2),e("h2",bt,c(n()),1),e("p",$t,c(r()),1)]),e("div",_t,[e("div",kt,[t[2]||(t[2]=e("span",{class:"stat-label"},"Match Duration:",-1)),e("span",Tt,c(T(((f=s.matchResult)==null?void 0:f.duration)||0)),1)]),e("div",Pt,[t[3]||(t[3]=e("span",{class:"stat-label"},"Your Health:",-1)),e("span",wt,c(((_=s.matchResult)==null?void 0:_.playerHealth)||0)+" HP",1)]),e("div",Mt,[t[4]||(t[4]=e("span",{class:"stat-label"},"Enemy Health:",-1)),e("span",St,c(((k=s.matchResult)==null?void 0:k.enemyHealth)||0)+" HP",1)]),e("div",Ht,[t[5]||(t[5]=e("span",{class:"stat-label"},"Actions Performed:",-1)),e("span",Lt,c(((P=s.matchResult)==null?void 0:P.actionsPerformed)||0),1)])]),e("div",At,[t[10]||(t[10]=e("h3",null,"Session Statistics",-1)),e("div",Rt,[e("div",Ct,[e("span",It,c(s.sessionStats.victories),1),t[6]||(t[6]=e("span",{class:"stat-text"},"Victories",-1))]),e("div",Et,[e("span",Nt,c(s.sessionStats.defeats),1),t[7]||(t[7]=e("span",{class:"stat-text"},"Defeats",-1))]),e("div",Bt,[e("span",Dt,c(s.sessionStats.winRate)+"%",1),t[8]||(t[8]=e("span",{class:"stat-text"},"Win Rate",-1))]),e("div",Ot,[e("span",Vt,c(s.sessionStats.totalMatches),1),t[9]||(t[9]=e("span",{class:"stat-text"},"Total Matches",-1))])])]),e("div",Gt,[g(d(M),{loading:s.isLoading,onClick:t[0]||(t[0]=L=>s.$emit("rematch")),severity:"success",size:"large",class:"rematch-button"},{default:H(()=>t[11]||(t[11]=[e("i",{class:"pi pi-refresh"},null,-1),Z(" Rematch ")])),_:1},8,["loading"]),g(d(M),{onClick:t[1]||(t[1]=L=>s.$emit("returnToLobby")),disabled:s.isLoading,severity:"secondary",size:"large",class:"lobby-button"},{default:H(()=>t[12]||(t[12]=[e("i",{class:"pi pi-home"},null,-1),Z(" Return to Lobby ")])),_:1},8,["disabled"])])],2)])}}}),Wt=E(zt,[["__scopeId","data-v-bf3c9353"]]),Yt={class:"match"},Ft={class:"content"},Ut=I({__name:"Match",setup(p){const a="/client_rune_dictionary/";document.documentElement.style.setProperty("--match-bg-url",`url(${a}match.webp)`);const l=oe(),o=ce(),{inLobby:n,inMatch:r,isFinished:T}=o,s=$(!0),t=$(!1),f=$(!1),_=$([]),k=$(null);ue("match",{onPlayerTurn:i,onEnemyTurn:N,onLogEntry:y});const P=$([{type:"pve",title:"Player versus Environment",subtitle:"Challenge the environment",content:"Face off against AI-controlled opponents and test your strategies.",wip:!1,disabled:!1,loading:!1},{type:"pvp",title:"Player versus Player",subtitle:"Challenge other players to a duel",content:"Test your skills against other players in real-time combat using your runeabilities.",wip:!0,disabled:!0,loading:!1}]);async function L(h){console.log(`Selected match type: ${h.type}`),h.type==="pve"?await z(h):await v(h)}async function z(h){if(!h.loading)try{if(h.loading=!0,A("pvp","disabled",!0),r.value){l.toast.error("You are already in a match","center");return}k.value="pve",W();const w=await o.pve();console.log("PVE match created:",w)}catch(w){console.error("PVE match error:",w),l.toast.error("Something went wrong","center")}finally{A("pvp","disabled",!0),h.loading=!1}}function W(){s.value=!0,t.value=!1,f.value=!1,_.value=[],console.log("Set up callbacks for server event integration"),y({type:"system",message:"Match started! It's your turn."})}function Y(){return k.value?k.value==="pve"?"Player vs AI":"Player vs Player":"Unknown Match"}function R(){return k.value?k.value==="pve"?"AI Opponent":"Enemy Player":"Enemy"}async function C(h){if(!(!s.value||f.value))try{f.value=!0,me.Next("match",{cta:"match.action",data:{type:"match.action",actionType:h,matchId:o.store.currentMatchId,channelId:o.store.currentChannelId}})}catch(w){console.error("Attack failed:",w),l.toast.error("Attack failed","center"),f.value=!1}}function N(){s.value=!1,t.value=!0,y({type:"system",message:`${R()}'s turn...`})}function i(){s.value=!0,t.value=!1,f.value=!1,y({type:"system",message:"Your turn!"})}function y(h){_.value.unshift({type:h.type,message:h.message,timestamp:new Date}),_.value.length>50&&(_.value=_.value.slice(-50))}async function v(h){h.loading=!0,A("pve","disabled",!0),h.disabled=!0,A("pve","disabled",!1)}function A(h,w,K){const Q=P.value.find(ie=>ie.type===h);Q&&(Q[w]=K)}function te(){return o.getMatchStats()}async function se(){try{await o.startRematch()}catch(h){console.error("Failed to start rematch:",h)}}function J(){o.returnToLobby()}function ae(){console.log("Open settings")}function ne(){console.log("Toggle combat log")}return de(()=>{pe.IsNil(k.value)&&o.returnToLobby()}),(h,w)=>(u(),m("div",Yt,[e("div",{class:b(["viewport",{opaque:d(n),background:d(r)}])},[e("div",Ft,[d(n)?(u(),G(vt,{key:0,"match-cards":P.value,"image-url":d(a),onMatchTypeSelected:L},null,8,["match-cards","image-url"])):S("",!0),d(T)?(u(),G(Wt,{key:1,"match-result":d(o).store.matchResult,"session-stats":te(),"is-loading":d(o).loading.api||d(o).loading.match,onRematch:se,onReturnToLobby:J},null,8,["match-result","session-stats","is-loading"])):S("",!0),d(r)?(u(),G(it,{key:2,"match-type-label":Y(),"match-id":d(o).store.currentMatchId,"player-name":"You","enemy-name":R(),"game-state":d(o).store.gameState,"is-player-turn":s.value,"is-enemy-turn":t.value,"is-processing-action":f.value,"game-log":_.value,onLeaveMatch:J,onAttack:w[0]||(w[0]=K=>C("attack")),onOpenSettings:ae,onToggleLog:ne},null,8,["match-type-label","match-id","enemy-name","game-state","is-player-turn","is-enemy-turn","is-processing-action","game-log"])):S("",!0)])],2)]))}}),Jt=E(Ut,[["__scopeId","data-v-c31c9512"]]);export{Jt as default};
