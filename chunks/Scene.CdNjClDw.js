const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["chunks/rapier.mvSWxE-0.js","chunks/IsNumberOrRangeConstraint.B_UE5vHo.js","chunks/index.BxV0eWTe.js","assets/index.BuaIwObt.css"])))=>i.map(i=>d[i]);
import{R as df,G as Ns,L as uf,B as Xl}from"./IsNumberOrRangeConstraint.B_UE5vHo.js";import{X as ff,p as ot,Y as pf,Z as _f,$ as mf,l as Wn,a0 as gf,B as tn,G as gs,a1 as wf,a2 as qi,a3 as vf,a4 as Yd,a5 as Kd,a6 as bf,a7 as ol,C as zo,R as Bo,d as al,f as xr,x as Sr,q as it,y as ei,H as yf,o as Gi,a as Sn,t as xf,s as pi,A as xo,w as oc,a8 as Sf,_ as ql,a9 as Mf,aa as Yl,k as Ef,ab as Tf,S as Af,c as Rf,V as Cf,ac as Pf,W as Df}from"./index.BxV0eWTe.js";/**
 * @license lucide-vue-next v0.545.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const If=ff("box",[["path",{d:"M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z",key:"hh9hay"}],["path",{d:"m3.3 7 8.7 5 8.7-5",key:"g66t2b"}],["path",{d:"M12 22V12",key:"d0xqtd"}]]),ws=(s,e,t)=>{const n=ot(new Map),i=ot(e),r=df.GetInstance();ot(Ns.IsArray(s)?s:[s]).value.forEach(g=>{r.has(g)||(console.log("Creating namespace",g),r.create(g))});function a(g,v){return Ns.IsArray(s)?i.value?.[v]?.[g]:i.value?.[g]}function c(g,v){if(v&&typeof v=="object"&&"cta"in v&&"data"in v){const E=g,b=v;r.next(E,b);return}const _=g,p=v;(Ns.IsArray(s)?s:[s]).forEach(E=>{r.next(E,{cta:_,data:p})})}function l(g){r.clear(g)}function h(g){i.value=g,d(),(Ns.IsArray(s)?s:[s]).forEach(_=>{if(!r.namespaces.has(_)){uf.Warn(`Rxjs namespace ${_} does not exist`);return}n.value.has(_)||n.value.set(_,r.subscribe(_,({cta:p,data:M})=>{(a(p,_)||(()=>{}))(M)}))})}function d(){n.value.forEach(g=>g.unsubscribe()),n.value.clear()}function u(){n.value.size>0||!e||h(e)}function f(){d()}return t?.static_instance||pf(()=>{u()}),t?.static_instance||_f(()=>{f()}),{$next:c,$clear:l,$subscribe:h,$unsubscribe:d,$mount:u,$unmount:f}},Uf="wss://topsyde-gaming.duckdns.org:3000",Kl=30,Jd=mf("websocket",()=>{const s=ot(new Map),e=ot("disconnected"),t=ot(null),n=ot(null),i=ot(null),r=ot(0),o=ot(null);let a;const c=Wn(()=>e.value==="connected"),l=Wn(()=>e.value==="connecting"||e.value==="handshaking"||e.value==="reconnecting"),h=Wn(()=>e.value==="disconnected");function d(T){e.value="connecting",a=gf(Uf,{protocols:[T],autoReconnect:{retries:3,delay:2e3,onFailed:()=>{e.value="disconnected",console.error("[WS] Auto-reconnect failed after retries")}},heartbeat:{interval:Kl*1e3,pongTimeout:Kl*1e3,message:"ping"},onConnected:g,onDisconnected:v,onMessage:_,onError:p})}function u(){if(!a)throw new Error("WebSocket instance not initialized");return a}function f(){a&&(a.close(),a=null)}async function g(T){e.value="connected",n.value=new Date,r.value=0,console.log("[WS] Connected successfully");const A=[];s.value.forEach(I=>{I.connected&&A.push(Promise.resolve(I.connected(T)))}),await Promise.all(A)}async function v(T,A){e.value="disconnected",i.value=new Date;const I=[];s.value.forEach(x=>{x.disconnected&&I.push(Promise.resolve(x.disconnected(T,A)))}),await Promise.all(I),console.log("[WS] Disconnected",{code:A.code,reason:A.reason})}async function _(T,A){try{const I=JSON.parse(A.data);if(!c.value)return;const x=[];s.value.forEach(y=>{y.data&&x.push(Promise.resolve(y.data(T,I)))}),await Promise.all(x)}catch(I){console.error("[WS] Failed to parse message:",I)}}async function p(T,A){console.error("[WS] Error:",A);const I=[];s.value.forEach(x=>{x.error&&I.push(Promise.resolve(x.error(T,A)))}),await Promise.all(I),o.value=A}function M(T,A){s.value.set(T,A)}function E(T){s.value.delete(T)}function b(T){t.value&&(t.value.id!==T.id||t.value.name!==T.name)&&console.warn(`[WS] Updating client data from ${t.value.name} (${t.value.id}) to ${T.name} (${T.id})`),t.value={id:T.id,name:T.name}}function R(){e.value="disconnected",t.value=null,n.value=null,i.value=null,r.value=0,o.value=null,s.value.clear()}return{status:e,clientData:t,connectedAt:n,disconnectedAt:i,reconnectAttempts:r,lastError:o,isConnected:c,isConnecting:l,isDisconnected:h,setClientData:b,$reset:R,register:M,unregister:E,connect:d,getWebSocketInstance:u,disconnect:f}});/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const cl="180",Lf=0,Jl=1,Ff=2,Zd=1,$d=2,Qn=3,bi=0,dn=1,Fn=2,gi=0,Tr=1,Zl=2,$l=3,Ql=4,Nf=5,ki=100,Of=101,kf=102,zf=103,Bf=104,Gf=200,Hf=201,Vf=202,Wf=203,ac=204,cc=205,jf=206,Xf=207,qf=208,Yf=209,Kf=210,Jf=211,Zf=212,$f=213,Qf=214,lc=0,hc=1,dc=2,Rr=3,uc=4,fc=5,pc=6,_c=7,Qd=0,ep=1,tp=2,wi=0,np=1,ip=2,rp=3,sp=4,op=5,ap=6,cp=7,eu=300,Cr=301,Pr=302,mc=303,gc=304,Go=306,wc=1e3,Hi=1001,vc=1002,mn=1003,lp=1004,Os=1005,hn=1006,ua=1007,Vi=1008,Xn=1009,tu=1010,nu=1011,vs=1012,ll=1013,Ki=1014,Hn=1015,Rs=1016,hl=1017,dl=1018,bs=1020,iu=35902,ru=35899,su=1021,ou=1022,Nn=1023,ys=1026,xs=1027,ul=1028,fl=1029,au=1030,pl=1031,_l=1033,So=33776,Mo=33777,Eo=33778,To=33779,bc=35840,yc=35841,xc=35842,Sc=35843,Mc=36196,Ec=37492,Tc=37496,Ac=37808,Rc=37809,Cc=37810,Pc=37811,Dc=37812,Ic=37813,Uc=37814,Lc=37815,Fc=37816,Nc=37817,Oc=37818,kc=37819,zc=37820,Bc=37821,Gc=36492,Hc=36494,Vc=36495,Wc=36283,jc=36284,Xc=36285,qc=36286,hp=3200,cu=3201,lu=0,dp=1,mi="",Mn="srgb",Dr="srgb-linear",Do="linear",wt="srgb",er=7680,eh=519,up=512,fp=513,pp=514,hu=515,_p=516,mp=517,gp=518,wp=519,Yc=35044,th="300 es",Vn=2e3,Io=2001;class Or{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const i=n[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e);e.target=null}}}const Qt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Ao=Math.PI/180,Kc=180/Math.PI;function vi(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Qt[s&255]+Qt[s>>8&255]+Qt[s>>16&255]+Qt[s>>24&255]+"-"+Qt[e&255]+Qt[e>>8&255]+"-"+Qt[e>>16&15|64]+Qt[e>>24&255]+"-"+Qt[t&63|128]+Qt[t>>8&255]+"-"+Qt[t>>16&255]+Qt[t>>24&255]+Qt[n&255]+Qt[n>>8&255]+Qt[n>>16&255]+Qt[n>>24&255]).toLowerCase()}function ht(s,e,t){return Math.max(e,Math.min(t,s))}function vp(s,e){return(s%e+e)%e}function fa(s,e,t){return(1-t)*s+t*e}function Gn(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function vt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}class Qe{constructor(e=0,t=0){Qe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=ht(this.x,e.x,t.x),this.y=ht(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=ht(this.x,e,t),this.y=ht(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ht(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ht(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*i+e.x,this.y=r*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}let yi=class{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,o,a){let c=n[i+0],l=n[i+1],h=n[i+2],d=n[i+3];const u=r[o+0],f=r[o+1],g=r[o+2],v=r[o+3];if(a===0){e[t+0]=c,e[t+1]=l,e[t+2]=h,e[t+3]=d;return}if(a===1){e[t+0]=u,e[t+1]=f,e[t+2]=g,e[t+3]=v;return}if(d!==v||c!==u||l!==f||h!==g){let _=1-a;const p=c*u+l*f+h*g+d*v,M=p>=0?1:-1,E=1-p*p;if(E>Number.EPSILON){const R=Math.sqrt(E),T=Math.atan2(R,p*M);_=Math.sin(_*T)/R,a=Math.sin(a*T)/R}const b=a*M;if(c=c*_+u*b,l=l*_+f*b,h=h*_+g*b,d=d*_+v*b,_===1-a){const R=1/Math.sqrt(c*c+l*l+h*h+d*d);c*=R,l*=R,h*=R,d*=R}}e[t]=c,e[t+1]=l,e[t+2]=h,e[t+3]=d}static multiplyQuaternionsFlat(e,t,n,i,r,o){const a=n[i],c=n[i+1],l=n[i+2],h=n[i+3],d=r[o],u=r[o+1],f=r[o+2],g=r[o+3];return e[t]=a*g+h*d+c*f-l*u,e[t+1]=c*g+h*u+l*d-a*f,e[t+2]=l*g+h*f+a*u-c*d,e[t+3]=h*g-a*d-c*u-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,r=e._z,o=e._order,a=Math.cos,c=Math.sin,l=a(n/2),h=a(i/2),d=a(r/2),u=c(n/2),f=c(i/2),g=c(r/2);switch(o){case"XYZ":this._x=u*h*d+l*f*g,this._y=l*f*d-u*h*g,this._z=l*h*g+u*f*d,this._w=l*h*d-u*f*g;break;case"YXZ":this._x=u*h*d+l*f*g,this._y=l*f*d-u*h*g,this._z=l*h*g-u*f*d,this._w=l*h*d+u*f*g;break;case"ZXY":this._x=u*h*d-l*f*g,this._y=l*f*d+u*h*g,this._z=l*h*g+u*f*d,this._w=l*h*d-u*f*g;break;case"ZYX":this._x=u*h*d-l*f*g,this._y=l*f*d+u*h*g,this._z=l*h*g-u*f*d,this._w=l*h*d+u*f*g;break;case"YZX":this._x=u*h*d+l*f*g,this._y=l*f*d+u*h*g,this._z=l*h*g-u*f*d,this._w=l*h*d-u*f*g;break;case"XZY":this._x=u*h*d-l*f*g,this._y=l*f*d-u*h*g,this._z=l*h*g+u*f*d,this._w=l*h*d+u*f*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],o=t[1],a=t[5],c=t[9],l=t[2],h=t[6],d=t[10],u=n+a+d;if(u>0){const f=.5/Math.sqrt(u+1);this._w=.25/f,this._x=(h-c)*f,this._y=(r-l)*f,this._z=(o-i)*f}else if(n>a&&n>d){const f=2*Math.sqrt(1+n-a-d);this._w=(h-c)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+l)/f}else if(a>d){const f=2*Math.sqrt(1+a-n-d);this._w=(r-l)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(c+h)/f}else{const f=2*Math.sqrt(1+d-n-a);this._w=(o-i)/f,this._x=(r+l)/f,this._y=(c+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-8?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ht(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,o=e._w,a=t._x,c=t._y,l=t._z,h=t._w;return this._x=n*h+o*a+i*l-r*c,this._y=i*h+o*c+r*a-n*l,this._z=r*h+o*l+n*c-i*a,this._w=o*h-n*a-i*c-r*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const c=1-a*a;if(c<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*r+t*this._z,this.normalize(),this}const l=Math.sqrt(c),h=Math.atan2(l,a),d=Math.sin((1-t)*h)/l,u=Math.sin(t*h)/l;return this._w=o*d+this._w*u,this._x=n*d+this._x*u,this._y=i*d+this._y*u,this._z=r*d+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},q=class du{constructor(e=0,t=0,n=0){du.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(nh.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(nh.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,a=e.z,c=e.w,l=2*(o*i-a*n),h=2*(a*t-r*i),d=2*(r*n-o*t);return this.x=t+c*l+o*d-a*h,this.y=n+c*h+a*l-r*d,this.z=i+c*d+r*h-o*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=ht(this.x,e.x,t.x),this.y=ht(this.y,e.y,t.y),this.z=ht(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=ht(this.x,e,t),this.y=ht(this.y,e,t),this.z=ht(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ht(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,o=t.x,a=t.y,c=t.z;return this.x=i*c-r*a,this.y=r*o-n*c,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return pa.copy(this).projectOnVector(e),this.sub(pa)}reflect(e){return this.sub(pa.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ht(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const pa=new q,nh=new yi;class et{constructor(e,t,n,i,r,o,a,c,l){et.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,a,c,l)}set(e,t,n,i,r,o,a,c,l){const h=this.elements;return h[0]=e,h[1]=i,h[2]=a,h[3]=t,h[4]=r,h[5]=c,h[6]=n,h[7]=o,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[3],c=n[6],l=n[1],h=n[4],d=n[7],u=n[2],f=n[5],g=n[8],v=i[0],_=i[3],p=i[6],M=i[1],E=i[4],b=i[7],R=i[2],T=i[5],A=i[8];return r[0]=o*v+a*M+c*R,r[3]=o*_+a*E+c*T,r[6]=o*p+a*b+c*A,r[1]=l*v+h*M+d*R,r[4]=l*_+h*E+d*T,r[7]=l*p+h*b+d*A,r[2]=u*v+f*M+g*R,r[5]=u*_+f*E+g*T,r[8]=u*p+f*b+g*A,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],h=e[8];return t*o*h-t*a*l-n*r*h+n*a*c+i*r*l-i*o*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],h=e[8],d=h*o-a*l,u=a*c-h*r,f=l*r-o*c,g=t*d+n*u+i*f;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/g;return e[0]=d*v,e[1]=(i*l-h*n)*v,e[2]=(a*n-i*o)*v,e[3]=u*v,e[4]=(h*t-i*c)*v,e[5]=(i*r-a*t)*v,e[6]=f*v,e[7]=(n*c-l*t)*v,e[8]=(o*t-n*r)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,o,a){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*o+l*a)+o+e,-i*l,i*c,-i*(-l*o+c*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(_a.makeScale(e,t)),this}rotate(e){return this.premultiply(_a.makeRotation(-e)),this}translate(e,t){return this.premultiply(_a.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const _a=new et;function uu(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}function Uo(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function bp(){const s=Uo("canvas");return s.style.display="block",s}const ih={};function Ss(s){s in ih||(ih[s]=!0,console.warn(s))}function yp(s,e,t){return new Promise(function(n,i){function r(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:n()}}setTimeout(r,t)})}const rh=new et().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),sh=new et().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function xp(){const s={enabled:!0,workingColorSpace:Dr,spaces:{},convert:function(i,r,o){return this.enabled===!1||r===o||!r||!o||(this.spaces[r].transfer===wt&&(i.r=ti(i.r),i.g=ti(i.g),i.b=ti(i.b)),this.spaces[r].primaries!==this.spaces[o].primaries&&(i.applyMatrix3(this.spaces[r].toXYZ),i.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===wt&&(i.r=Ar(i.r),i.g=Ar(i.g),i.b=Ar(i.b))),i},workingToColorSpace:function(i,r){return this.convert(i,this.workingColorSpace,r)},colorSpaceToWorking:function(i,r){return this.convert(i,r,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===mi?Do:this.spaces[i].transfer},getToneMappingMode:function(i){return this.spaces[i].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(i,r=this.workingColorSpace){return i.fromArray(this.spaces[r].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,r,o){return i.copy(this.spaces[r].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,r){return Ss("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(i,r)},toWorkingColorSpace:function(i,r){return Ss("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(i,r)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[Dr]:{primaries:e,whitePoint:n,transfer:Do,toXYZ:rh,fromXYZ:sh,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Mn},outputColorSpaceConfig:{drawingBufferColorSpace:Mn}},[Mn]:{primaries:e,whitePoint:n,transfer:wt,toXYZ:rh,fromXYZ:sh,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Mn}}}),s}const ut=xp();function ti(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Ar(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let tr;class Sp{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{tr===void 0&&(tr=Uo("canvas")),tr.width=e.width,tr.height=e.height;const i=tr.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=tr}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Uo("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=ti(r[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(ti(t[n]/255)*255):t[n]=ti(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Mp=0;class ml{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Mp++}),this.uuid=vi(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight,0):t instanceof VideoFrame?e.set(t.displayHeight,t.displayWidth,0):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(ma(i[o].image)):r.push(ma(i[o]))}else r=ma(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function ma(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?Sp.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ep=0;const ga=new q;class Jt extends Or{constructor(e=Jt.DEFAULT_IMAGE,t=Jt.DEFAULT_MAPPING,n=Hi,i=Hi,r=hn,o=Vi,a=Nn,c=Xn,l=Jt.DEFAULT_ANISOTROPY,h=mi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ep++}),this.uuid=vi(),this.name="",this.source=new ml(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new Qe(0,0),this.repeat=new Qe(1,1),this.center=new Qe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new et,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(ga).x}get height(){return this.source.getSize(ga).y}get depth(){return this.source.getSize(ga).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==eu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case wc:e.x=e.x-Math.floor(e.x);break;case Hi:e.x=e.x<0?0:1;break;case vc:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case wc:e.y=e.y-Math.floor(e.y);break;case Hi:e.y=e.y<0?0:1;break;case vc:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Jt.DEFAULT_IMAGE=null;Jt.DEFAULT_MAPPING=eu;Jt.DEFAULT_ANISOTROPY=1;class At{constructor(e=0,t=0,n=0,i=1){At.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const c=e.elements,l=c[0],h=c[4],d=c[8],u=c[1],f=c[5],g=c[9],v=c[2],_=c[6],p=c[10];if(Math.abs(h-u)<.01&&Math.abs(d-v)<.01&&Math.abs(g-_)<.01){if(Math.abs(h+u)<.1&&Math.abs(d+v)<.1&&Math.abs(g+_)<.1&&Math.abs(l+f+p-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const E=(l+1)/2,b=(f+1)/2,R=(p+1)/2,T=(h+u)/4,A=(d+v)/4,I=(g+_)/4;return E>b&&E>R?E<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(E),i=T/n,r=A/n):b>R?b<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(b),n=T/i,r=I/i):R<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(R),n=A/r,i=I/r),this.set(n,i,r,t),this}let M=Math.sqrt((_-g)*(_-g)+(d-v)*(d-v)+(u-h)*(u-h));return Math.abs(M)<.001&&(M=1),this.x=(_-g)/M,this.y=(d-v)/M,this.z=(u-h)/M,this.w=Math.acos((l+f+p-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=ht(this.x,e.x,t.x),this.y=ht(this.y,e.y,t.y),this.z=ht(this.z,e.z,t.z),this.w=ht(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=ht(this.x,e,t),this.y=ht(this.y,e,t),this.z=ht(this.z,e,t),this.w=ht(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ht(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Tp extends Or{constructor(e=1,t=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:hn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth,this.scissor=new At(0,0,e,t),this.scissorTest=!1,this.viewport=new At(0,0,e,t);const i={width:e,height:t,depth:n.depth},r=new Jt(i);this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(e={}){const t={minFilter:hn,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const i=Object.assign({},e.textures[t].image);this.textures[t].source=new ml(i)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ji extends Tp{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class fu extends Jt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=mn,this.minFilter=mn,this.wrapR=Hi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Ap extends Jt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=mn,this.minFilter=mn,this.wrapR=Hi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ni{constructor(e=new q(1/0,1/0,1/0),t=new q(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Pn.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Pn.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Pn.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,Pn):Pn.fromBufferAttribute(r,o),Pn.applyMatrix4(e.matrixWorld),this.expandByPoint(Pn);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),ks.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),ks.copy(n.boundingBox)),ks.applyMatrix4(e.matrixWorld),this.union(ks)}const i=e.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Pn),Pn.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Jr),zs.subVectors(this.max,Jr),nr.subVectors(e.a,Jr),ir.subVectors(e.b,Jr),rr.subVectors(e.c,Jr),ai.subVectors(ir,nr),ci.subVectors(rr,ir),Ci.subVectors(nr,rr);let t=[0,-ai.z,ai.y,0,-ci.z,ci.y,0,-Ci.z,Ci.y,ai.z,0,-ai.x,ci.z,0,-ci.x,Ci.z,0,-Ci.x,-ai.y,ai.x,0,-ci.y,ci.x,0,-Ci.y,Ci.x,0];return!wa(t,nr,ir,rr,zs)||(t=[1,0,0,0,1,0,0,0,1],!wa(t,nr,ir,rr,zs))?!1:(Bs.crossVectors(ai,ci),t=[Bs.x,Bs.y,Bs.z],wa(t,nr,ir,rr,zs))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Pn).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Pn).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Yn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Yn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Yn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Yn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Yn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Yn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Yn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Yn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Yn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const Yn=[new q,new q,new q,new q,new q,new q,new q,new q],Pn=new q,ks=new ni,nr=new q,ir=new q,rr=new q,ai=new q,ci=new q,Ci=new q,Jr=new q,zs=new q,Bs=new q,Pi=new q;function wa(s,e,t,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){Pi.fromArray(s,r);const a=i.x*Math.abs(Pi.x)+i.y*Math.abs(Pi.y)+i.z*Math.abs(Pi.z),c=e.dot(Pi),l=t.dot(Pi),h=n.dot(Pi);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>a)return!1}return!0}const Rp=new ni,Zr=new q,va=new q;class Ai{constructor(e=new q,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Rp.setFromPoints(e).getCenter(n);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Zr.subVectors(e,this.center);const t=Zr.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Zr,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(va.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Zr.copy(e.center).add(va)),this.expandByPoint(Zr.copy(e.center).sub(va))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Kn=new q,ba=new q,Gs=new q,li=new q,ya=new q,Hs=new q,xa=new q;let Ho=class{constructor(e=new q,t=new q(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Kn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Kn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Kn.copy(this.origin).addScaledVector(this.direction,t),Kn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){ba.copy(e).add(t).multiplyScalar(.5),Gs.copy(t).sub(e).normalize(),li.copy(this.origin).sub(ba);const r=e.distanceTo(t)*.5,o=-this.direction.dot(Gs),a=li.dot(this.direction),c=-li.dot(Gs),l=li.lengthSq(),h=Math.abs(1-o*o);let d,u,f,g;if(h>0)if(d=o*c-a,u=o*a-c,g=r*h,d>=0)if(u>=-g)if(u<=g){const v=1/h;d*=v,u*=v,f=d*(d+o*u+2*a)+u*(o*d+u+2*c)+l}else u=r,d=Math.max(0,-(o*u+a)),f=-d*d+u*(u+2*c)+l;else u=-r,d=Math.max(0,-(o*u+a)),f=-d*d+u*(u+2*c)+l;else u<=-g?(d=Math.max(0,-(-o*r+a)),u=d>0?-r:Math.min(Math.max(-r,-c),r),f=-d*d+u*(u+2*c)+l):u<=g?(d=0,u=Math.min(Math.max(-r,-c),r),f=u*(u+2*c)+l):(d=Math.max(0,-(o*r+a)),u=d>0?r:Math.min(Math.max(-r,-c),r),f=-d*d+u*(u+2*c)+l);else u=o>0?-r:r,d=Math.max(0,-(o*u+a)),f=-d*d+u*(u+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,d),i&&i.copy(ba).addScaledVector(Gs,u),f}intersectSphere(e,t){Kn.subVectors(e.center,this.origin);const n=Kn.dot(this.direction),i=Kn.dot(Kn)-n*n,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,c=n+o;return c<0?null:a<0?this.at(c,t):this.at(a,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,o,a,c;const l=1/this.direction.x,h=1/this.direction.y,d=1/this.direction.z,u=this.origin;return l>=0?(n=(e.min.x-u.x)*l,i=(e.max.x-u.x)*l):(n=(e.max.x-u.x)*l,i=(e.min.x-u.x)*l),h>=0?(r=(e.min.y-u.y)*h,o=(e.max.y-u.y)*h):(r=(e.max.y-u.y)*h,o=(e.min.y-u.y)*h),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),d>=0?(a=(e.min.z-u.z)*d,c=(e.max.z-u.z)*d):(a=(e.max.z-u.z)*d,c=(e.min.z-u.z)*d),n>c||a>i)||((a>n||n!==n)&&(n=a),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Kn)!==null}intersectTriangle(e,t,n,i,r){ya.subVectors(t,e),Hs.subVectors(n,e),xa.crossVectors(ya,Hs);let o=this.direction.dot(xa),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;li.subVectors(this.origin,e);const c=a*this.direction.dot(Hs.crossVectors(li,Hs));if(c<0)return null;const l=a*this.direction.dot(ya.cross(li));if(l<0||c+l>o)return null;const h=-a*li.dot(xa);return h<0?null:this.at(h/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}};class ft{constructor(e,t,n,i,r,o,a,c,l,h,d,u,f,g,v,_){ft.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,a,c,l,h,d,u,f,g,v,_)}set(e,t,n,i,r,o,a,c,l,h,d,u,f,g,v,_){const p=this.elements;return p[0]=e,p[4]=t,p[8]=n,p[12]=i,p[1]=r,p[5]=o,p[9]=a,p[13]=c,p[2]=l,p[6]=h,p[10]=d,p[14]=u,p[3]=f,p[7]=g,p[11]=v,p[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ft().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/sr.setFromMatrixColumn(e,0).length(),r=1/sr.setFromMatrixColumn(e,1).length(),o=1/sr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(i),l=Math.sin(i),h=Math.cos(r),d=Math.sin(r);if(e.order==="XYZ"){const u=o*h,f=o*d,g=a*h,v=a*d;t[0]=c*h,t[4]=-c*d,t[8]=l,t[1]=f+g*l,t[5]=u-v*l,t[9]=-a*c,t[2]=v-u*l,t[6]=g+f*l,t[10]=o*c}else if(e.order==="YXZ"){const u=c*h,f=c*d,g=l*h,v=l*d;t[0]=u+v*a,t[4]=g*a-f,t[8]=o*l,t[1]=o*d,t[5]=o*h,t[9]=-a,t[2]=f*a-g,t[6]=v+u*a,t[10]=o*c}else if(e.order==="ZXY"){const u=c*h,f=c*d,g=l*h,v=l*d;t[0]=u-v*a,t[4]=-o*d,t[8]=g+f*a,t[1]=f+g*a,t[5]=o*h,t[9]=v-u*a,t[2]=-o*l,t[6]=a,t[10]=o*c}else if(e.order==="ZYX"){const u=o*h,f=o*d,g=a*h,v=a*d;t[0]=c*h,t[4]=g*l-f,t[8]=u*l+v,t[1]=c*d,t[5]=v*l+u,t[9]=f*l-g,t[2]=-l,t[6]=a*c,t[10]=o*c}else if(e.order==="YZX"){const u=o*c,f=o*l,g=a*c,v=a*l;t[0]=c*h,t[4]=v-u*d,t[8]=g*d+f,t[1]=d,t[5]=o*h,t[9]=-a*h,t[2]=-l*h,t[6]=f*d+g,t[10]=u-v*d}else if(e.order==="XZY"){const u=o*c,f=o*l,g=a*c,v=a*l;t[0]=c*h,t[4]=-d,t[8]=l*h,t[1]=u*d+v,t[5]=o*h,t[9]=f*d-g,t[2]=g*d-f,t[6]=a*h,t[10]=v*d+u}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Cp,e,Pp)}lookAt(e,t,n){const i=this.elements;return pn.subVectors(e,t),pn.lengthSq()===0&&(pn.z=1),pn.normalize(),hi.crossVectors(n,pn),hi.lengthSq()===0&&(Math.abs(n.z)===1?pn.x+=1e-4:pn.z+=1e-4,pn.normalize(),hi.crossVectors(n,pn)),hi.normalize(),Vs.crossVectors(pn,hi),i[0]=hi.x,i[4]=Vs.x,i[8]=pn.x,i[1]=hi.y,i[5]=Vs.y,i[9]=pn.y,i[2]=hi.z,i[6]=Vs.z,i[10]=pn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[4],c=n[8],l=n[12],h=n[1],d=n[5],u=n[9],f=n[13],g=n[2],v=n[6],_=n[10],p=n[14],M=n[3],E=n[7],b=n[11],R=n[15],T=i[0],A=i[4],I=i[8],x=i[12],y=i[1],U=i[5],D=i[9],F=i[13],N=i[2],X=i[6],H=i[10],oe=i[14],K=i[3],Q=i[7],$=i[11],k=i[15];return r[0]=o*T+a*y+c*N+l*K,r[4]=o*A+a*U+c*X+l*Q,r[8]=o*I+a*D+c*H+l*$,r[12]=o*x+a*F+c*oe+l*k,r[1]=h*T+d*y+u*N+f*K,r[5]=h*A+d*U+u*X+f*Q,r[9]=h*I+d*D+u*H+f*$,r[13]=h*x+d*F+u*oe+f*k,r[2]=g*T+v*y+_*N+p*K,r[6]=g*A+v*U+_*X+p*Q,r[10]=g*I+v*D+_*H+p*$,r[14]=g*x+v*F+_*oe+p*k,r[3]=M*T+E*y+b*N+R*K,r[7]=M*A+E*U+b*X+R*Q,r[11]=M*I+E*D+b*H+R*$,r[15]=M*x+E*F+b*oe+R*k,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],o=e[1],a=e[5],c=e[9],l=e[13],h=e[2],d=e[6],u=e[10],f=e[14],g=e[3],v=e[7],_=e[11],p=e[15];return g*(+r*c*d-i*l*d-r*a*u+n*l*u+i*a*f-n*c*f)+v*(+t*c*f-t*l*u+r*o*u-i*o*f+i*l*h-r*c*h)+_*(+t*l*d-t*a*f-r*o*d+n*o*f+r*a*h-n*l*h)+p*(-i*a*h-t*c*d+t*a*u+i*o*d-n*o*u+n*c*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],h=e[8],d=e[9],u=e[10],f=e[11],g=e[12],v=e[13],_=e[14],p=e[15],M=d*_*l-v*u*l+v*c*f-a*_*f-d*c*p+a*u*p,E=g*u*l-h*_*l-g*c*f+o*_*f+h*c*p-o*u*p,b=h*v*l-g*d*l+g*a*f-o*v*f-h*a*p+o*d*p,R=g*d*c-h*v*c-g*a*u+o*v*u+h*a*_-o*d*_,T=t*M+n*E+i*b+r*R;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const A=1/T;return e[0]=M*A,e[1]=(v*u*r-d*_*r-v*i*f+n*_*f+d*i*p-n*u*p)*A,e[2]=(a*_*r-v*c*r+v*i*l-n*_*l-a*i*p+n*c*p)*A,e[3]=(d*c*r-a*u*r-d*i*l+n*u*l+a*i*f-n*c*f)*A,e[4]=E*A,e[5]=(h*_*r-g*u*r+g*i*f-t*_*f-h*i*p+t*u*p)*A,e[6]=(g*c*r-o*_*r-g*i*l+t*_*l+o*i*p-t*c*p)*A,e[7]=(o*u*r-h*c*r+h*i*l-t*u*l-o*i*f+t*c*f)*A,e[8]=b*A,e[9]=(g*d*r-h*v*r-g*n*f+t*v*f+h*n*p-t*d*p)*A,e[10]=(o*v*r-g*a*r+g*n*l-t*v*l-o*n*p+t*a*p)*A,e[11]=(h*a*r-o*d*r-h*n*l+t*d*l+o*n*f-t*a*f)*A,e[12]=R*A,e[13]=(h*v*i-g*d*i+g*n*u-t*v*u-h*n*_+t*d*_)*A,e[14]=(g*a*i-o*v*i-g*n*c+t*v*c+o*n*_-t*a*_)*A,e[15]=(o*d*i-h*a*i+h*n*c-t*d*c-o*n*u+t*a*u)*A,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,o=e.x,a=e.y,c=e.z,l=r*o,h=r*a;return this.set(l*o+n,l*a-i*c,l*c+i*a,0,l*a+i*c,h*a+n,h*c-i*o,0,l*c-i*a,h*c+i*o,r*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,o){return this.set(1,n,r,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,o=t._y,a=t._z,c=t._w,l=r+r,h=o+o,d=a+a,u=r*l,f=r*h,g=r*d,v=o*h,_=o*d,p=a*d,M=c*l,E=c*h,b=c*d,R=n.x,T=n.y,A=n.z;return i[0]=(1-(v+p))*R,i[1]=(f+b)*R,i[2]=(g-E)*R,i[3]=0,i[4]=(f-b)*T,i[5]=(1-(u+p))*T,i[6]=(_+M)*T,i[7]=0,i[8]=(g+E)*A,i[9]=(_-M)*A,i[10]=(1-(u+v))*A,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=sr.set(i[0],i[1],i[2]).length();const o=sr.set(i[4],i[5],i[6]).length(),a=sr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Dn.copy(this);const l=1/r,h=1/o,d=1/a;return Dn.elements[0]*=l,Dn.elements[1]*=l,Dn.elements[2]*=l,Dn.elements[4]*=h,Dn.elements[5]*=h,Dn.elements[6]*=h,Dn.elements[8]*=d,Dn.elements[9]*=d,Dn.elements[10]*=d,t.setFromRotationMatrix(Dn),n.x=r,n.y=o,n.z=a,this}makePerspective(e,t,n,i,r,o,a=Vn,c=!1){const l=this.elements,h=2*r/(t-e),d=2*r/(n-i),u=(t+e)/(t-e),f=(n+i)/(n-i);let g,v;if(c)g=r/(o-r),v=o*r/(o-r);else if(a===Vn)g=-(o+r)/(o-r),v=-2*o*r/(o-r);else if(a===Io)g=-o/(o-r),v=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=h,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=d,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=g,l[14]=v,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,o,a=Vn,c=!1){const l=this.elements,h=2/(t-e),d=2/(n-i),u=-(t+e)/(t-e),f=-(n+i)/(n-i);let g,v;if(c)g=1/(o-r),v=o/(o-r);else if(a===Vn)g=-2/(o-r),v=-(o+r)/(o-r);else if(a===Io)g=-1/(o-r),v=-r/(o-r);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=h,l[4]=0,l[8]=0,l[12]=u,l[1]=0,l[5]=d,l[9]=0,l[13]=f,l[2]=0,l[6]=0,l[10]=g,l[14]=v,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const sr=new q,Dn=new ft,Cp=new q(0,0,0),Pp=new q(1,1,1),hi=new q,Vs=new q,pn=new q,oh=new ft,ah=new yi;class nn{constructor(e=0,t=0,n=0,i=nn.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],o=i[4],a=i[8],c=i[1],l=i[5],h=i[9],d=i[2],u=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(ht(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-ht(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-d,r),this._z=0);break;case"ZXY":this._x=Math.asin(ht(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-d,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-ht(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(u,f),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(ht(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-d,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-ht(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return oh.makeRotationFromQuaternion(e),this.setFromRotationMatrix(oh,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ah.setFromEuler(this),this.setFromQuaternion(ah,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}nn.DEFAULT_ORDER="XYZ";class gl{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Dp=0;const ch=new q,or=new yi,Jn=new ft,Ws=new q,$r=new q,Ip=new q,Up=new yi,lh=new q(1,0,0),hh=new q(0,1,0),dh=new q(0,0,1),uh={type:"added"},Lp={type:"removed"},ar={type:"childadded",child:null},Sa={type:"childremoved",child:null};class zt extends Or{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Dp++}),this.uuid=vi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=zt.DEFAULT_UP.clone();const e=new q,t=new nn,n=new yi,i=new q(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ft},normalMatrix:{value:new et}}),this.matrix=new ft,this.matrixWorld=new ft,this.matrixAutoUpdate=zt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=zt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new gl,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return or.setFromAxisAngle(e,t),this.quaternion.multiply(or),this}rotateOnWorldAxis(e,t){return or.setFromAxisAngle(e,t),this.quaternion.premultiply(or),this}rotateX(e){return this.rotateOnAxis(lh,e)}rotateY(e){return this.rotateOnAxis(hh,e)}rotateZ(e){return this.rotateOnAxis(dh,e)}translateOnAxis(e,t){return ch.copy(e).applyQuaternion(this.quaternion),this.position.add(ch.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(lh,e)}translateY(e){return this.translateOnAxis(hh,e)}translateZ(e){return this.translateOnAxis(dh,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Jn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Ws.copy(e):Ws.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),$r.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Jn.lookAt($r,Ws,this.up):Jn.lookAt(Ws,$r,this.up),this.quaternion.setFromRotationMatrix(Jn),i&&(Jn.extractRotation(i.matrixWorld),or.setFromRotationMatrix(Jn),this.quaternion.premultiply(or.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(uh),ar.child=e,this.dispatchEvent(ar),ar.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Lp),Sa.child=e,this.dispatchEvent(Sa),Sa.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Jn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Jn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Jn),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(uh),ar.child=e,this.dispatchEvent(ar),ar.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($r,e,Ip),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($r,Up,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?a.boundingBox.toJSON():void 0,boundingSphere:a.boundingSphere?a.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(a=>({...a})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(e),i.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function r(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){const d=c[l];r(e.shapes,d)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(r(e.materials,this.material[c]));i.material=a}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];i.animations.push(r(e.animations,c))}}if(t){const a=o(e.geometries),c=o(e.materials),l=o(e.textures),h=o(e.images),d=o(e.shapes),u=o(e.skeletons),f=o(e.animations),g=o(e.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),d.length>0&&(n.shapes=d),u.length>0&&(n.skeletons=u),f.length>0&&(n.animations=f),g.length>0&&(n.nodes=g)}return n.object=i,n;function o(a){const c=[];for(const l in a){const h=a[l];delete h.metadata,c.push(h)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}zt.DEFAULT_UP=new q(0,1,0);zt.DEFAULT_MATRIX_AUTO_UPDATE=!0;zt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const In=new q,Zn=new q,Ma=new q,$n=new q,cr=new q,lr=new q,fh=new q,Ea=new q,Ta=new q,Aa=new q,Ra=new At,Ca=new At,Pa=new At;let zi=class yr{constructor(e=new q,t=new q,n=new q){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),In.subVectors(e,t),i.cross(In);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){In.subVectors(i,t),Zn.subVectors(n,t),Ma.subVectors(e,t);const o=In.dot(In),a=In.dot(Zn),c=In.dot(Ma),l=Zn.dot(Zn),h=Zn.dot(Ma),d=o*l-a*a;if(d===0)return r.set(0,0,0),null;const u=1/d,f=(l*c-a*h)*u,g=(o*h-a*c)*u;return r.set(1-f-g,g,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,$n)===null?!1:$n.x>=0&&$n.y>=0&&$n.x+$n.y<=1}static getInterpolation(e,t,n,i,r,o,a,c){return this.getBarycoord(e,t,n,i,$n)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,$n.x),c.addScaledVector(o,$n.y),c.addScaledVector(a,$n.z),c)}static getInterpolatedAttribute(e,t,n,i,r,o){return Ra.setScalar(0),Ca.setScalar(0),Pa.setScalar(0),Ra.fromBufferAttribute(e,t),Ca.fromBufferAttribute(e,n),Pa.fromBufferAttribute(e,i),o.setScalar(0),o.addScaledVector(Ra,r.x),o.addScaledVector(Ca,r.y),o.addScaledVector(Pa,r.z),o}static isFrontFacing(e,t,n,i){return In.subVectors(n,t),Zn.subVectors(e,t),In.cross(Zn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return In.subVectors(this.c,this.b),Zn.subVectors(this.a,this.b),In.cross(Zn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return yr.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return yr.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,r){return yr.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return yr.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return yr.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let o,a;cr.subVectors(i,n),lr.subVectors(r,n),Ea.subVectors(e,n);const c=cr.dot(Ea),l=lr.dot(Ea);if(c<=0&&l<=0)return t.copy(n);Ta.subVectors(e,i);const h=cr.dot(Ta),d=lr.dot(Ta);if(h>=0&&d<=h)return t.copy(i);const u=c*d-h*l;if(u<=0&&c>=0&&h<=0)return o=c/(c-h),t.copy(n).addScaledVector(cr,o);Aa.subVectors(e,r);const f=cr.dot(Aa),g=lr.dot(Aa);if(g>=0&&f<=g)return t.copy(r);const v=f*l-c*g;if(v<=0&&l>=0&&g<=0)return a=l/(l-g),t.copy(n).addScaledVector(lr,a);const _=h*g-f*d;if(_<=0&&d-h>=0&&f-g>=0)return fh.subVectors(r,i),a=(d-h)/(d-h+(f-g)),t.copy(i).addScaledVector(fh,a);const p=1/(_+v+u);return o=v*p,a=u*p,t.copy(n).addScaledVector(cr,o).addScaledVector(lr,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};const pu={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},di={h:0,s:0,l:0},js={h:0,s:0,l:0};function Da(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class rt{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Mn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ut.colorSpaceToWorking(this,t),this}setRGB(e,t,n,i=ut.workingColorSpace){return this.r=e,this.g=t,this.b=n,ut.colorSpaceToWorking(this,i),this}setHSL(e,t,n,i=ut.workingColorSpace){if(e=vp(e,1),t=ht(t,0,1),n=ht(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=Da(o,r,e+1/3),this.g=Da(o,r,e),this.b=Da(o,r,e-1/3)}return ut.colorSpaceToWorking(this,i),this}setStyle(e,t=Mn){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Mn){const n=pu[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ti(e.r),this.g=ti(e.g),this.b=ti(e.b),this}copyLinearToSRGB(e){return this.r=Ar(e.r),this.g=Ar(e.g),this.b=Ar(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Mn){return ut.workingToColorSpace(en.copy(this),e),Math.round(ht(en.r*255,0,255))*65536+Math.round(ht(en.g*255,0,255))*256+Math.round(ht(en.b*255,0,255))}getHexString(e=Mn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ut.workingColorSpace){ut.workingToColorSpace(en.copy(this),t);const n=en.r,i=en.g,r=en.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let c,l;const h=(a+o)/2;if(a===o)c=0,l=0;else{const d=o-a;switch(l=h<=.5?d/(o+a):d/(2-o-a),o){case n:c=(i-r)/d+(i<r?6:0);break;case i:c=(r-n)/d+2;break;case r:c=(n-i)/d+4;break}c/=6}return e.h=c,e.s=l,e.l=h,e}getRGB(e,t=ut.workingColorSpace){return ut.workingToColorSpace(en.copy(this),t),e.r=en.r,e.g=en.g,e.b=en.b,e}getStyle(e=Mn){ut.workingToColorSpace(en.copy(this),e);const t=en.r,n=en.g,i=en.b;return e!==Mn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(di),this.setHSL(di.h+e,di.s+t,di.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(di),e.getHSL(js);const n=fa(di.h,js.h,t),i=fa(di.s,js.s,t),r=fa(di.l,js.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const en=new rt;rt.NAMES=pu;let Fp=0;class Ri extends Or{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Fp++}),this.uuid=vi(),this.name="",this.type="Material",this.blending=Tr,this.side=bi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ac,this.blendDst=cc,this.blendEquation=ki,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new rt(0,0,0),this.blendAlpha=0,this.depthFunc=Rr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=eh,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=er,this.stencilZFail=er,this.stencilZPass=er,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(n.sheenColorMap=this.sheenColorMap.toJSON(e).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(n.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(e).uuid),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Tr&&(n.blending=this.blending),this.side!==bi&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==ac&&(n.blendSrc=this.blendSrc),this.blendDst!==cc&&(n.blendDst=this.blendDst),this.blendEquation!==ki&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Rr&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==eh&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==er&&(n.stencilFail=this.stencilFail),this.stencilZFail!==er&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==er&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const c=r[a];delete c.metadata,o.push(c)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Vo extends Ri{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new rt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new nn,this.combine=Qd,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ft=new q,Xs=new Qe;let Np=0;class Tn{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Np++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Yc,this.updateRanges=[],this.gpuType=Hn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Xs.fromBufferAttribute(this,t),Xs.applyMatrix3(e),this.setXY(t,Xs.x,Xs.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Ft.fromBufferAttribute(this,t),Ft.applyMatrix3(e),this.setXYZ(t,Ft.x,Ft.y,Ft.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Ft.fromBufferAttribute(this,t),Ft.applyMatrix4(e),this.setXYZ(t,Ft.x,Ft.y,Ft.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ft.fromBufferAttribute(this,t),Ft.applyNormalMatrix(e),this.setXYZ(t,Ft.x,Ft.y,Ft.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ft.fromBufferAttribute(this,t),Ft.transformDirection(e),this.setXYZ(t,Ft.x,Ft.y,Ft.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Gn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=vt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Gn(t,this.array)),t}setX(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Gn(t,this.array)),t}setY(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Gn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Gn(t,this.array)),t}setW(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array),r=vt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Yc&&(e.usage=this.usage),e}}class _u extends Tn{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class mu extends Tn{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Dt extends Tn{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Op=0;const xn=new ft,Ia=new zt,hr=new q,_n=new ni,Qr=new ni,Ht=new q;class $t extends Or{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Op++}),this.uuid=vi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(uu(e)?mu:_u)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new et().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return xn.makeRotationFromQuaternion(e),this.applyMatrix4(xn),this}rotateX(e){return xn.makeRotationX(e),this.applyMatrix4(xn),this}rotateY(e){return xn.makeRotationY(e),this.applyMatrix4(xn),this}rotateZ(e){return xn.makeRotationZ(e),this.applyMatrix4(xn),this}translate(e,t,n){return xn.makeTranslation(e,t,n),this.applyMatrix4(xn),this}scale(e,t,n){return xn.makeScale(e,t,n),this.applyMatrix4(xn),this}lookAt(e){return Ia.lookAt(e),Ia.updateMatrix(),this.applyMatrix4(Ia.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(hr).negate(),this.translate(hr.x,hr.y,hr.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,r=e.length;i<r;i++){const o=e[i];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new Dt(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const r=e[i];t.setXYZ(i,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ni);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new q(-1/0,-1/0,-1/0),new q(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];_n.setFromBufferAttribute(r),this.morphTargetsRelative?(Ht.addVectors(this.boundingBox.min,_n.min),this.boundingBox.expandByPoint(Ht),Ht.addVectors(this.boundingBox.max,_n.max),this.boundingBox.expandByPoint(Ht)):(this.boundingBox.expandByPoint(_n.min),this.boundingBox.expandByPoint(_n.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ai);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new q,1/0);return}if(e){const n=this.boundingSphere.center;if(_n.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];Qr.setFromBufferAttribute(a),this.morphTargetsRelative?(Ht.addVectors(_n.min,Qr.min),_n.expandByPoint(Ht),Ht.addVectors(_n.max,Qr.max),_n.expandByPoint(Ht)):(_n.expandByPoint(Qr.min),_n.expandByPoint(Qr.max))}_n.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)Ht.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Ht));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],c=this.morphTargetsRelative;for(let l=0,h=a.count;l<h;l++)Ht.fromBufferAttribute(a,l),c&&(hr.fromBufferAttribute(e,l),Ht.add(hr)),i=Math.max(i,n.distanceToSquared(Ht))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Tn(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],c=[];for(let I=0;I<n.count;I++)a[I]=new q,c[I]=new q;const l=new q,h=new q,d=new q,u=new Qe,f=new Qe,g=new Qe,v=new q,_=new q;function p(I,x,y){l.fromBufferAttribute(n,I),h.fromBufferAttribute(n,x),d.fromBufferAttribute(n,y),u.fromBufferAttribute(r,I),f.fromBufferAttribute(r,x),g.fromBufferAttribute(r,y),h.sub(l),d.sub(l),f.sub(u),g.sub(u);const U=1/(f.x*g.y-g.x*f.y);isFinite(U)&&(v.copy(h).multiplyScalar(g.y).addScaledVector(d,-f.y).multiplyScalar(U),_.copy(d).multiplyScalar(f.x).addScaledVector(h,-g.x).multiplyScalar(U),a[I].add(v),a[x].add(v),a[y].add(v),c[I].add(_),c[x].add(_),c[y].add(_))}let M=this.groups;M.length===0&&(M=[{start:0,count:e.count}]);for(let I=0,x=M.length;I<x;++I){const y=M[I],U=y.start,D=y.count;for(let F=U,N=U+D;F<N;F+=3)p(e.getX(F+0),e.getX(F+1),e.getX(F+2))}const E=new q,b=new q,R=new q,T=new q;function A(I){R.fromBufferAttribute(i,I),T.copy(R);const x=a[I];E.copy(x),E.sub(R.multiplyScalar(R.dot(x))).normalize(),b.crossVectors(T,x);const U=b.dot(c[I])<0?-1:1;o.setXYZW(I,E.x,E.y,E.z,U)}for(let I=0,x=M.length;I<x;++I){const y=M[I],U=y.start,D=y.count;for(let F=U,N=U+D;F<N;F+=3)A(e.getX(F+0)),A(e.getX(F+1)),A(e.getX(F+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Tn(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let u=0,f=n.count;u<f;u++)n.setXYZ(u,0,0,0);const i=new q,r=new q,o=new q,a=new q,c=new q,l=new q,h=new q,d=new q;if(e)for(let u=0,f=e.count;u<f;u+=3){const g=e.getX(u+0),v=e.getX(u+1),_=e.getX(u+2);i.fromBufferAttribute(t,g),r.fromBufferAttribute(t,v),o.fromBufferAttribute(t,_),h.subVectors(o,r),d.subVectors(i,r),h.cross(d),a.fromBufferAttribute(n,g),c.fromBufferAttribute(n,v),l.fromBufferAttribute(n,_),a.add(h),c.add(h),l.add(h),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(v,c.x,c.y,c.z),n.setXYZ(_,l.x,l.y,l.z)}else for(let u=0,f=t.count;u<f;u+=3)i.fromBufferAttribute(t,u+0),r.fromBufferAttribute(t,u+1),o.fromBufferAttribute(t,u+2),h.subVectors(o,r),d.subVectors(i,r),h.cross(d),n.setXYZ(u+0,h.x,h.y,h.z),n.setXYZ(u+1,h.x,h.y,h.z),n.setXYZ(u+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Ht.fromBufferAttribute(e,t),Ht.normalize(),e.setXYZ(t,Ht.x,Ht.y,Ht.z)}toNonIndexed(){function e(a,c){const l=a.array,h=a.itemSize,d=a.normalized,u=new l.constructor(c.length*h);let f=0,g=0;for(let v=0,_=c.length;v<_;v++){a.isInterleavedBufferAttribute?f=c[v]*a.data.stride+a.offset:f=c[v]*h;for(let p=0;p<h;p++)u[g++]=l[f++]}return new Tn(u,h,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new $t,n=this.index.array,i=this.attributes;for(const a in i){const c=i[a],l=e(c,n);t.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const c=[],l=r[a];for(let h=0,d=l.length;h<d;h++){const u=l[h],f=e(u,n);c.push(f)}t.morphAttributes[a]=c}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const l=o[a];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const i={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],h=[];for(let d=0,u=l.length;d<u;d++){const f=l[d];h.push(f.toJSON(e.data))}h.length>0&&(i[c]=h,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere=a.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const i=e.attributes;for(const l in i){const h=i[l];this.setAttribute(l,h.clone(t))}const r=e.morphAttributes;for(const l in r){const h=[],d=r[l];for(let u=0,f=d.length;u<f;u++)h.push(d[u].clone(t));this.morphAttributes[l]=h}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let l=0,h=o.length;l<h;l++){const d=o[l];this.addGroup(d.start,d.count,d.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ph=new ft,Di=new Ho,qs=new Ai,_h=new q,Ys=new q,Ks=new q,Js=new q,Ua=new q,Zs=new q,mh=new q,$s=new q;class Wt extends zt{constructor(e=new $t,t=new Vo){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const a=this.morphTargetInfluences;if(r&&a){Zs.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const h=a[c],d=r[c];h!==0&&(Ua.fromBufferAttribute(d,e),o?Zs.addScaledVector(Ua,h):Zs.addScaledVector(Ua.sub(t),h))}t.add(Zs)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),qs.copy(n.boundingSphere),qs.applyMatrix4(r),Di.copy(e.ray).recast(e.near),!(qs.containsPoint(Di.origin)===!1&&(Di.intersectSphere(qs,_h)===null||Di.origin.distanceToSquared(_h)>(e.far-e.near)**2))&&(ph.copy(r).invert(),Di.copy(e.ray).applyMatrix4(ph),!(n.boundingBox!==null&&Di.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Di)))}_computeIntersections(e,t,n){let i;const r=this.geometry,o=this.material,a=r.index,c=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,d=r.attributes.normal,u=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let g=0,v=u.length;g<v;g++){const _=u[g],p=o[_.materialIndex],M=Math.max(_.start,f.start),E=Math.min(a.count,Math.min(_.start+_.count,f.start+f.count));for(let b=M,R=E;b<R;b+=3){const T=a.getX(b),A=a.getX(b+1),I=a.getX(b+2);i=Qs(this,p,e,n,l,h,d,T,A,I),i&&(i.faceIndex=Math.floor(b/3),i.face.materialIndex=_.materialIndex,t.push(i))}}else{const g=Math.max(0,f.start),v=Math.min(a.count,f.start+f.count);for(let _=g,p=v;_<p;_+=3){const M=a.getX(_),E=a.getX(_+1),b=a.getX(_+2);i=Qs(this,o,e,n,l,h,d,M,E,b),i&&(i.faceIndex=Math.floor(_/3),t.push(i))}}else if(c!==void 0)if(Array.isArray(o))for(let g=0,v=u.length;g<v;g++){const _=u[g],p=o[_.materialIndex],M=Math.max(_.start,f.start),E=Math.min(c.count,Math.min(_.start+_.count,f.start+f.count));for(let b=M,R=E;b<R;b+=3){const T=b,A=b+1,I=b+2;i=Qs(this,p,e,n,l,h,d,T,A,I),i&&(i.faceIndex=Math.floor(b/3),i.face.materialIndex=_.materialIndex,t.push(i))}}else{const g=Math.max(0,f.start),v=Math.min(c.count,f.start+f.count);for(let _=g,p=v;_<p;_+=3){const M=_,E=_+1,b=_+2;i=Qs(this,o,e,n,l,h,d,M,E,b),i&&(i.faceIndex=Math.floor(_/3),t.push(i))}}}}function kp(s,e,t,n,i,r,o,a){let c;if(e.side===dn?c=n.intersectTriangle(o,r,i,!0,a):c=n.intersectTriangle(i,r,o,e.side===bi,a),c===null)return null;$s.copy(a),$s.applyMatrix4(s.matrixWorld);const l=t.ray.origin.distanceTo($s);return l<t.near||l>t.far?null:{distance:l,point:$s.clone(),object:s}}function Qs(s,e,t,n,i,r,o,a,c,l){s.getVertexPosition(a,Ys),s.getVertexPosition(c,Ks),s.getVertexPosition(l,Js);const h=kp(s,e,t,n,Ys,Ks,Js,mh);if(h){const d=new q;zi.getBarycoord(mh,Ys,Ks,Js,d),i&&(h.uv=zi.getInterpolatedAttribute(i,a,c,l,d,new Qe)),r&&(h.uv1=zi.getInterpolatedAttribute(r,a,c,l,d,new Qe)),o&&(h.normal=zi.getInterpolatedAttribute(o,a,c,l,d,new q),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const u={a,b:c,c:l,normal:new q,materialIndex:0};zi.getNormal(Ys,Ks,Js,u.normal),h.face=u,h.barycoord=d}return h}class jn extends $t{constructor(e=1,t=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const c=[],l=[],h=[],d=[];let u=0,f=0;g("z","y","x",-1,-1,n,t,e,o,r,0),g("z","y","x",1,-1,n,t,-e,o,r,1),g("x","z","y",1,1,e,n,t,i,o,2),g("x","z","y",1,-1,e,n,-t,i,o,3),g("x","y","z",1,-1,e,t,n,i,r,4),g("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(c),this.setAttribute("position",new Dt(l,3)),this.setAttribute("normal",new Dt(h,3)),this.setAttribute("uv",new Dt(d,2));function g(v,_,p,M,E,b,R,T,A,I,x){const y=b/A,U=R/I,D=b/2,F=R/2,N=T/2,X=A+1,H=I+1;let oe=0,K=0;const Q=new q;for(let $=0;$<H;$++){const k=$*U-F;for(let Y=0;Y<X;Y++){const ie=Y*y-D;Q[v]=ie*M,Q[_]=k*E,Q[p]=N,l.push(Q.x,Q.y,Q.z),Q[v]=0,Q[_]=0,Q[p]=T>0?1:-1,h.push(Q.x,Q.y,Q.z),d.push(Y/A),d.push(1-$/I),oe+=1}}for(let $=0;$<I;$++)for(let k=0;k<A;k++){const Y=u+k+X*$,ie=u+k+X*($+1),se=u+(k+1)+X*($+1),ee=u+(k+1)+X*$;c.push(Y,ie,ee),c.push(ie,se,ee),K+=6}a.addGroup(f,K,x),f+=K,u+=oe}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new jn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ir(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function sn(s){const e={};for(let t=0;t<s.length;t++){const n=Ir(s[t]);for(const i in n)e[i]=n[i]}return e}function zp(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function gu(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:ut.workingColorSpace}const wu={clone:Ir,merge:sn};var Bp=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Gp=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class xi extends Ri{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Bp,this.fragmentShader=Gp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ir(e.uniforms),this.uniformsGroups=zp(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class vu extends zt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ft,this.projectionMatrix=new ft,this.projectionMatrixInverse=new ft,this.coordinateSystem=Vn,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const ui=new q,gh=new Qe,wh=new Qe;class En extends vu{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Kc*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ao*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Kc*2*Math.atan(Math.tan(Ao*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){ui.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(ui.x,ui.y).multiplyScalar(-e/ui.z),ui.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(ui.x,ui.y).multiplyScalar(-e/ui.z)}getViewSize(e,t){return this.getViewBounds(e,gh,wh),t.subVectors(wh,gh)}setViewOffset(e,t,n,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ao*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,l=o.fullHeight;r+=o.offsetX*i/c,t-=o.offsetY*n/l,i*=o.width/c,n*=o.height/l}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const dr=-90,ur=1;class Hp extends zt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new En(dr,ur,e,t);i.layers=this.layers,this.add(i);const r=new En(dr,ur,e,t);r.layers=this.layers,this.add(r);const o=new En(dr,ur,e,t);o.layers=this.layers,this.add(o);const a=new En(dr,ur,e,t);a.layers=this.layers,this.add(a);const c=new En(dr,ur,e,t);c.layers=this.layers,this.add(c);const l=new En(dr,ur,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,o,a,c]=t;for(const l of t)this.remove(l);if(e===Vn)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===Io)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,c,l,h]=this.children,d=e.getRenderTarget(),u=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),g=e.xr.enabled;e.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,o),e.setRenderTarget(n,2,i),e.render(t,a),e.setRenderTarget(n,3,i),e.render(t,c),e.setRenderTarget(n,4,i),e.render(t,l),n.texture.generateMipmaps=v,e.setRenderTarget(n,5,i),e.render(t,h),e.setRenderTarget(d,u,f),e.xr.enabled=g,n.texture.needsPMREMUpdate=!0}}class bu extends Jt{constructor(e=[],t=Cr,n,i,r,o,a,c,l,h){super(e,t,n,i,r,o,a,c,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Vp extends Ji{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new bu(i),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new jn(5,5,5),r=new xi({name:"CubemapFromEquirect",uniforms:Ir(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:dn,blending:gi});r.uniforms.tEquirect.value=t;const o=new Wt(i,r),a=t.minFilter;return t.minFilter===Vi&&(t.minFilter=hn),new Hp(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,n=!0,i=!0){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(r)}}class Mr extends zt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Wp={type:"move"};class La{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Mr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Mr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new q,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new q),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Mr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new q,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new q),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,o=null;const a=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){o=!0;for(const v of e.hand.values()){const _=t.getJointPose(v,n),p=this._getHandJoint(l,v);_!==null&&(p.matrix.fromArray(_.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=_.radius),p.visible=_!==null}const h=l.joints["index-finger-tip"],d=l.joints["thumb-tip"],u=h.position.distanceTo(d.position),f=.02,g=.005;l.inputState.pinching&&u>f+g?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&u<=f-g&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));a!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Wp)))}return a!==null&&(a.visible=i!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Mr;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}let jp=class extends zt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new nn,this.environmentIntensity=1,this.environmentRotation=new nn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}};class Xp{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Yc,this.updateRanges=[],this.version=0,this.uuid=vi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=vi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=vi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const rn=new q;class Lo{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.applyMatrix4(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.applyNormalMatrix(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.transformDirection(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Gn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=vt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=vt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=vt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=vt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=vt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Gn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Gn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Gn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Gn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array),r=vt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Tn(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Lo(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class yu extends Ri{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new rt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let fr;const es=new q,pr=new q,_r=new q,mr=new Qe,ts=new Qe,xu=new ft,eo=new q,ns=new q,to=new q,vh=new Qe,Fa=new Qe,bh=new Qe;class qp extends zt{constructor(e=new yu){if(super(),this.isSprite=!0,this.type="Sprite",fr===void 0){fr=new $t;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Xp(t,5);fr.setIndex([0,1,2,0,2,3]),fr.setAttribute("position",new Lo(n,3,0,!1)),fr.setAttribute("uv",new Lo(n,2,3,!1))}this.geometry=fr,this.material=e,this.center=new Qe(.5,.5),this.count=1}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),pr.setFromMatrixScale(this.matrixWorld),xu.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),_r.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&pr.multiplyScalar(-_r.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const o=this.center;no(eo.set(-.5,-.5,0),_r,o,pr,i,r),no(ns.set(.5,-.5,0),_r,o,pr,i,r),no(to.set(.5,.5,0),_r,o,pr,i,r),vh.set(0,0),Fa.set(1,0),bh.set(1,1);let a=e.ray.intersectTriangle(eo,ns,to,!1,es);if(a===null&&(no(ns.set(-.5,.5,0),_r,o,pr,i,r),Fa.set(0,1),a=e.ray.intersectTriangle(eo,to,ns,!1,es),a===null))return;const c=e.ray.origin.distanceTo(es);c<e.near||c>e.far||t.push({distance:c,point:es.clone(),uv:zi.getInterpolation(es,eo,ns,to,vh,Fa,bh,new Qe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function no(s,e,t,n,i,r){mr.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(ts.x=r*mr.x-i*mr.y,ts.y=i*mr.x+r*mr.y):ts.copy(mr),s.copy(e),s.x+=ts.x,s.y+=ts.y,s.applyMatrix4(xu)}class Yp extends Jt{constructor(e=null,t=1,n=1,i,r,o,a,c,l=mn,h=mn,d,u){super(null,o,a,c,l,h,i,r,d,u),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Jc extends Tn{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const gr=new ft,yh=new ft,io=[],xh=new ni,Kp=new ft,is=new Wt,rs=new Ai;class Jp extends Wt{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Jc(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Kp)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new ni),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,gr),xh.copy(e.boundingBox).applyMatrix4(gr),this.boundingBox.union(xh)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Ai),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,gr),rs.copy(e.boundingSphere).applyMatrix4(gr),this.boundingSphere.union(rs)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,r=n.length+1,o=e*r+1;for(let a=0;a<n.length;a++)n[a]=i[o+a]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(is.geometry=this.geometry,is.material=this.material,is.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),rs.copy(this.boundingSphere),rs.applyMatrix4(n),e.ray.intersectsSphere(rs)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,gr),yh.multiplyMatrices(n,gr),is.matrixWorld=yh,is.raycast(e,io);for(let o=0,a=io.length;o<a;o++){const c=io[o];c.instanceId=r,c.object=this,t.push(c)}io.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Jc(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new Yp(new Float32Array(i*this.count),i,this.count,ul,Hn));const r=this.morphTexture.source.data.data;let o=0;for(let l=0;l<n.length;l++)o+=n[l];const a=this.geometry.morphTargetsRelative?1:1-o,c=i*e;r[c]=a,r.set(n,c+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Na=new q,Zp=new q,$p=new et;class _i{constructor(e=new q(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Na.subVectors(n,t).cross(Zp.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Na),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||$p.getNormalMatrix(e),i=this.coplanarPoint(Na).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ii=new Ai,Qp=new Qe(.5,.5),ro=new q;class wl{constructor(e=new _i,t=new _i,n=new _i,i=new _i,r=new _i,o=new _i){this.planes=[e,t,n,i,r,o]}set(e,t,n,i,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Vn,n=!1){const i=this.planes,r=e.elements,o=r[0],a=r[1],c=r[2],l=r[3],h=r[4],d=r[5],u=r[6],f=r[7],g=r[8],v=r[9],_=r[10],p=r[11],M=r[12],E=r[13],b=r[14],R=r[15];if(i[0].setComponents(l-o,f-h,p-g,R-M).normalize(),i[1].setComponents(l+o,f+h,p+g,R+M).normalize(),i[2].setComponents(l+a,f+d,p+v,R+E).normalize(),i[3].setComponents(l-a,f-d,p-v,R-E).normalize(),n)i[4].setComponents(c,u,_,b).normalize(),i[5].setComponents(l-c,f-u,p-_,R-b).normalize();else if(i[4].setComponents(l-c,f-u,p-_,R-b).normalize(),t===Vn)i[5].setComponents(l+c,f+u,p+_,R+b).normalize();else if(t===Io)i[5].setComponents(c,u,_,b).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Ii.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Ii.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Ii)}intersectsSprite(e){Ii.center.set(0,0,0);const t=Qp.distanceTo(e.center);return Ii.radius=.7071067811865476+t,Ii.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ii)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(ro.x=i.normal.x>0?e.max.x:e.min.x,ro.y=i.normal.y>0?e.max.y:e.min.y,ro.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(ro)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class vl extends Ri{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new rt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Fo=new q,No=new q,Sh=new ft,ss=new Ho,so=new Ai,Oa=new q,Mh=new q;class e_ extends zt{constructor(e=new $t,t=new vl){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Fo.fromBufferAttribute(t,i-1),No.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Fo.distanceTo(No);e.setAttribute("lineDistance",new Dt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),so.copy(n.boundingSphere),so.applyMatrix4(i),so.radius+=r,e.ray.intersectsSphere(so)===!1)return;Sh.copy(i).invert(),ss.copy(e.ray).applyMatrix4(Sh);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,l=this.isLineSegments?2:1,h=n.index,u=n.attributes.position;if(h!==null){const f=Math.max(0,o.start),g=Math.min(h.count,o.start+o.count);for(let v=f,_=g-1;v<_;v+=l){const p=h.getX(v),M=h.getX(v+1),E=oo(this,e,ss,c,p,M,v);E&&t.push(E)}if(this.isLineLoop){const v=h.getX(g-1),_=h.getX(f),p=oo(this,e,ss,c,v,_,g-1);p&&t.push(p)}}else{const f=Math.max(0,o.start),g=Math.min(u.count,o.start+o.count);for(let v=f,_=g-1;v<_;v+=l){const p=oo(this,e,ss,c,v,v+1,v);p&&t.push(p)}if(this.isLineLoop){const v=oo(this,e,ss,c,g-1,f,g-1);v&&t.push(v)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function oo(s,e,t,n,i,r,o){const a=s.geometry.attributes.position;if(Fo.fromBufferAttribute(a,i),No.fromBufferAttribute(a,r),t.distanceSqToSegment(Fo,No,Oa,Mh)>n)return;Oa.applyMatrix4(s.matrixWorld);const l=e.ray.origin.distanceTo(Oa);if(!(l<e.near||l>e.far))return{distance:l,point:Mh.clone().applyMatrix4(s.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:s}}const Eh=new q,Th=new q;class Su extends e_{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)Eh.fromBufferAttribute(t,i),Th.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Eh.distanceTo(Th);e.setAttribute("lineDistance",new Dt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Mu extends Ri{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new rt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Ah=new ft,Zc=new Ho,ao=new Ai,co=new q;class t_ extends zt{constructor(e=new $t,t=new Mu){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ao.copy(n.boundingSphere),ao.applyMatrix4(i),ao.radius+=r,e.ray.intersectsSphere(ao)===!1)return;Ah.copy(i).invert(),Zc.copy(e.ray).applyMatrix4(Ah);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,l=n.index,d=n.attributes.position;if(l!==null){const u=Math.max(0,o.start),f=Math.min(l.count,o.start+o.count);for(let g=u,v=f;g<v;g++){const _=l.getX(g);co.fromBufferAttribute(d,_),Rh(co,_,c,i,e,t,this)}}else{const u=Math.max(0,o.start),f=Math.min(d.count,o.start+o.count);for(let g=u,v=f;g<v;g++)co.fromBufferAttribute(d,g),Rh(co,g,c,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Rh(s,e,t,n,i,r,o){const a=Zc.distanceSqToPoint(s);if(a<t){const c=new q;Zc.closestPointToPoint(s,c),c.applyMatrix4(n);const l=i.ray.origin.distanceTo(c);if(l<i.near||l>i.far)return;r.push({distance:l,distanceToRay:Math.sqrt(a),point:c,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class Eu extends Jt{constructor(e,t,n,i,r,o,a,c,l){super(e,t,n,i,r,o,a,c,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Tu extends Jt{constructor(e,t,n=Ki,i,r,o,a=mn,c=mn,l,h=ys,d=1){if(h!==ys&&h!==xs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const u={width:e,height:t,depth:d};super(u,i,r,o,a,c,h,n,l),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new ml(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Au extends Jt{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}copy(e){return super.copy(e),this.sourceTexture=e.sourceTexture,this}}class Ur extends $t{constructor(e=1,t=1,n=4,i=8,r=1){super(),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i,heightSegments:r},t=Math.max(0,t),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),r=Math.max(1,Math.floor(r));const o=[],a=[],c=[],l=[],h=t/2,d=Math.PI/2*e,u=t,f=2*d+u,g=n*2+r,v=i+1,_=new q,p=new q;for(let M=0;M<=g;M++){let E=0,b=0,R=0,T=0;if(M<=n){const x=M/n,y=x*Math.PI/2;b=-h-e*Math.cos(y),R=e*Math.sin(y),T=-e*Math.cos(y),E=x*d}else if(M<=n+r){const x=(M-n)/r;b=-h+x*t,R=e,T=0,E=d+x*u}else{const x=(M-n-r)/n,y=x*Math.PI/2;b=h+e*Math.sin(y),R=e*Math.cos(y),T=e*Math.sin(y),E=d+u+x*d}const A=Math.max(0,Math.min(1,E/f));let I=0;M===0?I=.5/i:M===g&&(I=-.5/i);for(let x=0;x<=i;x++){const y=x/i,U=y*Math.PI*2,D=Math.sin(U),F=Math.cos(U);p.x=-R*F,p.y=b,p.z=R*D,a.push(p.x,p.y,p.z),_.set(-R*F,T,R*D),_.normalize(),c.push(_.x,_.y,_.z),l.push(y+I,A)}if(M>0){const x=(M-1)*v;for(let y=0;y<i;y++){const U=x+y,D=x+y+1,F=M*v+y,N=M*v+y+1;o.push(U,D,F),o.push(D,N,F)}}}this.setIndex(o),this.setAttribute("position",new Dt(a,3)),this.setAttribute("normal",new Dt(c,3)),this.setAttribute("uv",new Dt(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ur(e.radius,e.height,e.capSegments,e.radialSegments,e.heightSegments)}}class Lr extends $t{constructor(e=1,t=1,n=1,i=32,r=1,o=!1,a=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:c};const l=this;i=Math.floor(i),r=Math.floor(r);const h=[],d=[],u=[],f=[];let g=0;const v=[],_=n/2;let p=0;M(),o===!1&&(e>0&&E(!0),t>0&&E(!1)),this.setIndex(h),this.setAttribute("position",new Dt(d,3)),this.setAttribute("normal",new Dt(u,3)),this.setAttribute("uv",new Dt(f,2));function M(){const b=new q,R=new q;let T=0;const A=(t-e)/n;for(let I=0;I<=r;I++){const x=[],y=I/r,U=y*(t-e)+e;for(let D=0;D<=i;D++){const F=D/i,N=F*c+a,X=Math.sin(N),H=Math.cos(N);R.x=U*X,R.y=-y*n+_,R.z=U*H,d.push(R.x,R.y,R.z),b.set(X,A,H).normalize(),u.push(b.x,b.y,b.z),f.push(F,1-y),x.push(g++)}v.push(x)}for(let I=0;I<i;I++)for(let x=0;x<r;x++){const y=v[x][I],U=v[x+1][I],D=v[x+1][I+1],F=v[x][I+1];(e>0||x!==0)&&(h.push(y,U,F),T+=3),(t>0||x!==r-1)&&(h.push(U,D,F),T+=3)}l.addGroup(p,T,0),p+=T}function E(b){const R=g,T=new Qe,A=new q;let I=0;const x=b===!0?e:t,y=b===!0?1:-1;for(let D=1;D<=i;D++)d.push(0,_*y,0),u.push(0,y,0),f.push(.5,.5),g++;const U=g;for(let D=0;D<=i;D++){const N=D/i*c+a,X=Math.cos(N),H=Math.sin(N);A.x=x*H,A.y=_*y,A.z=x*X,d.push(A.x,A.y,A.z),u.push(0,y,0),T.x=X*.5+.5,T.y=H*.5*y+.5,f.push(T.x,T.y),g++}for(let D=0;D<i;D++){const F=R+D,N=U+D;b===!0?h.push(N,N+1,F):h.push(N+1,N,F),I+=3}l.addGroup(p,I,b===!0?1:2),p+=I}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Lr(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Cs extends Lr{constructor(e=1,t=1,n=32,i=1,r=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,r,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Cs(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}const lo=new q,ho=new q,ka=new q,uo=new zi;class n_ extends $t{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(Ao*t),o=e.getIndex(),a=e.getAttribute("position"),c=o?o.count:a.count,l=[0,0,0],h=["a","b","c"],d=new Array(3),u={},f=[];for(let g=0;g<c;g+=3){o?(l[0]=o.getX(g),l[1]=o.getX(g+1),l[2]=o.getX(g+2)):(l[0]=g,l[1]=g+1,l[2]=g+2);const{a:v,b:_,c:p}=uo;if(v.fromBufferAttribute(a,l[0]),_.fromBufferAttribute(a,l[1]),p.fromBufferAttribute(a,l[2]),uo.getNormal(ka),d[0]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,d[1]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,d[2]=`${Math.round(p.x*i)},${Math.round(p.y*i)},${Math.round(p.z*i)}`,!(d[0]===d[1]||d[1]===d[2]||d[2]===d[0]))for(let M=0;M<3;M++){const E=(M+1)%3,b=d[M],R=d[E],T=uo[h[M]],A=uo[h[E]],I=`${b}_${R}`,x=`${R}_${b}`;x in u&&u[x]?(ka.dot(u[x].normal)<=r&&(f.push(T.x,T.y,T.z),f.push(A.x,A.y,A.z)),u[x]=null):I in u||(u[I]={index0:l[M],index1:l[E],normal:ka.clone()})}}for(const g in u)if(u[g]){const{index0:v,index1:_}=u[g];lo.fromBufferAttribute(a,v),ho.fromBufferAttribute(a,_),f.push(lo.x,lo.y,lo.z),f.push(ho.x,ho.y,ho.z)}this.setAttribute("position",new Dt(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class On extends $t{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,o=t/2,a=Math.floor(n),c=Math.floor(i),l=a+1,h=c+1,d=e/a,u=t/c,f=[],g=[],v=[],_=[];for(let p=0;p<h;p++){const M=p*u-o;for(let E=0;E<l;E++){const b=E*d-r;g.push(b,-M,0),v.push(0,0,1),_.push(E/a),_.push(1-p/c)}}for(let p=0;p<c;p++)for(let M=0;M<a;M++){const E=M+l*p,b=M+l*(p+1),R=M+1+l*(p+1),T=M+1+l*p;f.push(E,b,T),f.push(b,R,T)}this.setIndex(f),this.setAttribute("position",new Dt(g,3)),this.setAttribute("normal",new Dt(v,3)),this.setAttribute("uv",new Dt(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new On(e.width,e.height,e.widthSegments,e.heightSegments)}}class Ms extends $t{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let l=0;const h=[],d=new q,u=new q,f=[],g=[],v=[],_=[];for(let p=0;p<=n;p++){const M=[],E=p/n;let b=0;p===0&&o===0?b=.5/t:p===n&&c===Math.PI&&(b=-.5/t);for(let R=0;R<=t;R++){const T=R/t;d.x=-e*Math.cos(i+T*r)*Math.sin(o+E*a),d.y=e*Math.cos(o+E*a),d.z=e*Math.sin(i+T*r)*Math.sin(o+E*a),g.push(d.x,d.y,d.z),u.copy(d).normalize(),v.push(u.x,u.y,u.z),_.push(T+b,1-E),M.push(l++)}h.push(M)}for(let p=0;p<n;p++)for(let M=0;M<t;M++){const E=h[p][M+1],b=h[p][M],R=h[p+1][M],T=h[p+1][M+1];(p!==0||o>0)&&f.push(E,b,T),(p!==n-1||c<Math.PI)&&f.push(b,R,T)}this.setIndex(f),this.setAttribute("position",new Dt(g,3)),this.setAttribute("normal",new Dt(v,3)),this.setAttribute("uv",new Dt(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ms(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class $c extends Ri{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new rt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=lu,this.normalScale=new Qe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new nn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Ru extends Ri{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=hp,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Cu extends Ri{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class i_{constructor(e,t,n){const i=this;let r=!1,o=0,a=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.abortController=new AbortController,this.itemStart=function(h){a++,r===!1&&i.onStart!==void 0&&i.onStart(h,o,a),r=!0},this.itemEnd=function(h){o++,i.onProgress!==void 0&&i.onProgress(h,o,a),o===a&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return c?c(h):h},this.setURLModifier=function(h){return c=h,this},this.addHandler=function(h,d){return l.push(h,d),this},this.removeHandler=function(h){const d=l.indexOf(h);return d!==-1&&l.splice(d,2),this},this.getHandler=function(h){for(let d=0,u=l.length;d<u;d+=2){const f=l[d],g=l[d+1];if(f.global&&(f.lastIndex=0),f.test(h))return g}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}class Pu extends zt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new rt(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}const za=new ft,Ch=new q,Ph=new q;class r_{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Qe(512,512),this.mapType=Xn,this.map=null,this.mapPass=null,this.matrix=new ft,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new wl,this._frameExtents=new Qe(1,1),this._viewportCount=1,this._viewports=[new At(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Ch.setFromMatrixPosition(e.matrixWorld),t.position.copy(Ch),Ph.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Ph),t.updateMatrixWorld(),za.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(za,t.coordinateSystem,t.reversedDepth),t.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(za)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Du extends vu{constructor(e=-1,t=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,o=n+e,a=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,o=r+l*this.view.width,a-=h*this.view.offsetY,c=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,c,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class s_ extends r_{constructor(){super(new Du(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class o_ extends Pu{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(zt.DEFAULT_UP),this.updateMatrix(),this.target=new zt,this.shadow=new s_}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class a_ extends Pu{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class c_ extends $t{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class l_ extends En{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class h_{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const Dh=new ft;class d_{constructor(e,t,n=0,i=1/0){this.ray=new Ho(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new gl,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Dh.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Dh),this}intersectObject(e,t=!0,n=[]){return Qc(e,this,n,t),n.sort(Ih),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)Qc(e[i],this,n,t);return n.sort(Ih),n}}function Ih(s,e){return s.distance-e.distance}function Qc(s,e,t,n){let i=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const r=s.children;for(let o=0,a=r.length;o<a;o++)Qc(r[o],e,t,!0)}}class Iu extends Su{constructor(e=10,t=10,n=4473924,i=8947848){n=new rt(n),i=new rt(i);const r=t/2,o=e/t,a=e/2,c=[],l=[];for(let u=0,f=0,g=-a;u<=t;u++,g+=o){c.push(-a,0,g,a,0,g),c.push(g,0,-a,g,0,a);const v=u===r?n:i;v.toArray(l,f),f+=3,v.toArray(l,f),f+=3,v.toArray(l,f),f+=3,v.toArray(l,f),f+=3}const h=new $t;h.setAttribute("position",new Dt(c,3)),h.setAttribute("color",new Dt(l,3));const d=new vl({vertexColors:!0,toneMapped:!1});super(h,d),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}function Uh(s,e,t,n){const i=u_(n);switch(t){case su:return s*e;case ul:return s*e/i.components*i.byteLength;case fl:return s*e/i.components*i.byteLength;case au:return s*e*2/i.components*i.byteLength;case pl:return s*e*2/i.components*i.byteLength;case ou:return s*e*3/i.components*i.byteLength;case Nn:return s*e*4/i.components*i.byteLength;case _l:return s*e*4/i.components*i.byteLength;case So:case Mo:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Eo:case To:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case yc:case Sc:return Math.max(s,16)*Math.max(e,8)/4;case bc:case xc:return Math.max(s,8)*Math.max(e,8)/2;case Mc:case Ec:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Tc:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Ac:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Rc:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case Cc:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case Pc:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case Dc:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case Ic:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case Uc:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case Lc:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case Fc:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case Nc:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case Oc:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case kc:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case zc:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case Bc:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case Gc:case Hc:case Vc:return Math.ceil(s/4)*Math.ceil(e/4)*16;case Wc:case jc:return Math.ceil(s/4)*Math.ceil(e/4)*8;case Xc:case qc:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function u_(s){switch(s){case Xn:case tu:return{byteLength:1,components:1};case vs:case nu:case Rs:return{byteLength:2,components:1};case hl:case dl:return{byteLength:2,components:4};case Ki:case ll:case Hn:return{byteLength:4,components:1};case iu:case ru:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:cl}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=cl);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Uu(){let s=null,e=!1,t=null,n=null;function i(r,o){t(r,o),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function f_(s){const e=new WeakMap;function t(a,c){const l=a.array,h=a.usage,d=l.byteLength,u=s.createBuffer();s.bindBuffer(c,u),s.bufferData(c,l,h),a.onUploadCallback();let f;if(l instanceof Float32Array)f=s.FLOAT;else if(typeof Float16Array<"u"&&l instanceof Float16Array)f=s.HALF_FLOAT;else if(l instanceof Uint16Array)a.isFloat16BufferAttribute?f=s.HALF_FLOAT:f=s.UNSIGNED_SHORT;else if(l instanceof Int16Array)f=s.SHORT;else if(l instanceof Uint32Array)f=s.UNSIGNED_INT;else if(l instanceof Int32Array)f=s.INT;else if(l instanceof Int8Array)f=s.BYTE;else if(l instanceof Uint8Array)f=s.UNSIGNED_BYTE;else if(l instanceof Uint8ClampedArray)f=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+l);return{buffer:u,type:f,bytesPerElement:l.BYTES_PER_ELEMENT,version:a.version,size:d}}function n(a,c,l){const h=c.array,d=c.updateRanges;if(s.bindBuffer(l,a),d.length===0)s.bufferSubData(l,0,h);else{d.sort((f,g)=>f.start-g.start);let u=0;for(let f=1;f<d.length;f++){const g=d[u],v=d[f];v.start<=g.start+g.count+1?g.count=Math.max(g.count,v.start+v.count-g.start):(++u,d[u]=v)}d.length=u+1;for(let f=0,g=d.length;f<g;f++){const v=d[f];s.bufferSubData(l,v.start*h.BYTES_PER_ELEMENT,h,v.start,v.count)}c.clearUpdateRanges()}c.onUploadCallback()}function i(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function r(a){a.isInterleavedBufferAttribute&&(a=a.data);const c=e.get(a);c&&(s.deleteBuffer(c.buffer),e.delete(a))}function o(a,c){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=e.get(a);(!h||h.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const l=e.get(a);if(l===void 0)e.set(a,t(a,c));else if(l.version<a.version){if(l.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(l.buffer,a,c),l.version=a.version}}return{get:i,remove:r,update:o}}var p_=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,__=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,m_=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,g_=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,w_=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,v_=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,b_=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,y_=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,x_=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,S_=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,M_=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,E_=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,T_=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,A_=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,R_=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,C_=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,P_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,D_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,I_=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,U_=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,L_=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,F_=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,N_=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,O_=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,k_=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,z_=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,B_=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,G_=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,H_=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,V_=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,W_="gl_FragColor = linearToOutputTexel( gl_FragColor );",j_=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,X_=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,q_=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Y_=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,K_=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,J_=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Z_=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,$_=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Q_=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,em=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,tm=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,nm=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,im=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,rm=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,sm=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,om=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,am=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,cm=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,lm=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,hm=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,dm=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,um=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,fm=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,pm=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,_m=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,mm=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,gm=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,wm=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,vm=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,bm=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,ym=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,xm=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Sm=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Mm=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Em=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Tm=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,Am=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Rm=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Cm=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,Pm=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Dm=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Im=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Um=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Lm=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Fm=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Nm=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Om=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,km=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,zm=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Bm=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Gm=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Hm=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Vm=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Wm=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,jm=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Xm=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,qm=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Ym=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Km=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow( sampler2D shadow, vec2 uv, float compare ) {
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare, distribution.x );
		#endif
		if ( hard_shadow != 1.0 ) {
			float distance = compare - distribution.x;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,Jm=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Zm=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,$m=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Qm=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,eg=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,tg=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,ng=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,ig=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,rg=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,sg=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,og=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ag=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,cg=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,lg=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,hg=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,dg=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,ug=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const fg=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,pg=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,_g=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,mg=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,gg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,wg=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vg=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,bg=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSED_DEPTH_BUFFER
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,yg=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,xg=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Sg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Mg=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Eg=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Tg=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Ag=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Rg=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Cg=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Pg=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Dg=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Ig=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ug=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Lg=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Fg=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ng=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Og=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,kg=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zg=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Bg=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Gg=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Hg=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Vg=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Wg=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,jg=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Xg=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,nt={alphahash_fragment:p_,alphahash_pars_fragment:__,alphamap_fragment:m_,alphamap_pars_fragment:g_,alphatest_fragment:w_,alphatest_pars_fragment:v_,aomap_fragment:b_,aomap_pars_fragment:y_,batching_pars_vertex:x_,batching_vertex:S_,begin_vertex:M_,beginnormal_vertex:E_,bsdfs:T_,iridescence_fragment:A_,bumpmap_pars_fragment:R_,clipping_planes_fragment:C_,clipping_planes_pars_fragment:P_,clipping_planes_pars_vertex:D_,clipping_planes_vertex:I_,color_fragment:U_,color_pars_fragment:L_,color_pars_vertex:F_,color_vertex:N_,common:O_,cube_uv_reflection_fragment:k_,defaultnormal_vertex:z_,displacementmap_pars_vertex:B_,displacementmap_vertex:G_,emissivemap_fragment:H_,emissivemap_pars_fragment:V_,colorspace_fragment:W_,colorspace_pars_fragment:j_,envmap_fragment:X_,envmap_common_pars_fragment:q_,envmap_pars_fragment:Y_,envmap_pars_vertex:K_,envmap_physical_pars_fragment:om,envmap_vertex:J_,fog_vertex:Z_,fog_pars_vertex:$_,fog_fragment:Q_,fog_pars_fragment:em,gradientmap_pars_fragment:tm,lightmap_pars_fragment:nm,lights_lambert_fragment:im,lights_lambert_pars_fragment:rm,lights_pars_begin:sm,lights_toon_fragment:am,lights_toon_pars_fragment:cm,lights_phong_fragment:lm,lights_phong_pars_fragment:hm,lights_physical_fragment:dm,lights_physical_pars_fragment:um,lights_fragment_begin:fm,lights_fragment_maps:pm,lights_fragment_end:_m,logdepthbuf_fragment:mm,logdepthbuf_pars_fragment:gm,logdepthbuf_pars_vertex:wm,logdepthbuf_vertex:vm,map_fragment:bm,map_pars_fragment:ym,map_particle_fragment:xm,map_particle_pars_fragment:Sm,metalnessmap_fragment:Mm,metalnessmap_pars_fragment:Em,morphinstance_vertex:Tm,morphcolor_vertex:Am,morphnormal_vertex:Rm,morphtarget_pars_vertex:Cm,morphtarget_vertex:Pm,normal_fragment_begin:Dm,normal_fragment_maps:Im,normal_pars_fragment:Um,normal_pars_vertex:Lm,normal_vertex:Fm,normalmap_pars_fragment:Nm,clearcoat_normal_fragment_begin:Om,clearcoat_normal_fragment_maps:km,clearcoat_pars_fragment:zm,iridescence_pars_fragment:Bm,opaque_fragment:Gm,packing:Hm,premultiplied_alpha_fragment:Vm,project_vertex:Wm,dithering_fragment:jm,dithering_pars_fragment:Xm,roughnessmap_fragment:qm,roughnessmap_pars_fragment:Ym,shadowmap_pars_fragment:Km,shadowmap_pars_vertex:Jm,shadowmap_vertex:Zm,shadowmask_pars_fragment:$m,skinbase_vertex:Qm,skinning_pars_vertex:eg,skinning_vertex:tg,skinnormal_vertex:ng,specularmap_fragment:ig,specularmap_pars_fragment:rg,tonemapping_fragment:sg,tonemapping_pars_fragment:og,transmission_fragment:ag,transmission_pars_fragment:cg,uv_pars_fragment:lg,uv_pars_vertex:hg,uv_vertex:dg,worldpos_vertex:ug,background_vert:fg,background_frag:pg,backgroundCube_vert:_g,backgroundCube_frag:mg,cube_vert:gg,cube_frag:wg,depth_vert:vg,depth_frag:bg,distanceRGBA_vert:yg,distanceRGBA_frag:xg,equirect_vert:Sg,equirect_frag:Mg,linedashed_vert:Eg,linedashed_frag:Tg,meshbasic_vert:Ag,meshbasic_frag:Rg,meshlambert_vert:Cg,meshlambert_frag:Pg,meshmatcap_vert:Dg,meshmatcap_frag:Ig,meshnormal_vert:Ug,meshnormal_frag:Lg,meshphong_vert:Fg,meshphong_frag:Ng,meshphysical_vert:Og,meshphysical_frag:kg,meshtoon_vert:zg,meshtoon_frag:Bg,points_vert:Gg,points_frag:Hg,shadow_vert:Vg,shadow_frag:Wg,sprite_vert:jg,sprite_frag:Xg},Fe={common:{diffuse:{value:new rt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new et},alphaMap:{value:null},alphaMapTransform:{value:new et},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new et}},envmap:{envMap:{value:null},envMapRotation:{value:new et},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new et}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new et}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new et},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new et},normalScale:{value:new Qe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new et},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new et}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new et}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new et}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new rt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new rt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new et},alphaTest:{value:0},uvTransform:{value:new et}},sprite:{diffuse:{value:new rt(16777215)},opacity:{value:1},center:{value:new Qe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new et},alphaMap:{value:null},alphaMapTransform:{value:new et},alphaTest:{value:0}}},Bn={basic:{uniforms:sn([Fe.common,Fe.specularmap,Fe.envmap,Fe.aomap,Fe.lightmap,Fe.fog]),vertexShader:nt.meshbasic_vert,fragmentShader:nt.meshbasic_frag},lambert:{uniforms:sn([Fe.common,Fe.specularmap,Fe.envmap,Fe.aomap,Fe.lightmap,Fe.emissivemap,Fe.bumpmap,Fe.normalmap,Fe.displacementmap,Fe.fog,Fe.lights,{emissive:{value:new rt(0)}}]),vertexShader:nt.meshlambert_vert,fragmentShader:nt.meshlambert_frag},phong:{uniforms:sn([Fe.common,Fe.specularmap,Fe.envmap,Fe.aomap,Fe.lightmap,Fe.emissivemap,Fe.bumpmap,Fe.normalmap,Fe.displacementmap,Fe.fog,Fe.lights,{emissive:{value:new rt(0)},specular:{value:new rt(1118481)},shininess:{value:30}}]),vertexShader:nt.meshphong_vert,fragmentShader:nt.meshphong_frag},standard:{uniforms:sn([Fe.common,Fe.envmap,Fe.aomap,Fe.lightmap,Fe.emissivemap,Fe.bumpmap,Fe.normalmap,Fe.displacementmap,Fe.roughnessmap,Fe.metalnessmap,Fe.fog,Fe.lights,{emissive:{value:new rt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:nt.meshphysical_vert,fragmentShader:nt.meshphysical_frag},toon:{uniforms:sn([Fe.common,Fe.aomap,Fe.lightmap,Fe.emissivemap,Fe.bumpmap,Fe.normalmap,Fe.displacementmap,Fe.gradientmap,Fe.fog,Fe.lights,{emissive:{value:new rt(0)}}]),vertexShader:nt.meshtoon_vert,fragmentShader:nt.meshtoon_frag},matcap:{uniforms:sn([Fe.common,Fe.bumpmap,Fe.normalmap,Fe.displacementmap,Fe.fog,{matcap:{value:null}}]),vertexShader:nt.meshmatcap_vert,fragmentShader:nt.meshmatcap_frag},points:{uniforms:sn([Fe.points,Fe.fog]),vertexShader:nt.points_vert,fragmentShader:nt.points_frag},dashed:{uniforms:sn([Fe.common,Fe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:nt.linedashed_vert,fragmentShader:nt.linedashed_frag},depth:{uniforms:sn([Fe.common,Fe.displacementmap]),vertexShader:nt.depth_vert,fragmentShader:nt.depth_frag},normal:{uniforms:sn([Fe.common,Fe.bumpmap,Fe.normalmap,Fe.displacementmap,{opacity:{value:1}}]),vertexShader:nt.meshnormal_vert,fragmentShader:nt.meshnormal_frag},sprite:{uniforms:sn([Fe.sprite,Fe.fog]),vertexShader:nt.sprite_vert,fragmentShader:nt.sprite_frag},background:{uniforms:{uvTransform:{value:new et},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:nt.background_vert,fragmentShader:nt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new et}},vertexShader:nt.backgroundCube_vert,fragmentShader:nt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:nt.cube_vert,fragmentShader:nt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:nt.equirect_vert,fragmentShader:nt.equirect_frag},distanceRGBA:{uniforms:sn([Fe.common,Fe.displacementmap,{referencePosition:{value:new q},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:nt.distanceRGBA_vert,fragmentShader:nt.distanceRGBA_frag},shadow:{uniforms:sn([Fe.lights,Fe.fog,{color:{value:new rt(0)},opacity:{value:1}}]),vertexShader:nt.shadow_vert,fragmentShader:nt.shadow_frag}};Bn.physical={uniforms:sn([Bn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new et},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new et},clearcoatNormalScale:{value:new Qe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new et},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new et},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new et},sheen:{value:0},sheenColor:{value:new rt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new et},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new et},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new et},transmissionSamplerSize:{value:new Qe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new et},attenuationDistance:{value:0},attenuationColor:{value:new rt(0)},specularColor:{value:new rt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new et},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new et},anisotropyVector:{value:new Qe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new et}}]),vertexShader:nt.meshphysical_vert,fragmentShader:nt.meshphysical_frag};const fo={r:0,b:0,g:0},Ui=new nn,qg=new ft;function Yg(s,e,t,n,i,r,o){const a=new rt(0);let c=r===!0?0:1,l,h,d=null,u=0,f=null;function g(E){let b=E.isScene===!0?E.background:null;return b&&b.isTexture&&(b=(E.backgroundBlurriness>0?t:e).get(b)),b}function v(E){let b=!1;const R=g(E);R===null?p(a,c):R&&R.isColor&&(p(R,1),b=!0);const T=s.xr.getEnvironmentBlendMode();T==="additive"?n.buffers.color.setClear(0,0,0,1,o):T==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(s.autoClear||b)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function _(E,b){const R=g(b);R&&(R.isCubeTexture||R.mapping===Go)?(h===void 0&&(h=new Wt(new jn(1,1,1),new xi({name:"BackgroundCubeMaterial",uniforms:Ir(Bn.backgroundCube.uniforms),vertexShader:Bn.backgroundCube.vertexShader,fragmentShader:Bn.backgroundCube.fragmentShader,side:dn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(T,A,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),Ui.copy(b.backgroundRotation),Ui.x*=-1,Ui.y*=-1,Ui.z*=-1,R.isCubeTexture&&R.isRenderTargetTexture===!1&&(Ui.y*=-1,Ui.z*=-1),h.material.uniforms.envMap.value=R,h.material.uniforms.flipEnvMap.value=R.isCubeTexture&&R.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=b.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(qg.makeRotationFromEuler(Ui)),h.material.toneMapped=ut.getTransfer(R.colorSpace)!==wt,(d!==R||u!==R.version||f!==s.toneMapping)&&(h.material.needsUpdate=!0,d=R,u=R.version,f=s.toneMapping),h.layers.enableAll(),E.unshift(h,h.geometry,h.material,0,0,null)):R&&R.isTexture&&(l===void 0&&(l=new Wt(new On(2,2),new xi({name:"BackgroundMaterial",uniforms:Ir(Bn.background.uniforms),vertexShader:Bn.background.vertexShader,fragmentShader:Bn.background.fragmentShader,side:bi,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=R,l.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,l.material.toneMapped=ut.getTransfer(R.colorSpace)!==wt,R.matrixAutoUpdate===!0&&R.updateMatrix(),l.material.uniforms.uvTransform.value.copy(R.matrix),(d!==R||u!==R.version||f!==s.toneMapping)&&(l.material.needsUpdate=!0,d=R,u=R.version,f=s.toneMapping),l.layers.enableAll(),E.unshift(l,l.geometry,l.material,0,0,null))}function p(E,b){E.getRGB(fo,gu(s)),n.buffers.color.setClear(fo.r,fo.g,fo.b,b,o)}function M(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),l!==void 0&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}return{getClearColor:function(){return a},setClearColor:function(E,b=1){a.set(E),c=b,p(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(E){c=E,p(a,c)},render:v,addToRenderList:_,dispose:M}}function Kg(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=u(null);let r=i,o=!1;function a(y,U,D,F,N){let X=!1;const H=d(F,D,U);r!==H&&(r=H,l(r.object)),X=f(y,F,D,N),X&&g(y,F,D,N),N!==null&&e.update(N,s.ELEMENT_ARRAY_BUFFER),(X||o)&&(o=!1,b(y,U,D,F),N!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(N).buffer))}function c(){return s.createVertexArray()}function l(y){return s.bindVertexArray(y)}function h(y){return s.deleteVertexArray(y)}function d(y,U,D){const F=D.wireframe===!0;let N=n[y.id];N===void 0&&(N={},n[y.id]=N);let X=N[U.id];X===void 0&&(X={},N[U.id]=X);let H=X[F];return H===void 0&&(H=u(c()),X[F]=H),H}function u(y){const U=[],D=[],F=[];for(let N=0;N<t;N++)U[N]=0,D[N]=0,F[N]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:U,enabledAttributes:D,attributeDivisors:F,object:y,attributes:{},index:null}}function f(y,U,D,F){const N=r.attributes,X=U.attributes;let H=0;const oe=D.getAttributes();for(const K in oe)if(oe[K].location>=0){const $=N[K];let k=X[K];if(k===void 0&&(K==="instanceMatrix"&&y.instanceMatrix&&(k=y.instanceMatrix),K==="instanceColor"&&y.instanceColor&&(k=y.instanceColor)),$===void 0||$.attribute!==k||k&&$.data!==k.data)return!0;H++}return r.attributesNum!==H||r.index!==F}function g(y,U,D,F){const N={},X=U.attributes;let H=0;const oe=D.getAttributes();for(const K in oe)if(oe[K].location>=0){let $=X[K];$===void 0&&(K==="instanceMatrix"&&y.instanceMatrix&&($=y.instanceMatrix),K==="instanceColor"&&y.instanceColor&&($=y.instanceColor));const k={};k.attribute=$,$&&$.data&&(k.data=$.data),N[K]=k,H++}r.attributes=N,r.attributesNum=H,r.index=F}function v(){const y=r.newAttributes;for(let U=0,D=y.length;U<D;U++)y[U]=0}function _(y){p(y,0)}function p(y,U){const D=r.newAttributes,F=r.enabledAttributes,N=r.attributeDivisors;D[y]=1,F[y]===0&&(s.enableVertexAttribArray(y),F[y]=1),N[y]!==U&&(s.vertexAttribDivisor(y,U),N[y]=U)}function M(){const y=r.newAttributes,U=r.enabledAttributes;for(let D=0,F=U.length;D<F;D++)U[D]!==y[D]&&(s.disableVertexAttribArray(D),U[D]=0)}function E(y,U,D,F,N,X,H){H===!0?s.vertexAttribIPointer(y,U,D,N,X):s.vertexAttribPointer(y,U,D,F,N,X)}function b(y,U,D,F){v();const N=F.attributes,X=D.getAttributes(),H=U.defaultAttributeValues;for(const oe in X){const K=X[oe];if(K.location>=0){let Q=N[oe];if(Q===void 0&&(oe==="instanceMatrix"&&y.instanceMatrix&&(Q=y.instanceMatrix),oe==="instanceColor"&&y.instanceColor&&(Q=y.instanceColor)),Q!==void 0){const $=Q.normalized,k=Q.itemSize,Y=e.get(Q);if(Y===void 0)continue;const ie=Y.buffer,se=Y.type,ee=Y.bytesPerElement,W=se===s.INT||se===s.UNSIGNED_INT||Q.gpuType===ll;if(Q.isInterleavedBufferAttribute){const V=Q.data,te=V.stride,ge=Q.offset;if(V.isInstancedInterleavedBuffer){for(let we=0;we<K.locationSize;we++)p(K.location+we,V.meshPerAttribute);y.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=V.meshPerAttribute*V.count)}else for(let we=0;we<K.locationSize;we++)_(K.location+we);s.bindBuffer(s.ARRAY_BUFFER,ie);for(let we=0;we<K.locationSize;we++)E(K.location+we,k/K.locationSize,se,$,te*ee,(ge+k/K.locationSize*we)*ee,W)}else{if(Q.isInstancedBufferAttribute){for(let V=0;V<K.locationSize;V++)p(K.location+V,Q.meshPerAttribute);y.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=Q.meshPerAttribute*Q.count)}else for(let V=0;V<K.locationSize;V++)_(K.location+V);s.bindBuffer(s.ARRAY_BUFFER,ie);for(let V=0;V<K.locationSize;V++)E(K.location+V,k/K.locationSize,se,$,k*ee,k/K.locationSize*V*ee,W)}}else if(H!==void 0){const $=H[oe];if($!==void 0)switch($.length){case 2:s.vertexAttrib2fv(K.location,$);break;case 3:s.vertexAttrib3fv(K.location,$);break;case 4:s.vertexAttrib4fv(K.location,$);break;default:s.vertexAttrib1fv(K.location,$)}}}}M()}function R(){I();for(const y in n){const U=n[y];for(const D in U){const F=U[D];for(const N in F)h(F[N].object),delete F[N];delete U[D]}delete n[y]}}function T(y){if(n[y.id]===void 0)return;const U=n[y.id];for(const D in U){const F=U[D];for(const N in F)h(F[N].object),delete F[N];delete U[D]}delete n[y.id]}function A(y){for(const U in n){const D=n[U];if(D[y.id]===void 0)continue;const F=D[y.id];for(const N in F)h(F[N].object),delete F[N];delete D[y.id]}}function I(){x(),o=!0,r!==i&&(r=i,l(r.object))}function x(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:a,reset:I,resetDefaultState:x,dispose:R,releaseStatesOfGeometry:T,releaseStatesOfProgram:A,initAttributes:v,enableAttribute:_,disableUnusedAttributes:M}}function Jg(s,e,t){let n;function i(l){n=l}function r(l,h){s.drawArrays(n,l,h),t.update(h,n,1)}function o(l,h,d){d!==0&&(s.drawArraysInstanced(n,l,h,d),t.update(h,n,d))}function a(l,h,d){if(d===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,l,0,h,0,d);let f=0;for(let g=0;g<d;g++)f+=h[g];t.update(f,n,1)}function c(l,h,d,u){if(d===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let g=0;g<l.length;g++)o(l[g],h[g],u[g]);else{f.multiDrawArraysInstancedWEBGL(n,l,0,h,0,u,0,d);let g=0;for(let v=0;v<d;v++)g+=h[v]*u[v];t.update(g,n,1)}}this.setMode=i,this.render=r,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=c}function Zg(s,e,t,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const A=e.get("EXT_texture_filter_anisotropic");i=s.getParameter(A.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function o(A){return!(A!==Nn&&n.convert(A)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(A){const I=A===Rs&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(A!==Xn&&n.convert(A)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&A!==Hn&&!I)}function c(A){if(A==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";A="mediump"}return A==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=t.precision!==void 0?t.precision:"highp";const h=c(l);h!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",h,"instead."),l=h);const d=t.logarithmicDepthBuffer===!0,u=t.reversedDepthBuffer===!0&&e.has("EXT_clip_control"),f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),g=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=s.getParameter(s.MAX_TEXTURE_SIZE),_=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),p=s.getParameter(s.MAX_VERTEX_ATTRIBS),M=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),E=s.getParameter(s.MAX_VARYING_VECTORS),b=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),R=g>0,T=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:c,textureFormatReadable:o,textureTypeReadable:a,precision:l,logarithmicDepthBuffer:d,reversedDepthBuffer:u,maxTextures:f,maxVertexTextures:g,maxTextureSize:v,maxCubemapSize:_,maxAttributes:p,maxVertexUniforms:M,maxVaryings:E,maxFragmentUniforms:b,vertexTextures:R,maxSamples:T}}function $g(s){const e=this;let t=null,n=0,i=!1,r=!1;const o=new _i,a=new et,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(d,u){const f=d.length!==0||u||n!==0||i;return i=u,n=d.length,f},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(d,u){t=h(d,u,0)},this.setState=function(d,u,f){const g=d.clippingPlanes,v=d.clipIntersection,_=d.clipShadows,p=s.get(d);if(!i||g===null||g.length===0||r&&!_)r?h(null):l();else{const M=r?0:n,E=M*4;let b=p.clippingState||null;c.value=b,b=h(g,u,E,f);for(let R=0;R!==E;++R)b[R]=t[R];p.clippingState=b,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=M}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(d,u,f,g){const v=d!==null?d.length:0;let _=null;if(v!==0){if(_=c.value,g!==!0||_===null){const p=f+v*4,M=u.matrixWorldInverse;a.getNormalMatrix(M),(_===null||_.length<p)&&(_=new Float32Array(p));for(let E=0,b=f;E!==v;++E,b+=4)o.copy(d[E]).applyMatrix4(M,a),o.normal.toArray(_,b),_[b+3]=o.constant}c.value=_,c.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,_}}function Qg(s){let e=new WeakMap;function t(o,a){return a===mc?o.mapping=Cr:a===gc&&(o.mapping=Pr),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===mc||a===gc)if(e.has(o)){const c=e.get(o).texture;return t(c,o.mapping)}else{const c=o.image;if(c&&c.height>0){const l=new Vp(c.height);return l.fromEquirectangularTexture(s,o),e.set(o,l),o.addEventListener("dispose",i),t(l.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const c=e.get(a);c!==void 0&&(e.delete(a),c.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}const Er=4,Lh=[.125,.215,.35,.446,.526,.582],Bi=20,Ba=new Du,Fh=new rt;let Ga=null,Ha=0,Va=0,Wa=!1;const Ni=(1+Math.sqrt(5))/2,wr=1/Ni,Nh=[new q(-Ni,wr,0),new q(Ni,wr,0),new q(-wr,0,Ni),new q(wr,0,Ni),new q(0,Ni,-wr),new q(0,Ni,wr),new q(-1,1,-1),new q(1,1,-1),new q(-1,1,1),new q(1,1,1)],ew=new q;class Oh{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100,r={}){const{size:o=256,position:a=ew}=r;Ga=this._renderer.getRenderTarget(),Ha=this._renderer.getActiveCubeFace(),Va=this._renderer.getActiveMipmapLevel(),Wa=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const c=this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(e,n,i,c,a),t>0&&this._blur(c,0,0,t),this._applyPMREM(c),this._cleanup(c),c}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Bh(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=zh(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Ga,Ha,Va),this._renderer.xr.enabled=Wa,e.scissorTest=!1,po(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Cr||e.mapping===Pr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Ga=this._renderer.getRenderTarget(),Ha=this._renderer.getActiveCubeFace(),Va=this._renderer.getActiveMipmapLevel(),Wa=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:hn,minFilter:hn,generateMipmaps:!1,type:Rs,format:Nn,colorSpace:Dr,depthBuffer:!1},i=kh(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=kh(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=tw(r)),this._blurMaterial=nw(r,e,t)}return i}_compileMaterial(e){const t=new Wt(this._lodPlanes[0],e);this._renderer.compile(t,Ba)}_sceneToCubeUV(e,t,n,i,r){const c=new En(90,1,t,n),l=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,u=d.autoClear,f=d.toneMapping;d.getClearColor(Fh),d.toneMapping=wi,d.autoClear=!1,d.state.buffers.depth.getReversed()&&(d.setRenderTarget(i),d.clearDepth(),d.setRenderTarget(null));const v=new Vo({name:"PMREM.Background",side:dn,depthWrite:!1,depthTest:!1}),_=new Wt(new jn,v);let p=!1;const M=e.background;M?M.isColor&&(v.color.copy(M),e.background=null,p=!0):(v.color.copy(Fh),p=!0);for(let E=0;E<6;E++){const b=E%3;b===0?(c.up.set(0,l[E],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x+h[E],r.y,r.z)):b===1?(c.up.set(0,0,l[E]),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y+h[E],r.z)):(c.up.set(0,l[E],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y,r.z+h[E]));const R=this._cubeSize;po(i,b*R,E>2?R:0,R,R),d.setRenderTarget(i),p&&d.render(_,c),d.render(e,c)}_.geometry.dispose(),_.material.dispose(),d.toneMapping=f,d.autoClear=u,e.background=M}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Cr||e.mapping===Pr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Bh()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=zh());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new Wt(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const c=this._cubeSize;po(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(o,Ba)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=Nh[(i-r-1)%Nh.length];this._blur(e,r-1,r,o,a)}t.autoClear=n}_blur(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,d=new Wt(this._lodPlanes[i],l),u=l.uniforms,f=this._sizeLods[n]-1,g=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Bi-1),v=r/g,_=isFinite(r)?1+Math.floor(h*v):Bi;_>Bi&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${Bi}`);const p=[];let M=0;for(let A=0;A<Bi;++A){const I=A/v,x=Math.exp(-I*I/2);p.push(x),A===0?M+=x:A<_&&(M+=2*x)}for(let A=0;A<p.length;A++)p[A]=p[A]/M;u.envMap.value=e.texture,u.samples.value=_,u.weights.value=p,u.latitudinal.value=o==="latitudinal",a&&(u.poleAxis.value=a);const{_lodMax:E}=this;u.dTheta.value=g,u.mipInt.value=E-n;const b=this._sizeLods[i],R=3*b*(i>E-Er?i-E+Er:0),T=4*(this._cubeSize-b);po(t,R,T,3*b,2*b),c.setRenderTarget(t),c.render(d,Ba)}}function tw(s){const e=[],t=[],n=[];let i=s;const r=s-Er+1+Lh.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);t.push(a);let c=1/a;o>s-Er?c=Lh[o-s+Er-1]:o===0&&(c=0),n.push(c);const l=1/(a-2),h=-l,d=1+l,u=[h,h,d,h,d,d,h,h,d,d,h,d],f=6,g=6,v=3,_=2,p=1,M=new Float32Array(v*g*f),E=new Float32Array(_*g*f),b=new Float32Array(p*g*f);for(let T=0;T<f;T++){const A=T%3*2/3-1,I=T>2?0:-1,x=[A,I,0,A+2/3,I,0,A+2/3,I+1,0,A,I,0,A+2/3,I+1,0,A,I+1,0];M.set(x,v*g*T),E.set(u,_*g*T);const y=[T,T,T,T,T,T];b.set(y,p*g*T)}const R=new $t;R.setAttribute("position",new Tn(M,v)),R.setAttribute("uv",new Tn(E,_)),R.setAttribute("faceIndex",new Tn(b,p)),e.push(R),i>Er&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function kh(s,e,t){const n=new Ji(s,e,t);return n.texture.mapping=Go,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function po(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function nw(s,e,t){const n=new Float32Array(Bi),i=new q(0,1,0);return new xi({name:"SphericalGaussianBlur",defines:{n:Bi,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:bl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:gi,depthTest:!1,depthWrite:!1})}function zh(){return new xi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:bl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:gi,depthTest:!1,depthWrite:!1})}function Bh(){return new xi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:bl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:gi,depthTest:!1,depthWrite:!1})}function bl(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function iw(s){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const c=a.mapping,l=c===mc||c===gc,h=c===Cr||c===Pr;if(l||h){let d=e.get(a);const u=d!==void 0?d.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==u)return t===null&&(t=new Oh(s)),d=l?t.fromEquirectangular(a,d):t.fromCubemap(a,d),d.texture.pmremVersion=a.pmremVersion,e.set(a,d),d.texture;if(d!==void 0)return d.texture;{const f=a.image;return l&&f&&f.height>0||h&&f&&i(f)?(t===null&&(t=new Oh(s)),d=l?t.fromEquirectangular(a):t.fromCubemap(a),d.texture.pmremVersion=a.pmremVersion,e.set(a,d),a.addEventListener("dispose",r),d.texture):null}}}return a}function i(a){let c=0;const l=6;for(let h=0;h<l;h++)a[h]!==void 0&&c++;return c===l}function r(a){const c=a.target;c.removeEventListener("dispose",r);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function rw(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&Ss("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function sw(s,e,t,n){const i={},r=new WeakMap;function o(d){const u=d.target;u.index!==null&&e.remove(u.index);for(const g in u.attributes)e.remove(u.attributes[g]);u.removeEventListener("dispose",o),delete i[u.id];const f=r.get(u);f&&(e.remove(f),r.delete(u)),n.releaseStatesOfGeometry(u),u.isInstancedBufferGeometry===!0&&delete u._maxInstanceCount,t.memory.geometries--}function a(d,u){return i[u.id]===!0||(u.addEventListener("dispose",o),i[u.id]=!0,t.memory.geometries++),u}function c(d){const u=d.attributes;for(const f in u)e.update(u[f],s.ARRAY_BUFFER)}function l(d){const u=[],f=d.index,g=d.attributes.position;let v=0;if(f!==null){const M=f.array;v=f.version;for(let E=0,b=M.length;E<b;E+=3){const R=M[E+0],T=M[E+1],A=M[E+2];u.push(R,T,T,A,A,R)}}else if(g!==void 0){const M=g.array;v=g.version;for(let E=0,b=M.length/3-1;E<b;E+=3){const R=E+0,T=E+1,A=E+2;u.push(R,T,T,A,A,R)}}else return;const _=new(uu(u)?mu:_u)(u,1);_.version=v;const p=r.get(d);p&&e.remove(p),r.set(d,_)}function h(d){const u=r.get(d);if(u){const f=d.index;f!==null&&u.version<f.version&&l(d)}else l(d);return r.get(d)}return{get:a,update:c,getWireframeAttribute:h}}function ow(s,e,t){let n;function i(u){n=u}let r,o;function a(u){r=u.type,o=u.bytesPerElement}function c(u,f){s.drawElements(n,f,r,u*o),t.update(f,n,1)}function l(u,f,g){g!==0&&(s.drawElementsInstanced(n,f,r,u*o,g),t.update(f,n,g))}function h(u,f,g){if(g===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,r,u,0,g);let _=0;for(let p=0;p<g;p++)_+=f[p];t.update(_,n,1)}function d(u,f,g,v){if(g===0)return;const _=e.get("WEBGL_multi_draw");if(_===null)for(let p=0;p<u.length;p++)l(u[p]/o,f[p],v[p]);else{_.multiDrawElementsInstancedWEBGL(n,f,0,r,u,0,v,0,g);let p=0;for(let M=0;M<g;M++)p+=f[M]*v[M];t.update(p,n,1)}}this.setMode=i,this.setIndex=a,this.render=c,this.renderInstances=l,this.renderMultiDraw=h,this.renderMultiDrawInstances=d}function aw(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(t.calls++,o){case s.TRIANGLES:t.triangles+=a*(r/3);break;case s.LINES:t.lines+=a*(r/2);break;case s.LINE_STRIP:t.lines+=a*(r-1);break;case s.LINE_LOOP:t.lines+=a*r;break;case s.POINTS:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function cw(s,e,t){const n=new WeakMap,i=new At;function r(o,a,c){const l=o.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,d=h!==void 0?h.length:0;let u=n.get(a);if(u===void 0||u.count!==d){let x=function(){A.dispose(),n.delete(a),a.removeEventListener("dispose",x)};u!==void 0&&u.texture.dispose();const f=a.morphAttributes.position!==void 0,g=a.morphAttributes.normal!==void 0,v=a.morphAttributes.color!==void 0,_=a.morphAttributes.position||[],p=a.morphAttributes.normal||[],M=a.morphAttributes.color||[];let E=0;f===!0&&(E=1),g===!0&&(E=2),v===!0&&(E=3);let b=a.attributes.position.count*E,R=1;b>e.maxTextureSize&&(R=Math.ceil(b/e.maxTextureSize),b=e.maxTextureSize);const T=new Float32Array(b*R*4*d),A=new fu(T,b,R,d);A.type=Hn,A.needsUpdate=!0;const I=E*4;for(let y=0;y<d;y++){const U=_[y],D=p[y],F=M[y],N=b*R*4*y;for(let X=0;X<U.count;X++){const H=X*I;f===!0&&(i.fromBufferAttribute(U,X),T[N+H+0]=i.x,T[N+H+1]=i.y,T[N+H+2]=i.z,T[N+H+3]=0),g===!0&&(i.fromBufferAttribute(D,X),T[N+H+4]=i.x,T[N+H+5]=i.y,T[N+H+6]=i.z,T[N+H+7]=0),v===!0&&(i.fromBufferAttribute(F,X),T[N+H+8]=i.x,T[N+H+9]=i.y,T[N+H+10]=i.z,T[N+H+11]=F.itemSize===4?i.w:1)}}u={count:d,texture:A,size:new Qe(b,R)},n.set(a,u),a.addEventListener("dispose",x)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)c.getUniforms().setValue(s,"morphTexture",o.morphTexture,t);else{let f=0;for(let v=0;v<l.length;v++)f+=l[v];const g=a.morphTargetsRelative?1:1-f;c.getUniforms().setValue(s,"morphTargetBaseInfluence",g),c.getUniforms().setValue(s,"morphTargetInfluences",l)}c.getUniforms().setValue(s,"morphTargetsTexture",u.texture,t),c.getUniforms().setValue(s,"morphTargetsTextureSize",u.size)}return{update:r}}function lw(s,e,t,n){let i=new WeakMap;function r(c){const l=n.render.frame,h=c.geometry,d=e.get(c,h);if(i.get(d)!==l&&(e.update(d),i.set(d,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),i.get(c)!==l&&(t.update(c.instanceMatrix,s.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,s.ARRAY_BUFFER),i.set(c,l))),c.isSkinnedMesh){const u=c.skeleton;i.get(u)!==l&&(u.update(),i.set(u,l))}return d}function o(){i=new WeakMap}function a(c){const l=c.target;l.removeEventListener("dispose",a),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:r,dispose:o}}const Lu=new Jt,Gh=new Tu(1,1),Fu=new fu,Nu=new Ap,Ou=new bu,Hh=[],Vh=[],Wh=new Float32Array(16),jh=new Float32Array(9),Xh=new Float32Array(4);function kr(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=Hh[i];if(r===void 0&&(r=new Float32Array(i),Hh[i]=r),e!==0){n.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,s[o].toArray(r,a)}return r}function Bt(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function Gt(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function Wo(s,e){let t=Vh[e];t===void 0&&(t=new Int32Array(e),Vh[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function hw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function dw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Bt(t,e))return;s.uniform2fv(this.addr,e),Gt(t,e)}}function uw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Bt(t,e))return;s.uniform3fv(this.addr,e),Gt(t,e)}}function fw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Bt(t,e))return;s.uniform4fv(this.addr,e),Gt(t,e)}}function pw(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Bt(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),Gt(t,e)}else{if(Bt(t,n))return;Xh.set(n),s.uniformMatrix2fv(this.addr,!1,Xh),Gt(t,n)}}function _w(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Bt(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),Gt(t,e)}else{if(Bt(t,n))return;jh.set(n),s.uniformMatrix3fv(this.addr,!1,jh),Gt(t,n)}}function mw(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Bt(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),Gt(t,e)}else{if(Bt(t,n))return;Wh.set(n),s.uniformMatrix4fv(this.addr,!1,Wh),Gt(t,n)}}function gw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function ww(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Bt(t,e))return;s.uniform2iv(this.addr,e),Gt(t,e)}}function vw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Bt(t,e))return;s.uniform3iv(this.addr,e),Gt(t,e)}}function bw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Bt(t,e))return;s.uniform4iv(this.addr,e),Gt(t,e)}}function yw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function xw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Bt(t,e))return;s.uniform2uiv(this.addr,e),Gt(t,e)}}function Sw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Bt(t,e))return;s.uniform3uiv(this.addr,e),Gt(t,e)}}function Mw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Bt(t,e))return;s.uniform4uiv(this.addr,e),Gt(t,e)}}function Ew(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let r;this.type===s.SAMPLER_2D_SHADOW?(Gh.compareFunction=hu,r=Gh):r=Lu,t.setTexture2D(e||r,i)}function Tw(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Nu,i)}function Aw(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Ou,i)}function Rw(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Fu,i)}function Cw(s){switch(s){case 5126:return hw;case 35664:return dw;case 35665:return uw;case 35666:return fw;case 35674:return pw;case 35675:return _w;case 35676:return mw;case 5124:case 35670:return gw;case 35667:case 35671:return ww;case 35668:case 35672:return vw;case 35669:case 35673:return bw;case 5125:return yw;case 36294:return xw;case 36295:return Sw;case 36296:return Mw;case 35678:case 36198:case 36298:case 36306:case 35682:return Ew;case 35679:case 36299:case 36307:return Tw;case 35680:case 36300:case 36308:case 36293:return Aw;case 36289:case 36303:case 36311:case 36292:return Rw}}function Pw(s,e){s.uniform1fv(this.addr,e)}function Dw(s,e){const t=kr(e,this.size,2);s.uniform2fv(this.addr,t)}function Iw(s,e){const t=kr(e,this.size,3);s.uniform3fv(this.addr,t)}function Uw(s,e){const t=kr(e,this.size,4);s.uniform4fv(this.addr,t)}function Lw(s,e){const t=kr(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function Fw(s,e){const t=kr(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function Nw(s,e){const t=kr(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function Ow(s,e){s.uniform1iv(this.addr,e)}function kw(s,e){s.uniform2iv(this.addr,e)}function zw(s,e){s.uniform3iv(this.addr,e)}function Bw(s,e){s.uniform4iv(this.addr,e)}function Gw(s,e){s.uniform1uiv(this.addr,e)}function Hw(s,e){s.uniform2uiv(this.addr,e)}function Vw(s,e){s.uniform3uiv(this.addr,e)}function Ww(s,e){s.uniform4uiv(this.addr,e)}function jw(s,e,t){const n=this.cache,i=e.length,r=Wo(t,i);Bt(n,r)||(s.uniform1iv(this.addr,r),Gt(n,r));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||Lu,r[o])}function Xw(s,e,t){const n=this.cache,i=e.length,r=Wo(t,i);Bt(n,r)||(s.uniform1iv(this.addr,r),Gt(n,r));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||Nu,r[o])}function qw(s,e,t){const n=this.cache,i=e.length,r=Wo(t,i);Bt(n,r)||(s.uniform1iv(this.addr,r),Gt(n,r));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||Ou,r[o])}function Yw(s,e,t){const n=this.cache,i=e.length,r=Wo(t,i);Bt(n,r)||(s.uniform1iv(this.addr,r),Gt(n,r));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||Fu,r[o])}function Kw(s){switch(s){case 5126:return Pw;case 35664:return Dw;case 35665:return Iw;case 35666:return Uw;case 35674:return Lw;case 35675:return Fw;case 35676:return Nw;case 5124:case 35670:return Ow;case 35667:case 35671:return kw;case 35668:case 35672:return zw;case 35669:case 35673:return Bw;case 5125:return Gw;case 36294:return Hw;case 36295:return Vw;case 36296:return Ww;case 35678:case 36198:case 36298:case 36306:case 35682:return jw;case 35679:case 36299:case 36307:return Xw;case 35680:case 36300:case 36308:case 36293:return qw;case 36289:case 36303:case 36311:case 36292:return Yw}}class Jw{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=Cw(t.type)}}class Zw{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=Kw(t.type)}}class $w{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(e,t[a.id],n)}}}const ja=/(\w+)(\])?(\[|\.)?/g;function qh(s,e){s.seq.push(e),s.map[e.id]=e}function Qw(s,e,t){const n=s.name,i=n.length;for(ja.lastIndex=0;;){const r=ja.exec(n),o=ja.lastIndex;let a=r[1];const c=r[2]==="]",l=r[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===i){qh(t,l===void 0?new Jw(a,s,e):new Zw(a,s,e));break}else{let d=t.map[a];d===void 0&&(d=new $w(a),qh(t,d)),t=d}}}class Ro{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),o=e.getUniformLocation(t,r.name);Qw(r,o,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,o=t.length;r!==o;++r){const a=t[r],c=n[a.id];c.needsUpdate!==!1&&a.setValue(e,c.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function Yh(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}const ev=37297;let tv=0;function nv(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}const Kh=new et;function iv(s){ut._getMatrix(Kh,ut.workingColorSpace,s);const e=`mat3( ${Kh.elements.map(t=>t.toFixed(4))} )`;switch(ut.getTransfer(s)){case Do:return[e,"LinearTransferOETF"];case wt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function Jh(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),r=(s.getShaderInfoLog(e)||"").trim();if(n&&r==="")return"";const o=/ERROR: 0:(\d+)/.exec(r);if(o){const a=parseInt(o[1]);return t.toUpperCase()+`

`+r+`

`+nv(s.getShaderSource(e),a)}else return r}function rv(s,e){const t=iv(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function sv(s,e){let t;switch(e){case np:t="Linear";break;case ip:t="Reinhard";break;case rp:t="Cineon";break;case sp:t="ACESFilmic";break;case ap:t="AgX";break;case cp:t="Neutral";break;case op:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const _o=new q;function ov(){ut.getLuminanceCoefficients(_o);const s=_o.x.toFixed(4),e=_o.y.toFixed(4),t=_o.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function av(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(ls).join(`
`)}function cv(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function lv(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),o=r.name;let a=1;r.type===s.FLOAT_MAT2&&(a=2),r.type===s.FLOAT_MAT3&&(a=3),r.type===s.FLOAT_MAT4&&(a=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:a}}return t}function ls(s){return s!==""}function Zh(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function $h(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const hv=/^[ \t]*#include +<([\w\d./]+)>/gm;function el(s){return s.replace(hv,uv)}const dv=new Map;function uv(s,e){let t=nt[e];if(t===void 0){const n=dv.get(e);if(n!==void 0)t=nt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return el(t)}const fv=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Qh(s){return s.replace(fv,pv)}function pv(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function ed(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function _v(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Zd?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===$d?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Qn&&(e="SHADOWMAP_TYPE_VSM"),e}function mv(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Cr:case Pr:e="ENVMAP_TYPE_CUBE";break;case Go:e="ENVMAP_TYPE_CUBE_UV";break}return e}function gv(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Pr:e="ENVMAP_MODE_REFRACTION";break}return e}function wv(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case Qd:e="ENVMAP_BLENDING_MULTIPLY";break;case ep:e="ENVMAP_BLENDING_MIX";break;case tp:e="ENVMAP_BLENDING_ADD";break}return e}function vv(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function bv(s,e,t,n){const i=s.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const c=_v(t),l=mv(t),h=gv(t),d=wv(t),u=vv(t),f=av(t),g=cv(r),v=i.createProgram();let _,p,M=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g].filter(ls).join(`
`),_.length>0&&(_+=`
`),p=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g].filter(ls).join(`
`),p.length>0&&(p+=`
`)):(_=[ed(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",t.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ls).join(`
`),p=[ed(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",t.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==wi?"#define TONE_MAPPING":"",t.toneMapping!==wi?nt.tonemapping_pars_fragment:"",t.toneMapping!==wi?sv("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",nt.colorspace_pars_fragment,rv("linearToOutputTexel",t.outputColorSpace),ov(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ls).join(`
`)),o=el(o),o=Zh(o,t),o=$h(o,t),a=el(a),a=Zh(a,t),a=$h(a,t),o=Qh(o),a=Qh(a),t.isRawShaderMaterial!==!0&&(M=`#version 300 es
`,_=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,p=["#define varying in",t.glslVersion===th?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===th?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const E=M+_+o,b=M+p+a,R=Yh(i,i.VERTEX_SHADER,E),T=Yh(i,i.FRAGMENT_SHADER,b);i.attachShader(v,R),i.attachShader(v,T),t.index0AttributeName!==void 0?i.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(v,0,"position"),i.linkProgram(v);function A(U){if(s.debug.checkShaderErrors){const D=i.getProgramInfoLog(v)||"",F=i.getShaderInfoLog(R)||"",N=i.getShaderInfoLog(T)||"",X=D.trim(),H=F.trim(),oe=N.trim();let K=!0,Q=!0;if(i.getProgramParameter(v,i.LINK_STATUS)===!1)if(K=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,v,R,T);else{const $=Jh(i,R,"vertex"),k=Jh(i,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(v,i.VALIDATE_STATUS)+`

Material Name: `+U.name+`
Material Type: `+U.type+`

Program Info Log: `+X+`
`+$+`
`+k)}else X!==""?console.warn("THREE.WebGLProgram: Program Info Log:",X):(H===""||oe==="")&&(Q=!1);Q&&(U.diagnostics={runnable:K,programLog:X,vertexShader:{log:H,prefix:_},fragmentShader:{log:oe,prefix:p}})}i.deleteShader(R),i.deleteShader(T),I=new Ro(i,v),x=lv(i,v)}let I;this.getUniforms=function(){return I===void 0&&A(this),I};let x;this.getAttributes=function(){return x===void 0&&A(this),x};let y=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return y===!1&&(y=i.getProgramParameter(v,ev)),y},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=tv++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=R,this.fragmentShader=T,this}let yv=0;class xv{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new Sv(e),t.set(e,n)),n}}class Sv{constructor(e){this.id=yv++,this.code=e,this.usedTimes=0}}function Mv(s,e,t,n,i,r,o){const a=new gl,c=new xv,l=new Set,h=[],d=i.logarithmicDepthBuffer,u=i.vertexTextures;let f=i.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(x){return l.add(x),x===0?"uv":`uv${x}`}function _(x,y,U,D,F){const N=D.fog,X=F.geometry,H=x.isMeshStandardMaterial?D.environment:null,oe=(x.isMeshStandardMaterial?t:e).get(x.envMap||H),K=oe&&oe.mapping===Go?oe.image.height:null,Q=g[x.type];x.precision!==null&&(f=i.getMaxPrecision(x.precision),f!==x.precision&&console.warn("THREE.WebGLProgram.getParameters:",x.precision,"not supported, using",f,"instead."));const $=X.morphAttributes.position||X.morphAttributes.normal||X.morphAttributes.color,k=$!==void 0?$.length:0;let Y=0;X.morphAttributes.position!==void 0&&(Y=1),X.morphAttributes.normal!==void 0&&(Y=2),X.morphAttributes.color!==void 0&&(Y=3);let ie,se,ee,W;if(Q){const qe=Bn[Q];ie=qe.vertexShader,se=qe.fragmentShader}else ie=x.vertexShader,se=x.fragmentShader,c.update(x),ee=c.getVertexShaderID(x),W=c.getFragmentShaderID(x);const V=s.getRenderTarget(),te=s.state.buffers.depth.getReversed(),ge=F.isInstancedMesh===!0,we=F.isBatchedMesh===!0,me=!!x.map,be=!!x.matcap,L=!!oe,Oe=!!x.aoMap,Ee=!!x.lightMap,Te=!!x.bumpMap,ve=!!x.normalMap,Se=!!x.displacementMap,_e=!!x.emissiveMap,Re=!!x.metalnessMap,fe=!!x.roughnessMap,Ve=x.anisotropy>0,P=x.clearcoat>0,S=x.dispersion>0,B=x.iridescence>0,re=x.sheen>0,ne=x.transmission>0,J=Ve&&!!x.anisotropyMap,Me=P&&!!x.clearcoatMap,ue=P&&!!x.clearcoatNormalMap,De=P&&!!x.clearcoatRoughnessMap,Ie=B&&!!x.iridescenceMap,de=B&&!!x.iridescenceThicknessMap,ye=re&&!!x.sheenColorMap,Ae=re&&!!x.sheenRoughnessMap,Le=!!x.specularMap,Ce=!!x.specularColorMap,Xe=!!x.specularIntensityMap,G=ne&&!!x.transmissionMap,he=ne&&!!x.thicknessMap,xe=!!x.gradientMap,ke=!!x.alphaMap,pe=x.alphaTest>0,ae=!!x.alphaHash,Ue=!!x.extensions;let Be=wi;x.toneMapped&&(V===null||V.isXRRenderTarget===!0)&&(Be=s.toneMapping);const Ge={shaderID:Q,shaderType:x.type,shaderName:x.name,vertexShader:ie,fragmentShader:se,defines:x.defines,customVertexShaderID:ee,customFragmentShaderID:W,isRawShaderMaterial:x.isRawShaderMaterial===!0,glslVersion:x.glslVersion,precision:f,batching:we,batchingColor:we&&F._colorsTexture!==null,instancing:ge,instancingColor:ge&&F.instanceColor!==null,instancingMorph:ge&&F.morphTexture!==null,supportsVertexTextures:u,outputColorSpace:V===null?s.outputColorSpace:V.isXRRenderTarget===!0?V.texture.colorSpace:Dr,alphaToCoverage:!!x.alphaToCoverage,map:me,matcap:be,envMap:L,envMapMode:L&&oe.mapping,envMapCubeUVHeight:K,aoMap:Oe,lightMap:Ee,bumpMap:Te,normalMap:ve,displacementMap:u&&Se,emissiveMap:_e,normalMapObjectSpace:ve&&x.normalMapType===dp,normalMapTangentSpace:ve&&x.normalMapType===lu,metalnessMap:Re,roughnessMap:fe,anisotropy:Ve,anisotropyMap:J,clearcoat:P,clearcoatMap:Me,clearcoatNormalMap:ue,clearcoatRoughnessMap:De,dispersion:S,iridescence:B,iridescenceMap:Ie,iridescenceThicknessMap:de,sheen:re,sheenColorMap:ye,sheenRoughnessMap:Ae,specularMap:Le,specularColorMap:Ce,specularIntensityMap:Xe,transmission:ne,transmissionMap:G,thicknessMap:he,gradientMap:xe,opaque:x.transparent===!1&&x.blending===Tr&&x.alphaToCoverage===!1,alphaMap:ke,alphaTest:pe,alphaHash:ae,combine:x.combine,mapUv:me&&v(x.map.channel),aoMapUv:Oe&&v(x.aoMap.channel),lightMapUv:Ee&&v(x.lightMap.channel),bumpMapUv:Te&&v(x.bumpMap.channel),normalMapUv:ve&&v(x.normalMap.channel),displacementMapUv:Se&&v(x.displacementMap.channel),emissiveMapUv:_e&&v(x.emissiveMap.channel),metalnessMapUv:Re&&v(x.metalnessMap.channel),roughnessMapUv:fe&&v(x.roughnessMap.channel),anisotropyMapUv:J&&v(x.anisotropyMap.channel),clearcoatMapUv:Me&&v(x.clearcoatMap.channel),clearcoatNormalMapUv:ue&&v(x.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:De&&v(x.clearcoatRoughnessMap.channel),iridescenceMapUv:Ie&&v(x.iridescenceMap.channel),iridescenceThicknessMapUv:de&&v(x.iridescenceThicknessMap.channel),sheenColorMapUv:ye&&v(x.sheenColorMap.channel),sheenRoughnessMapUv:Ae&&v(x.sheenRoughnessMap.channel),specularMapUv:Le&&v(x.specularMap.channel),specularColorMapUv:Ce&&v(x.specularColorMap.channel),specularIntensityMapUv:Xe&&v(x.specularIntensityMap.channel),transmissionMapUv:G&&v(x.transmissionMap.channel),thicknessMapUv:he&&v(x.thicknessMap.channel),alphaMapUv:ke&&v(x.alphaMap.channel),vertexTangents:!!X.attributes.tangent&&(ve||Ve),vertexColors:x.vertexColors,vertexAlphas:x.vertexColors===!0&&!!X.attributes.color&&X.attributes.color.itemSize===4,pointsUvs:F.isPoints===!0&&!!X.attributes.uv&&(me||ke),fog:!!N,useFog:x.fog===!0,fogExp2:!!N&&N.isFogExp2,flatShading:x.flatShading===!0&&x.wireframe===!1,sizeAttenuation:x.sizeAttenuation===!0,logarithmicDepthBuffer:d,reversedDepthBuffer:te,skinning:F.isSkinnedMesh===!0,morphTargets:X.morphAttributes.position!==void 0,morphNormals:X.morphAttributes.normal!==void 0,morphColors:X.morphAttributes.color!==void 0,morphTargetsCount:k,morphTextureStride:Y,numDirLights:y.directional.length,numPointLights:y.point.length,numSpotLights:y.spot.length,numSpotLightMaps:y.spotLightMap.length,numRectAreaLights:y.rectArea.length,numHemiLights:y.hemi.length,numDirLightShadows:y.directionalShadowMap.length,numPointLightShadows:y.pointShadowMap.length,numSpotLightShadows:y.spotShadowMap.length,numSpotLightShadowsWithMaps:y.numSpotLightShadowsWithMaps,numLightProbes:y.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:x.dithering,shadowMapEnabled:s.shadowMap.enabled&&U.length>0,shadowMapType:s.shadowMap.type,toneMapping:Be,decodeVideoTexture:me&&x.map.isVideoTexture===!0&&ut.getTransfer(x.map.colorSpace)===wt,decodeVideoTextureEmissive:_e&&x.emissiveMap.isVideoTexture===!0&&ut.getTransfer(x.emissiveMap.colorSpace)===wt,premultipliedAlpha:x.premultipliedAlpha,doubleSided:x.side===Fn,flipSided:x.side===dn,useDepthPacking:x.depthPacking>=0,depthPacking:x.depthPacking||0,index0AttributeName:x.index0AttributeName,extensionClipCullDistance:Ue&&x.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Ue&&x.extensions.multiDraw===!0||we)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:x.customProgramCacheKey()};return Ge.vertexUv1s=l.has(1),Ge.vertexUv2s=l.has(2),Ge.vertexUv3s=l.has(3),l.clear(),Ge}function p(x){const y=[];if(x.shaderID?y.push(x.shaderID):(y.push(x.customVertexShaderID),y.push(x.customFragmentShaderID)),x.defines!==void 0)for(const U in x.defines)y.push(U),y.push(x.defines[U]);return x.isRawShaderMaterial===!1&&(M(y,x),E(y,x),y.push(s.outputColorSpace)),y.push(x.customProgramCacheKey),y.join()}function M(x,y){x.push(y.precision),x.push(y.outputColorSpace),x.push(y.envMapMode),x.push(y.envMapCubeUVHeight),x.push(y.mapUv),x.push(y.alphaMapUv),x.push(y.lightMapUv),x.push(y.aoMapUv),x.push(y.bumpMapUv),x.push(y.normalMapUv),x.push(y.displacementMapUv),x.push(y.emissiveMapUv),x.push(y.metalnessMapUv),x.push(y.roughnessMapUv),x.push(y.anisotropyMapUv),x.push(y.clearcoatMapUv),x.push(y.clearcoatNormalMapUv),x.push(y.clearcoatRoughnessMapUv),x.push(y.iridescenceMapUv),x.push(y.iridescenceThicknessMapUv),x.push(y.sheenColorMapUv),x.push(y.sheenRoughnessMapUv),x.push(y.specularMapUv),x.push(y.specularColorMapUv),x.push(y.specularIntensityMapUv),x.push(y.transmissionMapUv),x.push(y.thicknessMapUv),x.push(y.combine),x.push(y.fogExp2),x.push(y.sizeAttenuation),x.push(y.morphTargetsCount),x.push(y.morphAttributeCount),x.push(y.numDirLights),x.push(y.numPointLights),x.push(y.numSpotLights),x.push(y.numSpotLightMaps),x.push(y.numHemiLights),x.push(y.numRectAreaLights),x.push(y.numDirLightShadows),x.push(y.numPointLightShadows),x.push(y.numSpotLightShadows),x.push(y.numSpotLightShadowsWithMaps),x.push(y.numLightProbes),x.push(y.shadowMapType),x.push(y.toneMapping),x.push(y.numClippingPlanes),x.push(y.numClipIntersection),x.push(y.depthPacking)}function E(x,y){a.disableAll(),y.supportsVertexTextures&&a.enable(0),y.instancing&&a.enable(1),y.instancingColor&&a.enable(2),y.instancingMorph&&a.enable(3),y.matcap&&a.enable(4),y.envMap&&a.enable(5),y.normalMapObjectSpace&&a.enable(6),y.normalMapTangentSpace&&a.enable(7),y.clearcoat&&a.enable(8),y.iridescence&&a.enable(9),y.alphaTest&&a.enable(10),y.vertexColors&&a.enable(11),y.vertexAlphas&&a.enable(12),y.vertexUv1s&&a.enable(13),y.vertexUv2s&&a.enable(14),y.vertexUv3s&&a.enable(15),y.vertexTangents&&a.enable(16),y.anisotropy&&a.enable(17),y.alphaHash&&a.enable(18),y.batching&&a.enable(19),y.dispersion&&a.enable(20),y.batchingColor&&a.enable(21),y.gradientMap&&a.enable(22),x.push(a.mask),a.disableAll(),y.fog&&a.enable(0),y.useFog&&a.enable(1),y.flatShading&&a.enable(2),y.logarithmicDepthBuffer&&a.enable(3),y.reversedDepthBuffer&&a.enable(4),y.skinning&&a.enable(5),y.morphTargets&&a.enable(6),y.morphNormals&&a.enable(7),y.morphColors&&a.enable(8),y.premultipliedAlpha&&a.enable(9),y.shadowMapEnabled&&a.enable(10),y.doubleSided&&a.enable(11),y.flipSided&&a.enable(12),y.useDepthPacking&&a.enable(13),y.dithering&&a.enable(14),y.transmission&&a.enable(15),y.sheen&&a.enable(16),y.opaque&&a.enable(17),y.pointsUvs&&a.enable(18),y.decodeVideoTexture&&a.enable(19),y.decodeVideoTextureEmissive&&a.enable(20),y.alphaToCoverage&&a.enable(21),x.push(a.mask)}function b(x){const y=g[x.type];let U;if(y){const D=Bn[y];U=wu.clone(D.uniforms)}else U=x.uniforms;return U}function R(x,y){let U;for(let D=0,F=h.length;D<F;D++){const N=h[D];if(N.cacheKey===y){U=N,++U.usedTimes;break}}return U===void 0&&(U=new bv(s,y,x,r),h.push(U)),U}function T(x){if(--x.usedTimes===0){const y=h.indexOf(x);h[y]=h[h.length-1],h.pop(),x.destroy()}}function A(x){c.remove(x)}function I(){c.dispose()}return{getParameters:_,getProgramCacheKey:p,getUniforms:b,acquireProgram:R,releaseProgram:T,releaseShaderCache:A,programs:h,dispose:I}}function Ev(){let s=new WeakMap;function e(o){return s.has(o)}function t(o){let a=s.get(o);return a===void 0&&(a={},s.set(o,a)),a}function n(o){s.delete(o)}function i(o,a,c){s.get(o)[a]=c}function r(){s=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:r}}function Tv(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function td(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function nd(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function o(d,u,f,g,v,_){let p=s[e];return p===void 0?(p={id:d.id,object:d,geometry:u,material:f,groupOrder:g,renderOrder:d.renderOrder,z:v,group:_},s[e]=p):(p.id=d.id,p.object=d,p.geometry=u,p.material=f,p.groupOrder=g,p.renderOrder=d.renderOrder,p.z=v,p.group=_),e++,p}function a(d,u,f,g,v,_){const p=o(d,u,f,g,v,_);f.transmission>0?n.push(p):f.transparent===!0?i.push(p):t.push(p)}function c(d,u,f,g,v,_){const p=o(d,u,f,g,v,_);f.transmission>0?n.unshift(p):f.transparent===!0?i.unshift(p):t.unshift(p)}function l(d,u){t.length>1&&t.sort(d||Tv),n.length>1&&n.sort(u||td),i.length>1&&i.sort(u||td)}function h(){for(let d=e,u=s.length;d<u;d++){const f=s[d];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:a,unshift:c,finish:h,sort:l}}function Av(){let s=new WeakMap;function e(n,i){const r=s.get(n);let o;return r===void 0?(o=new nd,s.set(n,[o])):i>=r.length?(o=new nd,r.push(o)):o=r[i],o}function t(){s=new WeakMap}return{get:e,dispose:t}}function Rv(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new q,color:new rt};break;case"SpotLight":t={position:new q,direction:new q,color:new rt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new q,color:new rt,distance:0,decay:0};break;case"HemisphereLight":t={direction:new q,skyColor:new rt,groundColor:new rt};break;case"RectAreaLight":t={color:new rt,position:new q,halfWidth:new q,halfHeight:new q};break}return s[e.id]=t,t}}}function Cv(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Qe};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Qe};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Qe,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let Pv=0;function Dv(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function Iv(s){const e=new Rv,t=Cv(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)n.probe.push(new q);const i=new q,r=new ft,o=new ft;function a(l){let h=0,d=0,u=0;for(let x=0;x<9;x++)n.probe[x].set(0,0,0);let f=0,g=0,v=0,_=0,p=0,M=0,E=0,b=0,R=0,T=0,A=0;l.sort(Dv);for(let x=0,y=l.length;x<y;x++){const U=l[x],D=U.color,F=U.intensity,N=U.distance,X=U.shadow&&U.shadow.map?U.shadow.map.texture:null;if(U.isAmbientLight)h+=D.r*F,d+=D.g*F,u+=D.b*F;else if(U.isLightProbe){for(let H=0;H<9;H++)n.probe[H].addScaledVector(U.sh.coefficients[H],F);A++}else if(U.isDirectionalLight){const H=e.get(U);if(H.color.copy(U.color).multiplyScalar(U.intensity),U.castShadow){const oe=U.shadow,K=t.get(U);K.shadowIntensity=oe.intensity,K.shadowBias=oe.bias,K.shadowNormalBias=oe.normalBias,K.shadowRadius=oe.radius,K.shadowMapSize=oe.mapSize,n.directionalShadow[f]=K,n.directionalShadowMap[f]=X,n.directionalShadowMatrix[f]=U.shadow.matrix,M++}n.directional[f]=H,f++}else if(U.isSpotLight){const H=e.get(U);H.position.setFromMatrixPosition(U.matrixWorld),H.color.copy(D).multiplyScalar(F),H.distance=N,H.coneCos=Math.cos(U.angle),H.penumbraCos=Math.cos(U.angle*(1-U.penumbra)),H.decay=U.decay,n.spot[v]=H;const oe=U.shadow;if(U.map&&(n.spotLightMap[R]=U.map,R++,oe.updateMatrices(U),U.castShadow&&T++),n.spotLightMatrix[v]=oe.matrix,U.castShadow){const K=t.get(U);K.shadowIntensity=oe.intensity,K.shadowBias=oe.bias,K.shadowNormalBias=oe.normalBias,K.shadowRadius=oe.radius,K.shadowMapSize=oe.mapSize,n.spotShadow[v]=K,n.spotShadowMap[v]=X,b++}v++}else if(U.isRectAreaLight){const H=e.get(U);H.color.copy(D).multiplyScalar(F),H.halfWidth.set(U.width*.5,0,0),H.halfHeight.set(0,U.height*.5,0),n.rectArea[_]=H,_++}else if(U.isPointLight){const H=e.get(U);if(H.color.copy(U.color).multiplyScalar(U.intensity),H.distance=U.distance,H.decay=U.decay,U.castShadow){const oe=U.shadow,K=t.get(U);K.shadowIntensity=oe.intensity,K.shadowBias=oe.bias,K.shadowNormalBias=oe.normalBias,K.shadowRadius=oe.radius,K.shadowMapSize=oe.mapSize,K.shadowCameraNear=oe.camera.near,K.shadowCameraFar=oe.camera.far,n.pointShadow[g]=K,n.pointShadowMap[g]=X,n.pointShadowMatrix[g]=U.shadow.matrix,E++}n.point[g]=H,g++}else if(U.isHemisphereLight){const H=e.get(U);H.skyColor.copy(U.color).multiplyScalar(F),H.groundColor.copy(U.groundColor).multiplyScalar(F),n.hemi[p]=H,p++}}_>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Fe.LTC_FLOAT_1,n.rectAreaLTC2=Fe.LTC_FLOAT_2):(n.rectAreaLTC1=Fe.LTC_HALF_1,n.rectAreaLTC2=Fe.LTC_HALF_2)),n.ambient[0]=h,n.ambient[1]=d,n.ambient[2]=u;const I=n.hash;(I.directionalLength!==f||I.pointLength!==g||I.spotLength!==v||I.rectAreaLength!==_||I.hemiLength!==p||I.numDirectionalShadows!==M||I.numPointShadows!==E||I.numSpotShadows!==b||I.numSpotMaps!==R||I.numLightProbes!==A)&&(n.directional.length=f,n.spot.length=v,n.rectArea.length=_,n.point.length=g,n.hemi.length=p,n.directionalShadow.length=M,n.directionalShadowMap.length=M,n.pointShadow.length=E,n.pointShadowMap.length=E,n.spotShadow.length=b,n.spotShadowMap.length=b,n.directionalShadowMatrix.length=M,n.pointShadowMatrix.length=E,n.spotLightMatrix.length=b+R-T,n.spotLightMap.length=R,n.numSpotLightShadowsWithMaps=T,n.numLightProbes=A,I.directionalLength=f,I.pointLength=g,I.spotLength=v,I.rectAreaLength=_,I.hemiLength=p,I.numDirectionalShadows=M,I.numPointShadows=E,I.numSpotShadows=b,I.numSpotMaps=R,I.numLightProbes=A,n.version=Pv++)}function c(l,h){let d=0,u=0,f=0,g=0,v=0;const _=h.matrixWorldInverse;for(let p=0,M=l.length;p<M;p++){const E=l[p];if(E.isDirectionalLight){const b=n.directional[d];b.direction.setFromMatrixPosition(E.matrixWorld),i.setFromMatrixPosition(E.target.matrixWorld),b.direction.sub(i),b.direction.transformDirection(_),d++}else if(E.isSpotLight){const b=n.spot[f];b.position.setFromMatrixPosition(E.matrixWorld),b.position.applyMatrix4(_),b.direction.setFromMatrixPosition(E.matrixWorld),i.setFromMatrixPosition(E.target.matrixWorld),b.direction.sub(i),b.direction.transformDirection(_),f++}else if(E.isRectAreaLight){const b=n.rectArea[g];b.position.setFromMatrixPosition(E.matrixWorld),b.position.applyMatrix4(_),o.identity(),r.copy(E.matrixWorld),r.premultiply(_),o.extractRotation(r),b.halfWidth.set(E.width*.5,0,0),b.halfHeight.set(0,E.height*.5,0),b.halfWidth.applyMatrix4(o),b.halfHeight.applyMatrix4(o),g++}else if(E.isPointLight){const b=n.point[u];b.position.setFromMatrixPosition(E.matrixWorld),b.position.applyMatrix4(_),u++}else if(E.isHemisphereLight){const b=n.hemi[v];b.direction.setFromMatrixPosition(E.matrixWorld),b.direction.transformDirection(_),v++}}}return{setup:a,setupView:c,state:n}}function id(s){const e=new Iv(s),t=[],n=[];function i(h){l.camera=h,t.length=0,n.length=0}function r(h){t.push(h)}function o(h){n.push(h)}function a(){e.setup(t)}function c(h){e.setupView(t,h)}const l={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:l,setupLights:a,setupLightsView:c,pushLight:r,pushShadow:o}}function Uv(s){let e=new WeakMap;function t(i,r=0){const o=e.get(i);let a;return o===void 0?(a=new id(s),e.set(i,[a])):r>=o.length?(a=new id(s),o.push(a)):a=o[r],a}function n(){e=new WeakMap}return{get:t,dispose:n}}const Lv=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Fv=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Nv(s,e,t){let n=new wl;const i=new Qe,r=new Qe,o=new At,a=new Ru({depthPacking:cu}),c=new Cu,l={},h=t.maxTextureSize,d={[bi]:dn,[dn]:bi,[Fn]:Fn},u=new xi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Qe},radius:{value:4}},vertexShader:Lv,fragmentShader:Fv}),f=u.clone();f.defines.HORIZONTAL_PASS=1;const g=new $t;g.setAttribute("position",new Tn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new Wt(g,u),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Zd;let p=this.type;this.render=function(T,A,I){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||T.length===0)return;const x=s.getRenderTarget(),y=s.getActiveCubeFace(),U=s.getActiveMipmapLevel(),D=s.state;D.setBlending(gi),D.buffers.depth.getReversed()===!0?D.buffers.color.setClear(0,0,0,0):D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);const F=p!==Qn&&this.type===Qn,N=p===Qn&&this.type!==Qn;for(let X=0,H=T.length;X<H;X++){const oe=T[X],K=oe.shadow;if(K===void 0){console.warn("THREE.WebGLShadowMap:",oe,"has no shadow.");continue}if(K.autoUpdate===!1&&K.needsUpdate===!1)continue;i.copy(K.mapSize);const Q=K.getFrameExtents();if(i.multiply(Q),r.copy(K.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(r.x=Math.floor(h/Q.x),i.x=r.x*Q.x,K.mapSize.x=r.x),i.y>h&&(r.y=Math.floor(h/Q.y),i.y=r.y*Q.y,K.mapSize.y=r.y)),K.map===null||F===!0||N===!0){const k=this.type!==Qn?{minFilter:mn,magFilter:mn}:{};K.map!==null&&K.map.dispose(),K.map=new Ji(i.x,i.y,k),K.map.texture.name=oe.name+".shadowMap",K.camera.updateProjectionMatrix()}s.setRenderTarget(K.map),s.clear();const $=K.getViewportCount();for(let k=0;k<$;k++){const Y=K.getViewport(k);o.set(r.x*Y.x,r.y*Y.y,r.x*Y.z,r.y*Y.w),D.viewport(o),K.updateMatrices(oe,k),n=K.getFrustum(),b(A,I,K.camera,oe,this.type)}K.isPointLightShadow!==!0&&this.type===Qn&&M(K,I),K.needsUpdate=!1}p=this.type,_.needsUpdate=!1,s.setRenderTarget(x,y,U)};function M(T,A){const I=e.update(v);u.defines.VSM_SAMPLES!==T.blurSamples&&(u.defines.VSM_SAMPLES=T.blurSamples,f.defines.VSM_SAMPLES=T.blurSamples,u.needsUpdate=!0,f.needsUpdate=!0),T.mapPass===null&&(T.mapPass=new Ji(i.x,i.y)),u.uniforms.shadow_pass.value=T.map.texture,u.uniforms.resolution.value=T.mapSize,u.uniforms.radius.value=T.radius,s.setRenderTarget(T.mapPass),s.clear(),s.renderBufferDirect(A,null,I,u,v,null),f.uniforms.shadow_pass.value=T.mapPass.texture,f.uniforms.resolution.value=T.mapSize,f.uniforms.radius.value=T.radius,s.setRenderTarget(T.map),s.clear(),s.renderBufferDirect(A,null,I,f,v,null)}function E(T,A,I,x){let y=null;const U=I.isPointLight===!0?T.customDistanceMaterial:T.customDepthMaterial;if(U!==void 0)y=U;else if(y=I.isPointLight===!0?c:a,s.localClippingEnabled&&A.clipShadows===!0&&Array.isArray(A.clippingPlanes)&&A.clippingPlanes.length!==0||A.displacementMap&&A.displacementScale!==0||A.alphaMap&&A.alphaTest>0||A.map&&A.alphaTest>0||A.alphaToCoverage===!0){const D=y.uuid,F=A.uuid;let N=l[D];N===void 0&&(N={},l[D]=N);let X=N[F];X===void 0&&(X=y.clone(),N[F]=X,A.addEventListener("dispose",R)),y=X}if(y.visible=A.visible,y.wireframe=A.wireframe,x===Qn?y.side=A.shadowSide!==null?A.shadowSide:A.side:y.side=A.shadowSide!==null?A.shadowSide:d[A.side],y.alphaMap=A.alphaMap,y.alphaTest=A.alphaToCoverage===!0?.5:A.alphaTest,y.map=A.map,y.clipShadows=A.clipShadows,y.clippingPlanes=A.clippingPlanes,y.clipIntersection=A.clipIntersection,y.displacementMap=A.displacementMap,y.displacementScale=A.displacementScale,y.displacementBias=A.displacementBias,y.wireframeLinewidth=A.wireframeLinewidth,y.linewidth=A.linewidth,I.isPointLight===!0&&y.isMeshDistanceMaterial===!0){const D=s.properties.get(y);D.light=I}return y}function b(T,A,I,x,y){if(T.visible===!1)return;if(T.layers.test(A.layers)&&(T.isMesh||T.isLine||T.isPoints)&&(T.castShadow||T.receiveShadow&&y===Qn)&&(!T.frustumCulled||n.intersectsObject(T))){T.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,T.matrixWorld);const F=e.update(T),N=T.material;if(Array.isArray(N)){const X=F.groups;for(let H=0,oe=X.length;H<oe;H++){const K=X[H],Q=N[K.materialIndex];if(Q&&Q.visible){const $=E(T,Q,x,y);T.onBeforeShadow(s,T,A,I,F,$,K),s.renderBufferDirect(I,null,F,$,T,K),T.onAfterShadow(s,T,A,I,F,$,K)}}}else if(N.visible){const X=E(T,N,x,y);T.onBeforeShadow(s,T,A,I,F,X,null),s.renderBufferDirect(I,null,F,X,T,null),T.onAfterShadow(s,T,A,I,F,X,null)}}const D=T.children;for(let F=0,N=D.length;F<N;F++)b(D[F],A,I,x,y)}function R(T){T.target.removeEventListener("dispose",R);for(const I in l){const x=l[I],y=T.target.uuid;y in x&&(x[y].dispose(),delete x[y])}}}const Ov={[lc]:hc,[dc]:pc,[uc]:_c,[Rr]:fc,[hc]:lc,[pc]:dc,[_c]:uc,[fc]:Rr};function kv(s,e){function t(){let G=!1;const he=new At;let xe=null;const ke=new At(0,0,0,0);return{setMask:function(pe){xe!==pe&&!G&&(s.colorMask(pe,pe,pe,pe),xe=pe)},setLocked:function(pe){G=pe},setClear:function(pe,ae,Ue,Be,Ge){Ge===!0&&(pe*=Be,ae*=Be,Ue*=Be),he.set(pe,ae,Ue,Be),ke.equals(he)===!1&&(s.clearColor(pe,ae,Ue,Be),ke.copy(he))},reset:function(){G=!1,xe=null,ke.set(-1,0,0,0)}}}function n(){let G=!1,he=!1,xe=null,ke=null,pe=null;return{setReversed:function(ae){if(he!==ae){const Ue=e.get("EXT_clip_control");ae?Ue.clipControlEXT(Ue.LOWER_LEFT_EXT,Ue.ZERO_TO_ONE_EXT):Ue.clipControlEXT(Ue.LOWER_LEFT_EXT,Ue.NEGATIVE_ONE_TO_ONE_EXT),he=ae;const Be=pe;pe=null,this.setClear(Be)}},getReversed:function(){return he},setTest:function(ae){ae?V(s.DEPTH_TEST):te(s.DEPTH_TEST)},setMask:function(ae){xe!==ae&&!G&&(s.depthMask(ae),xe=ae)},setFunc:function(ae){if(he&&(ae=Ov[ae]),ke!==ae){switch(ae){case lc:s.depthFunc(s.NEVER);break;case hc:s.depthFunc(s.ALWAYS);break;case dc:s.depthFunc(s.LESS);break;case Rr:s.depthFunc(s.LEQUAL);break;case uc:s.depthFunc(s.EQUAL);break;case fc:s.depthFunc(s.GEQUAL);break;case pc:s.depthFunc(s.GREATER);break;case _c:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}ke=ae}},setLocked:function(ae){G=ae},setClear:function(ae){pe!==ae&&(he&&(ae=1-ae),s.clearDepth(ae),pe=ae)},reset:function(){G=!1,xe=null,ke=null,pe=null,he=!1}}}function i(){let G=!1,he=null,xe=null,ke=null,pe=null,ae=null,Ue=null,Be=null,Ge=null;return{setTest:function(qe){G||(qe?V(s.STENCIL_TEST):te(s.STENCIL_TEST))},setMask:function(qe){he!==qe&&!G&&(s.stencilMask(qe),he=qe)},setFunc:function(qe,Mt,xt){(xe!==qe||ke!==Mt||pe!==xt)&&(s.stencilFunc(qe,Mt,xt),xe=qe,ke=Mt,pe=xt)},setOp:function(qe,Mt,xt){(ae!==qe||Ue!==Mt||Be!==xt)&&(s.stencilOp(qe,Mt,xt),ae=qe,Ue=Mt,Be=xt)},setLocked:function(qe){G=qe},setClear:function(qe){Ge!==qe&&(s.clearStencil(qe),Ge=qe)},reset:function(){G=!1,he=null,xe=null,ke=null,pe=null,ae=null,Ue=null,Be=null,Ge=null}}}const r=new t,o=new n,a=new i,c=new WeakMap,l=new WeakMap;let h={},d={},u=new WeakMap,f=[],g=null,v=!1,_=null,p=null,M=null,E=null,b=null,R=null,T=null,A=new rt(0,0,0),I=0,x=!1,y=null,U=null,D=null,F=null,N=null;const X=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let H=!1,oe=0;const K=s.getParameter(s.VERSION);K.indexOf("WebGL")!==-1?(oe=parseFloat(/^WebGL (\d)/.exec(K)[1]),H=oe>=1):K.indexOf("OpenGL ES")!==-1&&(oe=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),H=oe>=2);let Q=null,$={};const k=s.getParameter(s.SCISSOR_BOX),Y=s.getParameter(s.VIEWPORT),ie=new At().fromArray(k),se=new At().fromArray(Y);function ee(G,he,xe,ke){const pe=new Uint8Array(4),ae=s.createTexture();s.bindTexture(G,ae),s.texParameteri(G,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(G,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let Ue=0;Ue<xe;Ue++)G===s.TEXTURE_3D||G===s.TEXTURE_2D_ARRAY?s.texImage3D(he,0,s.RGBA,1,1,ke,0,s.RGBA,s.UNSIGNED_BYTE,pe):s.texImage2D(he+Ue,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,pe);return ae}const W={};W[s.TEXTURE_2D]=ee(s.TEXTURE_2D,s.TEXTURE_2D,1),W[s.TEXTURE_CUBE_MAP]=ee(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),W[s.TEXTURE_2D_ARRAY]=ee(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),W[s.TEXTURE_3D]=ee(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),o.setClear(1),a.setClear(0),V(s.DEPTH_TEST),o.setFunc(Rr),Te(!1),ve(Jl),V(s.CULL_FACE),Oe(gi);function V(G){h[G]!==!0&&(s.enable(G),h[G]=!0)}function te(G){h[G]!==!1&&(s.disable(G),h[G]=!1)}function ge(G,he){return d[G]!==he?(s.bindFramebuffer(G,he),d[G]=he,G===s.DRAW_FRAMEBUFFER&&(d[s.FRAMEBUFFER]=he),G===s.FRAMEBUFFER&&(d[s.DRAW_FRAMEBUFFER]=he),!0):!1}function we(G,he){let xe=f,ke=!1;if(G){xe=u.get(he),xe===void 0&&(xe=[],u.set(he,xe));const pe=G.textures;if(xe.length!==pe.length||xe[0]!==s.COLOR_ATTACHMENT0){for(let ae=0,Ue=pe.length;ae<Ue;ae++)xe[ae]=s.COLOR_ATTACHMENT0+ae;xe.length=pe.length,ke=!0}}else xe[0]!==s.BACK&&(xe[0]=s.BACK,ke=!0);ke&&s.drawBuffers(xe)}function me(G){return g!==G?(s.useProgram(G),g=G,!0):!1}const be={[ki]:s.FUNC_ADD,[Of]:s.FUNC_SUBTRACT,[kf]:s.FUNC_REVERSE_SUBTRACT};be[zf]=s.MIN,be[Bf]=s.MAX;const L={[Gf]:s.ZERO,[Hf]:s.ONE,[Vf]:s.SRC_COLOR,[ac]:s.SRC_ALPHA,[Kf]:s.SRC_ALPHA_SATURATE,[qf]:s.DST_COLOR,[jf]:s.DST_ALPHA,[Wf]:s.ONE_MINUS_SRC_COLOR,[cc]:s.ONE_MINUS_SRC_ALPHA,[Yf]:s.ONE_MINUS_DST_COLOR,[Xf]:s.ONE_MINUS_DST_ALPHA,[Jf]:s.CONSTANT_COLOR,[Zf]:s.ONE_MINUS_CONSTANT_COLOR,[$f]:s.CONSTANT_ALPHA,[Qf]:s.ONE_MINUS_CONSTANT_ALPHA};function Oe(G,he,xe,ke,pe,ae,Ue,Be,Ge,qe){if(G===gi){v===!0&&(te(s.BLEND),v=!1);return}if(v===!1&&(V(s.BLEND),v=!0),G!==Nf){if(G!==_||qe!==x){if((p!==ki||b!==ki)&&(s.blendEquation(s.FUNC_ADD),p=ki,b=ki),qe)switch(G){case Tr:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Zl:s.blendFunc(s.ONE,s.ONE);break;case $l:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Ql:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case Tr:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Zl:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case $l:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Ql:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}M=null,E=null,R=null,T=null,A.set(0,0,0),I=0,_=G,x=qe}return}pe=pe||he,ae=ae||xe,Ue=Ue||ke,(he!==p||pe!==b)&&(s.blendEquationSeparate(be[he],be[pe]),p=he,b=pe),(xe!==M||ke!==E||ae!==R||Ue!==T)&&(s.blendFuncSeparate(L[xe],L[ke],L[ae],L[Ue]),M=xe,E=ke,R=ae,T=Ue),(Be.equals(A)===!1||Ge!==I)&&(s.blendColor(Be.r,Be.g,Be.b,Ge),A.copy(Be),I=Ge),_=G,x=!1}function Ee(G,he){G.side===Fn?te(s.CULL_FACE):V(s.CULL_FACE);let xe=G.side===dn;he&&(xe=!xe),Te(xe),G.blending===Tr&&G.transparent===!1?Oe(gi):Oe(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.blendColor,G.blendAlpha,G.premultipliedAlpha),o.setFunc(G.depthFunc),o.setTest(G.depthTest),o.setMask(G.depthWrite),r.setMask(G.colorWrite);const ke=G.stencilWrite;a.setTest(ke),ke&&(a.setMask(G.stencilWriteMask),a.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),a.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),_e(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?V(s.SAMPLE_ALPHA_TO_COVERAGE):te(s.SAMPLE_ALPHA_TO_COVERAGE)}function Te(G){y!==G&&(G?s.frontFace(s.CW):s.frontFace(s.CCW),y=G)}function ve(G){G!==Lf?(V(s.CULL_FACE),G!==U&&(G===Jl?s.cullFace(s.BACK):G===Ff?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):te(s.CULL_FACE),U=G}function Se(G){G!==D&&(H&&s.lineWidth(G),D=G)}function _e(G,he,xe){G?(V(s.POLYGON_OFFSET_FILL),(F!==he||N!==xe)&&(s.polygonOffset(he,xe),F=he,N=xe)):te(s.POLYGON_OFFSET_FILL)}function Re(G){G?V(s.SCISSOR_TEST):te(s.SCISSOR_TEST)}function fe(G){G===void 0&&(G=s.TEXTURE0+X-1),Q!==G&&(s.activeTexture(G),Q=G)}function Ve(G,he,xe){xe===void 0&&(Q===null?xe=s.TEXTURE0+X-1:xe=Q);let ke=$[xe];ke===void 0&&(ke={type:void 0,texture:void 0},$[xe]=ke),(ke.type!==G||ke.texture!==he)&&(Q!==xe&&(s.activeTexture(xe),Q=xe),s.bindTexture(G,he||W[G]),ke.type=G,ke.texture=he)}function P(){const G=$[Q];G!==void 0&&G.type!==void 0&&(s.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function S(){try{s.compressedTexImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function B(){try{s.compressedTexImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function re(){try{s.texSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ne(){try{s.texSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function J(){try{s.compressedTexSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Me(){try{s.compressedTexSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ue(){try{s.texStorage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function De(){try{s.texStorage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ie(){try{s.texImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function de(){try{s.texImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ye(G){ie.equals(G)===!1&&(s.scissor(G.x,G.y,G.z,G.w),ie.copy(G))}function Ae(G){se.equals(G)===!1&&(s.viewport(G.x,G.y,G.z,G.w),se.copy(G))}function Le(G,he){let xe=l.get(he);xe===void 0&&(xe=new WeakMap,l.set(he,xe));let ke=xe.get(G);ke===void 0&&(ke=s.getUniformBlockIndex(he,G.name),xe.set(G,ke))}function Ce(G,he){const ke=l.get(he).get(G);c.get(he)!==ke&&(s.uniformBlockBinding(he,ke,G.__bindingPointIndex),c.set(he,ke))}function Xe(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),o.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),h={},Q=null,$={},d={},u=new WeakMap,f=[],g=null,v=!1,_=null,p=null,M=null,E=null,b=null,R=null,T=null,A=new rt(0,0,0),I=0,x=!1,y=null,U=null,D=null,F=null,N=null,ie.set(0,0,s.canvas.width,s.canvas.height),se.set(0,0,s.canvas.width,s.canvas.height),r.reset(),o.reset(),a.reset()}return{buffers:{color:r,depth:o,stencil:a},enable:V,disable:te,bindFramebuffer:ge,drawBuffers:we,useProgram:me,setBlending:Oe,setMaterial:Ee,setFlipSided:Te,setCullFace:ve,setLineWidth:Se,setPolygonOffset:_e,setScissorTest:Re,activeTexture:fe,bindTexture:Ve,unbindTexture:P,compressedTexImage2D:S,compressedTexImage3D:B,texImage2D:Ie,texImage3D:de,updateUBOMapping:Le,uniformBlockBinding:Ce,texStorage2D:ue,texStorage3D:De,texSubImage2D:re,texSubImage3D:ne,compressedTexSubImage2D:J,compressedTexSubImage3D:Me,scissor:ye,viewport:Ae,reset:Xe}}function zv(s,e,t,n,i,r,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),l=new Qe,h=new WeakMap;let d;const u=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(P,S){return f?new OffscreenCanvas(P,S):Uo("canvas")}function v(P,S,B){let re=1;const ne=Ve(P);if((ne.width>B||ne.height>B)&&(re=B/Math.max(ne.width,ne.height)),re<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const J=Math.floor(re*ne.width),Me=Math.floor(re*ne.height);d===void 0&&(d=g(J,Me));const ue=S?g(J,Me):d;return ue.width=J,ue.height=Me,ue.getContext("2d").drawImage(P,0,0,J,Me),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ne.width+"x"+ne.height+") to ("+J+"x"+Me+")."),ue}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ne.width+"x"+ne.height+")."),P;return P}function _(P){return P.generateMipmaps}function p(P){s.generateMipmap(P)}function M(P){return P.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?s.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function E(P,S,B,re,ne=!1){if(P!==null){if(s[P]!==void 0)return s[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let J=S;if(S===s.RED&&(B===s.FLOAT&&(J=s.R32F),B===s.HALF_FLOAT&&(J=s.R16F),B===s.UNSIGNED_BYTE&&(J=s.R8)),S===s.RED_INTEGER&&(B===s.UNSIGNED_BYTE&&(J=s.R8UI),B===s.UNSIGNED_SHORT&&(J=s.R16UI),B===s.UNSIGNED_INT&&(J=s.R32UI),B===s.BYTE&&(J=s.R8I),B===s.SHORT&&(J=s.R16I),B===s.INT&&(J=s.R32I)),S===s.RG&&(B===s.FLOAT&&(J=s.RG32F),B===s.HALF_FLOAT&&(J=s.RG16F),B===s.UNSIGNED_BYTE&&(J=s.RG8)),S===s.RG_INTEGER&&(B===s.UNSIGNED_BYTE&&(J=s.RG8UI),B===s.UNSIGNED_SHORT&&(J=s.RG16UI),B===s.UNSIGNED_INT&&(J=s.RG32UI),B===s.BYTE&&(J=s.RG8I),B===s.SHORT&&(J=s.RG16I),B===s.INT&&(J=s.RG32I)),S===s.RGB_INTEGER&&(B===s.UNSIGNED_BYTE&&(J=s.RGB8UI),B===s.UNSIGNED_SHORT&&(J=s.RGB16UI),B===s.UNSIGNED_INT&&(J=s.RGB32UI),B===s.BYTE&&(J=s.RGB8I),B===s.SHORT&&(J=s.RGB16I),B===s.INT&&(J=s.RGB32I)),S===s.RGBA_INTEGER&&(B===s.UNSIGNED_BYTE&&(J=s.RGBA8UI),B===s.UNSIGNED_SHORT&&(J=s.RGBA16UI),B===s.UNSIGNED_INT&&(J=s.RGBA32UI),B===s.BYTE&&(J=s.RGBA8I),B===s.SHORT&&(J=s.RGBA16I),B===s.INT&&(J=s.RGBA32I)),S===s.RGB&&(B===s.UNSIGNED_INT_5_9_9_9_REV&&(J=s.RGB9_E5),B===s.UNSIGNED_INT_10F_11F_11F_REV&&(J=s.R11F_G11F_B10F)),S===s.RGBA){const Me=ne?Do:ut.getTransfer(re);B===s.FLOAT&&(J=s.RGBA32F),B===s.HALF_FLOAT&&(J=s.RGBA16F),B===s.UNSIGNED_BYTE&&(J=Me===wt?s.SRGB8_ALPHA8:s.RGBA8),B===s.UNSIGNED_SHORT_4_4_4_4&&(J=s.RGBA4),B===s.UNSIGNED_SHORT_5_5_5_1&&(J=s.RGB5_A1)}return(J===s.R16F||J===s.R32F||J===s.RG16F||J===s.RG32F||J===s.RGBA16F||J===s.RGBA32F)&&e.get("EXT_color_buffer_float"),J}function b(P,S){let B;return P?S===null||S===Ki||S===bs?B=s.DEPTH24_STENCIL8:S===Hn?B=s.DEPTH32F_STENCIL8:S===vs&&(B=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):S===null||S===Ki||S===bs?B=s.DEPTH_COMPONENT24:S===Hn?B=s.DEPTH_COMPONENT32F:S===vs&&(B=s.DEPTH_COMPONENT16),B}function R(P,S){return _(P)===!0||P.isFramebufferTexture&&P.minFilter!==mn&&P.minFilter!==hn?Math.log2(Math.max(S.width,S.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?S.mipmaps.length:1}function T(P){const S=P.target;S.removeEventListener("dispose",T),I(S),S.isVideoTexture&&h.delete(S)}function A(P){const S=P.target;S.removeEventListener("dispose",A),y(S)}function I(P){const S=n.get(P);if(S.__webglInit===void 0)return;const B=P.source,re=u.get(B);if(re){const ne=re[S.__cacheKey];ne.usedTimes--,ne.usedTimes===0&&x(P),Object.keys(re).length===0&&u.delete(B)}n.remove(P)}function x(P){const S=n.get(P);s.deleteTexture(S.__webglTexture);const B=P.source,re=u.get(B);delete re[S.__cacheKey],o.memory.textures--}function y(P){const S=n.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),n.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let re=0;re<6;re++){if(Array.isArray(S.__webglFramebuffer[re]))for(let ne=0;ne<S.__webglFramebuffer[re].length;ne++)s.deleteFramebuffer(S.__webglFramebuffer[re][ne]);else s.deleteFramebuffer(S.__webglFramebuffer[re]);S.__webglDepthbuffer&&s.deleteRenderbuffer(S.__webglDepthbuffer[re])}else{if(Array.isArray(S.__webglFramebuffer))for(let re=0;re<S.__webglFramebuffer.length;re++)s.deleteFramebuffer(S.__webglFramebuffer[re]);else s.deleteFramebuffer(S.__webglFramebuffer);if(S.__webglDepthbuffer&&s.deleteRenderbuffer(S.__webglDepthbuffer),S.__webglMultisampledFramebuffer&&s.deleteFramebuffer(S.__webglMultisampledFramebuffer),S.__webglColorRenderbuffer)for(let re=0;re<S.__webglColorRenderbuffer.length;re++)S.__webglColorRenderbuffer[re]&&s.deleteRenderbuffer(S.__webglColorRenderbuffer[re]);S.__webglDepthRenderbuffer&&s.deleteRenderbuffer(S.__webglDepthRenderbuffer)}const B=P.textures;for(let re=0,ne=B.length;re<ne;re++){const J=n.get(B[re]);J.__webglTexture&&(s.deleteTexture(J.__webglTexture),o.memory.textures--),n.remove(B[re])}n.remove(P)}let U=0;function D(){U=0}function F(){const P=U;return P>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+i.maxTextures),U+=1,P}function N(P){const S=[];return S.push(P.wrapS),S.push(P.wrapT),S.push(P.wrapR||0),S.push(P.magFilter),S.push(P.minFilter),S.push(P.anisotropy),S.push(P.internalFormat),S.push(P.format),S.push(P.type),S.push(P.generateMipmaps),S.push(P.premultiplyAlpha),S.push(P.flipY),S.push(P.unpackAlignment),S.push(P.colorSpace),S.join()}function X(P,S){const B=n.get(P);if(P.isVideoTexture&&Re(P),P.isRenderTargetTexture===!1&&P.isExternalTexture!==!0&&P.version>0&&B.__version!==P.version){const re=P.image;if(re===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(re.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{W(B,P,S);return}}else P.isExternalTexture&&(B.__webglTexture=P.sourceTexture?P.sourceTexture:null);t.bindTexture(s.TEXTURE_2D,B.__webglTexture,s.TEXTURE0+S)}function H(P,S){const B=n.get(P);if(P.isRenderTargetTexture===!1&&P.version>0&&B.__version!==P.version){W(B,P,S);return}t.bindTexture(s.TEXTURE_2D_ARRAY,B.__webglTexture,s.TEXTURE0+S)}function oe(P,S){const B=n.get(P);if(P.isRenderTargetTexture===!1&&P.version>0&&B.__version!==P.version){W(B,P,S);return}t.bindTexture(s.TEXTURE_3D,B.__webglTexture,s.TEXTURE0+S)}function K(P,S){const B=n.get(P);if(P.version>0&&B.__version!==P.version){V(B,P,S);return}t.bindTexture(s.TEXTURE_CUBE_MAP,B.__webglTexture,s.TEXTURE0+S)}const Q={[wc]:s.REPEAT,[Hi]:s.CLAMP_TO_EDGE,[vc]:s.MIRRORED_REPEAT},$={[mn]:s.NEAREST,[lp]:s.NEAREST_MIPMAP_NEAREST,[Os]:s.NEAREST_MIPMAP_LINEAR,[hn]:s.LINEAR,[ua]:s.LINEAR_MIPMAP_NEAREST,[Vi]:s.LINEAR_MIPMAP_LINEAR},k={[up]:s.NEVER,[wp]:s.ALWAYS,[fp]:s.LESS,[hu]:s.LEQUAL,[pp]:s.EQUAL,[gp]:s.GEQUAL,[_p]:s.GREATER,[mp]:s.NOTEQUAL};function Y(P,S){if(S.type===Hn&&e.has("OES_texture_float_linear")===!1&&(S.magFilter===hn||S.magFilter===ua||S.magFilter===Os||S.magFilter===Vi||S.minFilter===hn||S.minFilter===ua||S.minFilter===Os||S.minFilter===Vi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(P,s.TEXTURE_WRAP_S,Q[S.wrapS]),s.texParameteri(P,s.TEXTURE_WRAP_T,Q[S.wrapT]),(P===s.TEXTURE_3D||P===s.TEXTURE_2D_ARRAY)&&s.texParameteri(P,s.TEXTURE_WRAP_R,Q[S.wrapR]),s.texParameteri(P,s.TEXTURE_MAG_FILTER,$[S.magFilter]),s.texParameteri(P,s.TEXTURE_MIN_FILTER,$[S.minFilter]),S.compareFunction&&(s.texParameteri(P,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(P,s.TEXTURE_COMPARE_FUNC,k[S.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(S.magFilter===mn||S.minFilter!==Os&&S.minFilter!==Vi||S.type===Hn&&e.has("OES_texture_float_linear")===!1)return;if(S.anisotropy>1||n.get(S).__currentAnisotropy){const B=e.get("EXT_texture_filter_anisotropic");s.texParameterf(P,B.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,i.getMaxAnisotropy())),n.get(S).__currentAnisotropy=S.anisotropy}}}function ie(P,S){let B=!1;P.__webglInit===void 0&&(P.__webglInit=!0,S.addEventListener("dispose",T));const re=S.source;let ne=u.get(re);ne===void 0&&(ne={},u.set(re,ne));const J=N(S);if(J!==P.__cacheKey){ne[J]===void 0&&(ne[J]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,B=!0),ne[J].usedTimes++;const Me=ne[P.__cacheKey];Me!==void 0&&(ne[P.__cacheKey].usedTimes--,Me.usedTimes===0&&x(S)),P.__cacheKey=J,P.__webglTexture=ne[J].texture}return B}function se(P,S,B){return Math.floor(Math.floor(P/B)/S)}function ee(P,S,B,re){const J=P.updateRanges;if(J.length===0)t.texSubImage2D(s.TEXTURE_2D,0,0,0,S.width,S.height,B,re,S.data);else{J.sort((de,ye)=>de.start-ye.start);let Me=0;for(let de=1;de<J.length;de++){const ye=J[Me],Ae=J[de],Le=ye.start+ye.count,Ce=se(Ae.start,S.width,4),Xe=se(ye.start,S.width,4);Ae.start<=Le+1&&Ce===Xe&&se(Ae.start+Ae.count-1,S.width,4)===Ce?ye.count=Math.max(ye.count,Ae.start+Ae.count-ye.start):(++Me,J[Me]=Ae)}J.length=Me+1;const ue=s.getParameter(s.UNPACK_ROW_LENGTH),De=s.getParameter(s.UNPACK_SKIP_PIXELS),Ie=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,S.width);for(let de=0,ye=J.length;de<ye;de++){const Ae=J[de],Le=Math.floor(Ae.start/4),Ce=Math.ceil(Ae.count/4),Xe=Le%S.width,G=Math.floor(Le/S.width),he=Ce,xe=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,Xe),s.pixelStorei(s.UNPACK_SKIP_ROWS,G),t.texSubImage2D(s.TEXTURE_2D,0,Xe,G,he,xe,B,re,S.data)}P.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,ue),s.pixelStorei(s.UNPACK_SKIP_PIXELS,De),s.pixelStorei(s.UNPACK_SKIP_ROWS,Ie)}}function W(P,S,B){let re=s.TEXTURE_2D;(S.isDataArrayTexture||S.isCompressedArrayTexture)&&(re=s.TEXTURE_2D_ARRAY),S.isData3DTexture&&(re=s.TEXTURE_3D);const ne=ie(P,S),J=S.source;t.bindTexture(re,P.__webglTexture,s.TEXTURE0+B);const Me=n.get(J);if(J.version!==Me.__version||ne===!0){t.activeTexture(s.TEXTURE0+B);const ue=ut.getPrimaries(ut.workingColorSpace),De=S.colorSpace===mi?null:ut.getPrimaries(S.colorSpace),Ie=S.colorSpace===mi||ue===De?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,S.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,S.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,S.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ie);let de=v(S.image,!1,i.maxTextureSize);de=fe(S,de);const ye=r.convert(S.format,S.colorSpace),Ae=r.convert(S.type);let Le=E(S.internalFormat,ye,Ae,S.colorSpace,S.isVideoTexture);Y(re,S);let Ce;const Xe=S.mipmaps,G=S.isVideoTexture!==!0,he=Me.__version===void 0||ne===!0,xe=J.dataReady,ke=R(S,de);if(S.isDepthTexture)Le=b(S.format===xs,S.type),he&&(G?t.texStorage2D(s.TEXTURE_2D,1,Le,de.width,de.height):t.texImage2D(s.TEXTURE_2D,0,Le,de.width,de.height,0,ye,Ae,null));else if(S.isDataTexture)if(Xe.length>0){G&&he&&t.texStorage2D(s.TEXTURE_2D,ke,Le,Xe[0].width,Xe[0].height);for(let pe=0,ae=Xe.length;pe<ae;pe++)Ce=Xe[pe],G?xe&&t.texSubImage2D(s.TEXTURE_2D,pe,0,0,Ce.width,Ce.height,ye,Ae,Ce.data):t.texImage2D(s.TEXTURE_2D,pe,Le,Ce.width,Ce.height,0,ye,Ae,Ce.data);S.generateMipmaps=!1}else G?(he&&t.texStorage2D(s.TEXTURE_2D,ke,Le,de.width,de.height),xe&&ee(S,de,ye,Ae)):t.texImage2D(s.TEXTURE_2D,0,Le,de.width,de.height,0,ye,Ae,de.data);else if(S.isCompressedTexture)if(S.isCompressedArrayTexture){G&&he&&t.texStorage3D(s.TEXTURE_2D_ARRAY,ke,Le,Xe[0].width,Xe[0].height,de.depth);for(let pe=0,ae=Xe.length;pe<ae;pe++)if(Ce=Xe[pe],S.format!==Nn)if(ye!==null)if(G){if(xe)if(S.layerUpdates.size>0){const Ue=Uh(Ce.width,Ce.height,S.format,S.type);for(const Be of S.layerUpdates){const Ge=Ce.data.subarray(Be*Ue/Ce.data.BYTES_PER_ELEMENT,(Be+1)*Ue/Ce.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,pe,0,0,Be,Ce.width,Ce.height,1,ye,Ge)}S.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,pe,0,0,0,Ce.width,Ce.height,de.depth,ye,Ce.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,pe,Le,Ce.width,Ce.height,de.depth,0,Ce.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else G?xe&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,pe,0,0,0,Ce.width,Ce.height,de.depth,ye,Ae,Ce.data):t.texImage3D(s.TEXTURE_2D_ARRAY,pe,Le,Ce.width,Ce.height,de.depth,0,ye,Ae,Ce.data)}else{G&&he&&t.texStorage2D(s.TEXTURE_2D,ke,Le,Xe[0].width,Xe[0].height);for(let pe=0,ae=Xe.length;pe<ae;pe++)Ce=Xe[pe],S.format!==Nn?ye!==null?G?xe&&t.compressedTexSubImage2D(s.TEXTURE_2D,pe,0,0,Ce.width,Ce.height,ye,Ce.data):t.compressedTexImage2D(s.TEXTURE_2D,pe,Le,Ce.width,Ce.height,0,Ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):G?xe&&t.texSubImage2D(s.TEXTURE_2D,pe,0,0,Ce.width,Ce.height,ye,Ae,Ce.data):t.texImage2D(s.TEXTURE_2D,pe,Le,Ce.width,Ce.height,0,ye,Ae,Ce.data)}else if(S.isDataArrayTexture)if(G){if(he&&t.texStorage3D(s.TEXTURE_2D_ARRAY,ke,Le,de.width,de.height,de.depth),xe)if(S.layerUpdates.size>0){const pe=Uh(de.width,de.height,S.format,S.type);for(const ae of S.layerUpdates){const Ue=de.data.subarray(ae*pe/de.data.BYTES_PER_ELEMENT,(ae+1)*pe/de.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,ae,de.width,de.height,1,ye,Ae,Ue)}S.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,de.width,de.height,de.depth,ye,Ae,de.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,Le,de.width,de.height,de.depth,0,ye,Ae,de.data);else if(S.isData3DTexture)G?(he&&t.texStorage3D(s.TEXTURE_3D,ke,Le,de.width,de.height,de.depth),xe&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,de.width,de.height,de.depth,ye,Ae,de.data)):t.texImage3D(s.TEXTURE_3D,0,Le,de.width,de.height,de.depth,0,ye,Ae,de.data);else if(S.isFramebufferTexture){if(he)if(G)t.texStorage2D(s.TEXTURE_2D,ke,Le,de.width,de.height);else{let pe=de.width,ae=de.height;for(let Ue=0;Ue<ke;Ue++)t.texImage2D(s.TEXTURE_2D,Ue,Le,pe,ae,0,ye,Ae,null),pe>>=1,ae>>=1}}else if(Xe.length>0){if(G&&he){const pe=Ve(Xe[0]);t.texStorage2D(s.TEXTURE_2D,ke,Le,pe.width,pe.height)}for(let pe=0,ae=Xe.length;pe<ae;pe++)Ce=Xe[pe],G?xe&&t.texSubImage2D(s.TEXTURE_2D,pe,0,0,ye,Ae,Ce):t.texImage2D(s.TEXTURE_2D,pe,Le,ye,Ae,Ce);S.generateMipmaps=!1}else if(G){if(he){const pe=Ve(de);t.texStorage2D(s.TEXTURE_2D,ke,Le,pe.width,pe.height)}xe&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,ye,Ae,de)}else t.texImage2D(s.TEXTURE_2D,0,Le,ye,Ae,de);_(S)&&p(re),Me.__version=J.version,S.onUpdate&&S.onUpdate(S)}P.__version=S.version}function V(P,S,B){if(S.image.length!==6)return;const re=ie(P,S),ne=S.source;t.bindTexture(s.TEXTURE_CUBE_MAP,P.__webglTexture,s.TEXTURE0+B);const J=n.get(ne);if(ne.version!==J.__version||re===!0){t.activeTexture(s.TEXTURE0+B);const Me=ut.getPrimaries(ut.workingColorSpace),ue=S.colorSpace===mi?null:ut.getPrimaries(S.colorSpace),De=S.colorSpace===mi||Me===ue?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,S.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,S.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,S.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,De);const Ie=S.isCompressedTexture||S.image[0].isCompressedTexture,de=S.image[0]&&S.image[0].isDataTexture,ye=[];for(let ae=0;ae<6;ae++)!Ie&&!de?ye[ae]=v(S.image[ae],!0,i.maxCubemapSize):ye[ae]=de?S.image[ae].image:S.image[ae],ye[ae]=fe(S,ye[ae]);const Ae=ye[0],Le=r.convert(S.format,S.colorSpace),Ce=r.convert(S.type),Xe=E(S.internalFormat,Le,Ce,S.colorSpace),G=S.isVideoTexture!==!0,he=J.__version===void 0||re===!0,xe=ne.dataReady;let ke=R(S,Ae);Y(s.TEXTURE_CUBE_MAP,S);let pe;if(Ie){G&&he&&t.texStorage2D(s.TEXTURE_CUBE_MAP,ke,Xe,Ae.width,Ae.height);for(let ae=0;ae<6;ae++){pe=ye[ae].mipmaps;for(let Ue=0;Ue<pe.length;Ue++){const Be=pe[Ue];S.format!==Nn?Le!==null?G?xe&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ue,0,0,Be.width,Be.height,Le,Be.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ue,Xe,Be.width,Be.height,0,Be.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):G?xe&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ue,0,0,Be.width,Be.height,Le,Ce,Be.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ue,Xe,Be.width,Be.height,0,Le,Ce,Be.data)}}}else{if(pe=S.mipmaps,G&&he){pe.length>0&&ke++;const ae=Ve(ye[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,ke,Xe,ae.width,ae.height)}for(let ae=0;ae<6;ae++)if(de){G?xe&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0,0,0,ye[ae].width,ye[ae].height,Le,Ce,ye[ae].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0,Xe,ye[ae].width,ye[ae].height,0,Le,Ce,ye[ae].data);for(let Ue=0;Ue<pe.length;Ue++){const Ge=pe[Ue].image[ae].image;G?xe&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ue+1,0,0,Ge.width,Ge.height,Le,Ce,Ge.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ue+1,Xe,Ge.width,Ge.height,0,Le,Ce,Ge.data)}}else{G?xe&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0,0,0,Le,Ce,ye[ae]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0,Xe,Le,Ce,ye[ae]);for(let Ue=0;Ue<pe.length;Ue++){const Be=pe[Ue];G?xe&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ue+1,0,0,Le,Ce,Be.image[ae]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ue+1,Xe,Le,Ce,Be.image[ae])}}}_(S)&&p(s.TEXTURE_CUBE_MAP),J.__version=ne.version,S.onUpdate&&S.onUpdate(S)}P.__version=S.version}function te(P,S,B,re,ne,J){const Me=r.convert(B.format,B.colorSpace),ue=r.convert(B.type),De=E(B.internalFormat,Me,ue,B.colorSpace),Ie=n.get(S),de=n.get(B);if(de.__renderTarget=S,!Ie.__hasExternalTextures){const ye=Math.max(1,S.width>>J),Ae=Math.max(1,S.height>>J);ne===s.TEXTURE_3D||ne===s.TEXTURE_2D_ARRAY?t.texImage3D(ne,J,De,ye,Ae,S.depth,0,Me,ue,null):t.texImage2D(ne,J,De,ye,Ae,0,Me,ue,null)}t.bindFramebuffer(s.FRAMEBUFFER,P),_e(S)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,re,ne,de.__webglTexture,0,Se(S)):(ne===s.TEXTURE_2D||ne>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&ne<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,re,ne,de.__webglTexture,J),t.bindFramebuffer(s.FRAMEBUFFER,null)}function ge(P,S,B){if(s.bindRenderbuffer(s.RENDERBUFFER,P),S.depthBuffer){const re=S.depthTexture,ne=re&&re.isDepthTexture?re.type:null,J=b(S.stencilBuffer,ne),Me=S.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ue=Se(S);_e(S)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,ue,J,S.width,S.height):B?s.renderbufferStorageMultisample(s.RENDERBUFFER,ue,J,S.width,S.height):s.renderbufferStorage(s.RENDERBUFFER,J,S.width,S.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Me,s.RENDERBUFFER,P)}else{const re=S.textures;for(let ne=0;ne<re.length;ne++){const J=re[ne],Me=r.convert(J.format,J.colorSpace),ue=r.convert(J.type),De=E(J.internalFormat,Me,ue,J.colorSpace),Ie=Se(S);B&&_e(S)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Ie,De,S.width,S.height):_e(S)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ie,De,S.width,S.height):s.renderbufferStorage(s.RENDERBUFFER,De,S.width,S.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function we(P,S){if(S&&S.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,P),!(S.depthTexture&&S.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const re=n.get(S.depthTexture);re.__renderTarget=S,(!re.__webglTexture||S.depthTexture.image.width!==S.width||S.depthTexture.image.height!==S.height)&&(S.depthTexture.image.width=S.width,S.depthTexture.image.height=S.height,S.depthTexture.needsUpdate=!0),X(S.depthTexture,0);const ne=re.__webglTexture,J=Se(S);if(S.depthTexture.format===ys)_e(S)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,ne,0,J):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,ne,0);else if(S.depthTexture.format===xs)_e(S)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,ne,0,J):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,ne,0);else throw new Error("Unknown depthTexture format")}function me(P){const S=n.get(P),B=P.isWebGLCubeRenderTarget===!0;if(S.__boundDepthTexture!==P.depthTexture){const re=P.depthTexture;if(S.__depthDisposeCallback&&S.__depthDisposeCallback(),re){const ne=()=>{delete S.__boundDepthTexture,delete S.__depthDisposeCallback,re.removeEventListener("dispose",ne)};re.addEventListener("dispose",ne),S.__depthDisposeCallback=ne}S.__boundDepthTexture=re}if(P.depthTexture&&!S.__autoAllocateDepthBuffer){if(B)throw new Error("target.depthTexture not supported in Cube render targets");const re=P.texture.mipmaps;re&&re.length>0?we(S.__webglFramebuffer[0],P):we(S.__webglFramebuffer,P)}else if(B){S.__webglDepthbuffer=[];for(let re=0;re<6;re++)if(t.bindFramebuffer(s.FRAMEBUFFER,S.__webglFramebuffer[re]),S.__webglDepthbuffer[re]===void 0)S.__webglDepthbuffer[re]=s.createRenderbuffer(),ge(S.__webglDepthbuffer[re],P,!1);else{const ne=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,J=S.__webglDepthbuffer[re];s.bindRenderbuffer(s.RENDERBUFFER,J),s.framebufferRenderbuffer(s.FRAMEBUFFER,ne,s.RENDERBUFFER,J)}}else{const re=P.texture.mipmaps;if(re&&re.length>0?t.bindFramebuffer(s.FRAMEBUFFER,S.__webglFramebuffer[0]):t.bindFramebuffer(s.FRAMEBUFFER,S.__webglFramebuffer),S.__webglDepthbuffer===void 0)S.__webglDepthbuffer=s.createRenderbuffer(),ge(S.__webglDepthbuffer,P,!1);else{const ne=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,J=S.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,J),s.framebufferRenderbuffer(s.FRAMEBUFFER,ne,s.RENDERBUFFER,J)}}t.bindFramebuffer(s.FRAMEBUFFER,null)}function be(P,S,B){const re=n.get(P);S!==void 0&&te(re.__webglFramebuffer,P,P.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),B!==void 0&&me(P)}function L(P){const S=P.texture,B=n.get(P),re=n.get(S);P.addEventListener("dispose",A);const ne=P.textures,J=P.isWebGLCubeRenderTarget===!0,Me=ne.length>1;if(Me||(re.__webglTexture===void 0&&(re.__webglTexture=s.createTexture()),re.__version=S.version,o.memory.textures++),J){B.__webglFramebuffer=[];for(let ue=0;ue<6;ue++)if(S.mipmaps&&S.mipmaps.length>0){B.__webglFramebuffer[ue]=[];for(let De=0;De<S.mipmaps.length;De++)B.__webglFramebuffer[ue][De]=s.createFramebuffer()}else B.__webglFramebuffer[ue]=s.createFramebuffer()}else{if(S.mipmaps&&S.mipmaps.length>0){B.__webglFramebuffer=[];for(let ue=0;ue<S.mipmaps.length;ue++)B.__webglFramebuffer[ue]=s.createFramebuffer()}else B.__webglFramebuffer=s.createFramebuffer();if(Me)for(let ue=0,De=ne.length;ue<De;ue++){const Ie=n.get(ne[ue]);Ie.__webglTexture===void 0&&(Ie.__webglTexture=s.createTexture(),o.memory.textures++)}if(P.samples>0&&_e(P)===!1){B.__webglMultisampledFramebuffer=s.createFramebuffer(),B.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,B.__webglMultisampledFramebuffer);for(let ue=0;ue<ne.length;ue++){const De=ne[ue];B.__webglColorRenderbuffer[ue]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,B.__webglColorRenderbuffer[ue]);const Ie=r.convert(De.format,De.colorSpace),de=r.convert(De.type),ye=E(De.internalFormat,Ie,de,De.colorSpace,P.isXRRenderTarget===!0),Ae=Se(P);s.renderbufferStorageMultisample(s.RENDERBUFFER,Ae,ye,P.width,P.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ue,s.RENDERBUFFER,B.__webglColorRenderbuffer[ue])}s.bindRenderbuffer(s.RENDERBUFFER,null),P.depthBuffer&&(B.__webglDepthRenderbuffer=s.createRenderbuffer(),ge(B.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(J){t.bindTexture(s.TEXTURE_CUBE_MAP,re.__webglTexture),Y(s.TEXTURE_CUBE_MAP,S);for(let ue=0;ue<6;ue++)if(S.mipmaps&&S.mipmaps.length>0)for(let De=0;De<S.mipmaps.length;De++)te(B.__webglFramebuffer[ue][De],P,S,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+ue,De);else te(B.__webglFramebuffer[ue],P,S,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+ue,0);_(S)&&p(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Me){for(let ue=0,De=ne.length;ue<De;ue++){const Ie=ne[ue],de=n.get(Ie);let ye=s.TEXTURE_2D;(P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(ye=P.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(ye,de.__webglTexture),Y(ye,Ie),te(B.__webglFramebuffer,P,Ie,s.COLOR_ATTACHMENT0+ue,ye,0),_(Ie)&&p(ye)}t.unbindTexture()}else{let ue=s.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(ue=P.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(ue,re.__webglTexture),Y(ue,S),S.mipmaps&&S.mipmaps.length>0)for(let De=0;De<S.mipmaps.length;De++)te(B.__webglFramebuffer[De],P,S,s.COLOR_ATTACHMENT0,ue,De);else te(B.__webglFramebuffer,P,S,s.COLOR_ATTACHMENT0,ue,0);_(S)&&p(ue),t.unbindTexture()}P.depthBuffer&&me(P)}function Oe(P){const S=P.textures;for(let B=0,re=S.length;B<re;B++){const ne=S[B];if(_(ne)){const J=M(P),Me=n.get(ne).__webglTexture;t.bindTexture(J,Me),p(J),t.unbindTexture()}}}const Ee=[],Te=[];function ve(P){if(P.samples>0){if(_e(P)===!1){const S=P.textures,B=P.width,re=P.height;let ne=s.COLOR_BUFFER_BIT;const J=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Me=n.get(P),ue=S.length>1;if(ue)for(let Ie=0;Ie<S.length;Ie++)t.bindFramebuffer(s.FRAMEBUFFER,Me.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ie,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,Me.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ie,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,Me.__webglMultisampledFramebuffer);const De=P.texture.mipmaps;De&&De.length>0?t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Me.__webglFramebuffer[0]):t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Me.__webglFramebuffer);for(let Ie=0;Ie<S.length;Ie++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(ne|=s.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(ne|=s.STENCIL_BUFFER_BIT)),ue){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Me.__webglColorRenderbuffer[Ie]);const de=n.get(S[Ie]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,de,0)}s.blitFramebuffer(0,0,B,re,0,0,B,re,ne,s.NEAREST),c===!0&&(Ee.length=0,Te.length=0,Ee.push(s.COLOR_ATTACHMENT0+Ie),P.depthBuffer&&P.resolveDepthBuffer===!1&&(Ee.push(J),Te.push(J),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,Te)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Ee))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),ue)for(let Ie=0;Ie<S.length;Ie++){t.bindFramebuffer(s.FRAMEBUFFER,Me.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ie,s.RENDERBUFFER,Me.__webglColorRenderbuffer[Ie]);const de=n.get(S[Ie]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,Me.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ie,s.TEXTURE_2D,de,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Me.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&c){const S=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[S])}}}function Se(P){return Math.min(i.maxSamples,P.samples)}function _e(P){const S=n.get(P);return P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&S.__useRenderToTexture!==!1}function Re(P){const S=o.render.frame;h.get(P)!==S&&(h.set(P,S),P.update())}function fe(P,S){const B=P.colorSpace,re=P.format,ne=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||B!==Dr&&B!==mi&&(ut.getTransfer(B)===wt?(re!==Nn||ne!==Xn)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",B)),S}function Ve(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(l.width=P.naturalWidth||P.width,l.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(l.width=P.displayWidth,l.height=P.displayHeight):(l.width=P.width,l.height=P.height),l}this.allocateTextureUnit=F,this.resetTextureUnits=D,this.setTexture2D=X,this.setTexture2DArray=H,this.setTexture3D=oe,this.setTextureCube=K,this.rebindTextures=be,this.setupRenderTarget=L,this.updateRenderTargetMipmap=Oe,this.updateMultisampleRenderTarget=ve,this.setupDepthRenderbuffer=me,this.setupFrameBufferTexture=te,this.useMultisampledRTT=_e}function Bv(s,e){function t(n,i=mi){let r;const o=ut.getTransfer(i);if(n===Xn)return s.UNSIGNED_BYTE;if(n===hl)return s.UNSIGNED_SHORT_4_4_4_4;if(n===dl)return s.UNSIGNED_SHORT_5_5_5_1;if(n===iu)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===ru)return s.UNSIGNED_INT_10F_11F_11F_REV;if(n===tu)return s.BYTE;if(n===nu)return s.SHORT;if(n===vs)return s.UNSIGNED_SHORT;if(n===ll)return s.INT;if(n===Ki)return s.UNSIGNED_INT;if(n===Hn)return s.FLOAT;if(n===Rs)return s.HALF_FLOAT;if(n===su)return s.ALPHA;if(n===ou)return s.RGB;if(n===Nn)return s.RGBA;if(n===ys)return s.DEPTH_COMPONENT;if(n===xs)return s.DEPTH_STENCIL;if(n===ul)return s.RED;if(n===fl)return s.RED_INTEGER;if(n===au)return s.RG;if(n===pl)return s.RG_INTEGER;if(n===_l)return s.RGBA_INTEGER;if(n===So||n===Mo||n===Eo||n===To)if(o===wt)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===So)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Mo)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Eo)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===To)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===So)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Mo)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Eo)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===To)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===bc||n===yc||n===xc||n===Sc)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===bc)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===yc)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===xc)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Sc)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Mc||n===Ec||n===Tc)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(n===Mc||n===Ec)return o===wt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===Tc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Ac||n===Rc||n===Cc||n===Pc||n===Dc||n===Ic||n===Uc||n===Lc||n===Fc||n===Nc||n===Oc||n===kc||n===zc||n===Bc)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(n===Ac)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Rc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Cc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Pc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Dc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Ic)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Uc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Lc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Fc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Nc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Oc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===kc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===zc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Bc)return o===wt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Gc||n===Hc||n===Vc)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(n===Gc)return o===wt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Hc)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Vc)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Wc||n===jc||n===Xc||n===qc)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(n===Wc)return r.COMPRESSED_RED_RGTC1_EXT;if(n===jc)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Xc)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===qc)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===bs?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:t}}const Gv=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,Hv=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class Vv{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t){if(this.texture===null){const n=new Au(e.texture);(e.depthNear!==t.depthNear||e.depthFar!==t.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new xi({vertexShader:Gv,fragmentShader:Hv,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Wt(new On(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class Wv extends Or{constructor(e,t){super();const n=this;let i=null,r=1,o=null,a="local-floor",c=1,l=null,h=null,d=null,u=null,f=null,g=null;const v=typeof XRWebGLBinding<"u",_=new Vv,p={},M=t.getContextAttributes();let E=null,b=null;const R=[],T=[],A=new Qe;let I=null;const x=new En;x.viewport=new At;const y=new En;y.viewport=new At;const U=[x,y],D=new l_;let F=null,N=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(W){let V=R[W];return V===void 0&&(V=new La,R[W]=V),V.getTargetRaySpace()},this.getControllerGrip=function(W){let V=R[W];return V===void 0&&(V=new La,R[W]=V),V.getGripSpace()},this.getHand=function(W){let V=R[W];return V===void 0&&(V=new La,R[W]=V),V.getHandSpace()};function X(W){const V=T.indexOf(W.inputSource);if(V===-1)return;const te=R[V];te!==void 0&&(te.update(W.inputSource,W.frame,l||o),te.dispatchEvent({type:W.type,data:W.inputSource}))}function H(){i.removeEventListener("select",X),i.removeEventListener("selectstart",X),i.removeEventListener("selectend",X),i.removeEventListener("squeeze",X),i.removeEventListener("squeezestart",X),i.removeEventListener("squeezeend",X),i.removeEventListener("end",H),i.removeEventListener("inputsourceschange",oe);for(let W=0;W<R.length;W++){const V=T[W];V!==null&&(T[W]=null,R[W].disconnect(V))}F=null,N=null,_.reset();for(const W in p)delete p[W];e.setRenderTarget(E),f=null,u=null,d=null,i=null,b=null,ee.stop(),n.isPresenting=!1,e.setPixelRatio(I),e.setSize(A.width,A.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(W){r=W,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(W){a=W,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(W){l=W},this.getBaseLayer=function(){return u!==null?u:f},this.getBinding=function(){return d===null&&v&&(d=new XRWebGLBinding(i,t)),d},this.getFrame=function(){return g},this.getSession=function(){return i},this.setSession=async function(W){if(i=W,i!==null){if(E=e.getRenderTarget(),i.addEventListener("select",X),i.addEventListener("selectstart",X),i.addEventListener("selectend",X),i.addEventListener("squeeze",X),i.addEventListener("squeezestart",X),i.addEventListener("squeezeend",X),i.addEventListener("end",H),i.addEventListener("inputsourceschange",oe),M.xrCompatible!==!0&&await t.makeXRCompatible(),I=e.getPixelRatio(),e.getSize(A),v&&"createProjectionLayer"in XRWebGLBinding.prototype){let te=null,ge=null,we=null;M.depth&&(we=M.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,te=M.stencil?xs:ys,ge=M.stencil?bs:Ki);const me={colorFormat:t.RGBA8,depthFormat:we,scaleFactor:r};d=this.getBinding(),u=d.createProjectionLayer(me),i.updateRenderState({layers:[u]}),e.setPixelRatio(1),e.setSize(u.textureWidth,u.textureHeight,!1),b=new Ji(u.textureWidth,u.textureHeight,{format:Nn,type:Xn,depthTexture:new Tu(u.textureWidth,u.textureHeight,ge,void 0,void 0,void 0,void 0,void 0,void 0,te),stencilBuffer:M.stencil,colorSpace:e.outputColorSpace,samples:M.antialias?4:0,resolveDepthBuffer:u.ignoreDepthValues===!1,resolveStencilBuffer:u.ignoreDepthValues===!1})}else{const te={antialias:M.antialias,alpha:!0,depth:M.depth,stencil:M.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(i,t,te),i.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),b=new Ji(f.framebufferWidth,f.framebufferHeight,{format:Nn,type:Xn,colorSpace:e.outputColorSpace,stencilBuffer:M.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}b.isXRRenderTarget=!0,this.setFoveation(c),l=null,o=await i.requestReferenceSpace(a),ee.setContext(i),ee.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return _.getDepthTexture()};function oe(W){for(let V=0;V<W.removed.length;V++){const te=W.removed[V],ge=T.indexOf(te);ge>=0&&(T[ge]=null,R[ge].disconnect(te))}for(let V=0;V<W.added.length;V++){const te=W.added[V];let ge=T.indexOf(te);if(ge===-1){for(let me=0;me<R.length;me++)if(me>=T.length){T.push(te),ge=me;break}else if(T[me]===null){T[me]=te,ge=me;break}if(ge===-1)break}const we=R[ge];we&&we.connect(te)}}const K=new q,Q=new q;function $(W,V,te){K.setFromMatrixPosition(V.matrixWorld),Q.setFromMatrixPosition(te.matrixWorld);const ge=K.distanceTo(Q),we=V.projectionMatrix.elements,me=te.projectionMatrix.elements,be=we[14]/(we[10]-1),L=we[14]/(we[10]+1),Oe=(we[9]+1)/we[5],Ee=(we[9]-1)/we[5],Te=(we[8]-1)/we[0],ve=(me[8]+1)/me[0],Se=be*Te,_e=be*ve,Re=ge/(-Te+ve),fe=Re*-Te;if(V.matrixWorld.decompose(W.position,W.quaternion,W.scale),W.translateX(fe),W.translateZ(Re),W.matrixWorld.compose(W.position,W.quaternion,W.scale),W.matrixWorldInverse.copy(W.matrixWorld).invert(),we[10]===-1)W.projectionMatrix.copy(V.projectionMatrix),W.projectionMatrixInverse.copy(V.projectionMatrixInverse);else{const Ve=be+Re,P=L+Re,S=Se-fe,B=_e+(ge-fe),re=Oe*L/P*Ve,ne=Ee*L/P*Ve;W.projectionMatrix.makePerspective(S,B,re,ne,Ve,P),W.projectionMatrixInverse.copy(W.projectionMatrix).invert()}}function k(W,V){V===null?W.matrixWorld.copy(W.matrix):W.matrixWorld.multiplyMatrices(V.matrixWorld,W.matrix),W.matrixWorldInverse.copy(W.matrixWorld).invert()}this.updateCamera=function(W){if(i===null)return;let V=W.near,te=W.far;_.texture!==null&&(_.depthNear>0&&(V=_.depthNear),_.depthFar>0&&(te=_.depthFar)),D.near=y.near=x.near=V,D.far=y.far=x.far=te,(F!==D.near||N!==D.far)&&(i.updateRenderState({depthNear:D.near,depthFar:D.far}),F=D.near,N=D.far),D.layers.mask=W.layers.mask|6,x.layers.mask=D.layers.mask&3,y.layers.mask=D.layers.mask&5;const ge=W.parent,we=D.cameras;k(D,ge);for(let me=0;me<we.length;me++)k(we[me],ge);we.length===2?$(D,x,y):D.projectionMatrix.copy(x.projectionMatrix),Y(W,D,ge)};function Y(W,V,te){te===null?W.matrix.copy(V.matrixWorld):(W.matrix.copy(te.matrixWorld),W.matrix.invert(),W.matrix.multiply(V.matrixWorld)),W.matrix.decompose(W.position,W.quaternion,W.scale),W.updateMatrixWorld(!0),W.projectionMatrix.copy(V.projectionMatrix),W.projectionMatrixInverse.copy(V.projectionMatrixInverse),W.isPerspectiveCamera&&(W.fov=Kc*2*Math.atan(1/W.projectionMatrix.elements[5]),W.zoom=1)}this.getCamera=function(){return D},this.getFoveation=function(){if(!(u===null&&f===null))return c},this.setFoveation=function(W){c=W,u!==null&&(u.fixedFoveation=W),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=W)},this.hasDepthSensing=function(){return _.texture!==null},this.getDepthSensingMesh=function(){return _.getMesh(D)},this.getCameraTexture=function(W){return p[W]};let ie=null;function se(W,V){if(h=V.getViewerPose(l||o),g=V,h!==null){const te=h.views;f!==null&&(e.setRenderTargetFramebuffer(b,f.framebuffer),e.setRenderTarget(b));let ge=!1;te.length!==D.cameras.length&&(D.cameras.length=0,ge=!0);for(let L=0;L<te.length;L++){const Oe=te[L];let Ee=null;if(f!==null)Ee=f.getViewport(Oe);else{const ve=d.getViewSubImage(u,Oe);Ee=ve.viewport,L===0&&(e.setRenderTargetTextures(b,ve.colorTexture,ve.depthStencilTexture),e.setRenderTarget(b))}let Te=U[L];Te===void 0&&(Te=new En,Te.layers.enable(L),Te.viewport=new At,U[L]=Te),Te.matrix.fromArray(Oe.transform.matrix),Te.matrix.decompose(Te.position,Te.quaternion,Te.scale),Te.projectionMatrix.fromArray(Oe.projectionMatrix),Te.projectionMatrixInverse.copy(Te.projectionMatrix).invert(),Te.viewport.set(Ee.x,Ee.y,Ee.width,Ee.height),L===0&&(D.matrix.copy(Te.matrix),D.matrix.decompose(D.position,D.quaternion,D.scale)),ge===!0&&D.cameras.push(Te)}const we=i.enabledFeatures;if(we&&we.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&v){d=n.getBinding();const L=d.getDepthInformation(te[0]);L&&L.isValid&&L.texture&&_.init(L,i.renderState)}if(we&&we.includes("camera-access")&&v){e.state.unbindTexture(),d=n.getBinding();for(let L=0;L<te.length;L++){const Oe=te[L].camera;if(Oe){let Ee=p[Oe];Ee||(Ee=new Au,p[Oe]=Ee);const Te=d.getCameraImage(Oe);Ee.sourceTexture=Te}}}}for(let te=0;te<R.length;te++){const ge=T[te],we=R[te];ge!==null&&we!==void 0&&we.update(ge,V,l||o)}ie&&ie(W,V),V.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:V}),g=null}const ee=new Uu;ee.setAnimationLoop(se),this.setAnimationLoop=function(W){ie=W},this.dispose=function(){}}}const Li=new nn,jv=new ft;function Xv(s,e){function t(_,p){_.matrixAutoUpdate===!0&&_.updateMatrix(),p.value.copy(_.matrix)}function n(_,p){p.color.getRGB(_.fogColor.value,gu(s)),p.isFog?(_.fogNear.value=p.near,_.fogFar.value=p.far):p.isFogExp2&&(_.fogDensity.value=p.density)}function i(_,p,M,E,b){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(_,p):p.isMeshToonMaterial?(r(_,p),d(_,p)):p.isMeshPhongMaterial?(r(_,p),h(_,p)):p.isMeshStandardMaterial?(r(_,p),u(_,p),p.isMeshPhysicalMaterial&&f(_,p,b)):p.isMeshMatcapMaterial?(r(_,p),g(_,p)):p.isMeshDepthMaterial?r(_,p):p.isMeshDistanceMaterial?(r(_,p),v(_,p)):p.isMeshNormalMaterial?r(_,p):p.isLineBasicMaterial?(o(_,p),p.isLineDashedMaterial&&a(_,p)):p.isPointsMaterial?c(_,p,M,E):p.isSpriteMaterial?l(_,p):p.isShadowMaterial?(_.color.value.copy(p.color),_.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(_,p){_.opacity.value=p.opacity,p.color&&_.diffuse.value.copy(p.color),p.emissive&&_.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(_.map.value=p.map,t(p.map,_.mapTransform)),p.alphaMap&&(_.alphaMap.value=p.alphaMap,t(p.alphaMap,_.alphaMapTransform)),p.bumpMap&&(_.bumpMap.value=p.bumpMap,t(p.bumpMap,_.bumpMapTransform),_.bumpScale.value=p.bumpScale,p.side===dn&&(_.bumpScale.value*=-1)),p.normalMap&&(_.normalMap.value=p.normalMap,t(p.normalMap,_.normalMapTransform),_.normalScale.value.copy(p.normalScale),p.side===dn&&_.normalScale.value.negate()),p.displacementMap&&(_.displacementMap.value=p.displacementMap,t(p.displacementMap,_.displacementMapTransform),_.displacementScale.value=p.displacementScale,_.displacementBias.value=p.displacementBias),p.emissiveMap&&(_.emissiveMap.value=p.emissiveMap,t(p.emissiveMap,_.emissiveMapTransform)),p.specularMap&&(_.specularMap.value=p.specularMap,t(p.specularMap,_.specularMapTransform)),p.alphaTest>0&&(_.alphaTest.value=p.alphaTest);const M=e.get(p),E=M.envMap,b=M.envMapRotation;E&&(_.envMap.value=E,Li.copy(b),Li.x*=-1,Li.y*=-1,Li.z*=-1,E.isCubeTexture&&E.isRenderTargetTexture===!1&&(Li.y*=-1,Li.z*=-1),_.envMapRotation.value.setFromMatrix4(jv.makeRotationFromEuler(Li)),_.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,_.reflectivity.value=p.reflectivity,_.ior.value=p.ior,_.refractionRatio.value=p.refractionRatio),p.lightMap&&(_.lightMap.value=p.lightMap,_.lightMapIntensity.value=p.lightMapIntensity,t(p.lightMap,_.lightMapTransform)),p.aoMap&&(_.aoMap.value=p.aoMap,_.aoMapIntensity.value=p.aoMapIntensity,t(p.aoMap,_.aoMapTransform))}function o(_,p){_.diffuse.value.copy(p.color),_.opacity.value=p.opacity,p.map&&(_.map.value=p.map,t(p.map,_.mapTransform))}function a(_,p){_.dashSize.value=p.dashSize,_.totalSize.value=p.dashSize+p.gapSize,_.scale.value=p.scale}function c(_,p,M,E){_.diffuse.value.copy(p.color),_.opacity.value=p.opacity,_.size.value=p.size*M,_.scale.value=E*.5,p.map&&(_.map.value=p.map,t(p.map,_.uvTransform)),p.alphaMap&&(_.alphaMap.value=p.alphaMap,t(p.alphaMap,_.alphaMapTransform)),p.alphaTest>0&&(_.alphaTest.value=p.alphaTest)}function l(_,p){_.diffuse.value.copy(p.color),_.opacity.value=p.opacity,_.rotation.value=p.rotation,p.map&&(_.map.value=p.map,t(p.map,_.mapTransform)),p.alphaMap&&(_.alphaMap.value=p.alphaMap,t(p.alphaMap,_.alphaMapTransform)),p.alphaTest>0&&(_.alphaTest.value=p.alphaTest)}function h(_,p){_.specular.value.copy(p.specular),_.shininess.value=Math.max(p.shininess,1e-4)}function d(_,p){p.gradientMap&&(_.gradientMap.value=p.gradientMap)}function u(_,p){_.metalness.value=p.metalness,p.metalnessMap&&(_.metalnessMap.value=p.metalnessMap,t(p.metalnessMap,_.metalnessMapTransform)),_.roughness.value=p.roughness,p.roughnessMap&&(_.roughnessMap.value=p.roughnessMap,t(p.roughnessMap,_.roughnessMapTransform)),p.envMap&&(_.envMapIntensity.value=p.envMapIntensity)}function f(_,p,M){_.ior.value=p.ior,p.sheen>0&&(_.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),_.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(_.sheenColorMap.value=p.sheenColorMap,t(p.sheenColorMap,_.sheenColorMapTransform)),p.sheenRoughnessMap&&(_.sheenRoughnessMap.value=p.sheenRoughnessMap,t(p.sheenRoughnessMap,_.sheenRoughnessMapTransform))),p.clearcoat>0&&(_.clearcoat.value=p.clearcoat,_.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(_.clearcoatMap.value=p.clearcoatMap,t(p.clearcoatMap,_.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(_.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,t(p.clearcoatRoughnessMap,_.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(_.clearcoatNormalMap.value=p.clearcoatNormalMap,t(p.clearcoatNormalMap,_.clearcoatNormalMapTransform),_.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===dn&&_.clearcoatNormalScale.value.negate())),p.dispersion>0&&(_.dispersion.value=p.dispersion),p.iridescence>0&&(_.iridescence.value=p.iridescence,_.iridescenceIOR.value=p.iridescenceIOR,_.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],_.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(_.iridescenceMap.value=p.iridescenceMap,t(p.iridescenceMap,_.iridescenceMapTransform)),p.iridescenceThicknessMap&&(_.iridescenceThicknessMap.value=p.iridescenceThicknessMap,t(p.iridescenceThicknessMap,_.iridescenceThicknessMapTransform))),p.transmission>0&&(_.transmission.value=p.transmission,_.transmissionSamplerMap.value=M.texture,_.transmissionSamplerSize.value.set(M.width,M.height),p.transmissionMap&&(_.transmissionMap.value=p.transmissionMap,t(p.transmissionMap,_.transmissionMapTransform)),_.thickness.value=p.thickness,p.thicknessMap&&(_.thicknessMap.value=p.thicknessMap,t(p.thicknessMap,_.thicknessMapTransform)),_.attenuationDistance.value=p.attenuationDistance,_.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(_.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(_.anisotropyMap.value=p.anisotropyMap,t(p.anisotropyMap,_.anisotropyMapTransform))),_.specularIntensity.value=p.specularIntensity,_.specularColor.value.copy(p.specularColor),p.specularColorMap&&(_.specularColorMap.value=p.specularColorMap,t(p.specularColorMap,_.specularColorMapTransform)),p.specularIntensityMap&&(_.specularIntensityMap.value=p.specularIntensityMap,t(p.specularIntensityMap,_.specularIntensityMapTransform))}function g(_,p){p.matcap&&(_.matcap.value=p.matcap)}function v(_,p){const M=e.get(p).light;_.referencePosition.value.setFromMatrixPosition(M.matrixWorld),_.nearDistance.value=M.shadow.camera.near,_.farDistance.value=M.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function qv(s,e,t,n){let i={},r={},o=[];const a=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function c(M,E){const b=E.program;n.uniformBlockBinding(M,b)}function l(M,E){let b=i[M.id];b===void 0&&(g(M),b=h(M),i[M.id]=b,M.addEventListener("dispose",_));const R=E.program;n.updateUBOMapping(M,R);const T=e.render.frame;r[M.id]!==T&&(u(M),r[M.id]=T)}function h(M){const E=d();M.__bindingPointIndex=E;const b=s.createBuffer(),R=M.__size,T=M.usage;return s.bindBuffer(s.UNIFORM_BUFFER,b),s.bufferData(s.UNIFORM_BUFFER,R,T),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,E,b),b}function d(){for(let M=0;M<a;M++)if(o.indexOf(M)===-1)return o.push(M),M;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function u(M){const E=i[M.id],b=M.uniforms,R=M.__cache;s.bindBuffer(s.UNIFORM_BUFFER,E);for(let T=0,A=b.length;T<A;T++){const I=Array.isArray(b[T])?b[T]:[b[T]];for(let x=0,y=I.length;x<y;x++){const U=I[x];if(f(U,T,x,R)===!0){const D=U.__offset,F=Array.isArray(U.value)?U.value:[U.value];let N=0;for(let X=0;X<F.length;X++){const H=F[X],oe=v(H);typeof H=="number"||typeof H=="boolean"?(U.__data[0]=H,s.bufferSubData(s.UNIFORM_BUFFER,D+N,U.__data)):H.isMatrix3?(U.__data[0]=H.elements[0],U.__data[1]=H.elements[1],U.__data[2]=H.elements[2],U.__data[3]=0,U.__data[4]=H.elements[3],U.__data[5]=H.elements[4],U.__data[6]=H.elements[5],U.__data[7]=0,U.__data[8]=H.elements[6],U.__data[9]=H.elements[7],U.__data[10]=H.elements[8],U.__data[11]=0):(H.toArray(U.__data,N),N+=oe.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,D,U.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(M,E,b,R){const T=M.value,A=E+"_"+b;if(R[A]===void 0)return typeof T=="number"||typeof T=="boolean"?R[A]=T:R[A]=T.clone(),!0;{const I=R[A];if(typeof T=="number"||typeof T=="boolean"){if(I!==T)return R[A]=T,!0}else if(I.equals(T)===!1)return I.copy(T),!0}return!1}function g(M){const E=M.uniforms;let b=0;const R=16;for(let A=0,I=E.length;A<I;A++){const x=Array.isArray(E[A])?E[A]:[E[A]];for(let y=0,U=x.length;y<U;y++){const D=x[y],F=Array.isArray(D.value)?D.value:[D.value];for(let N=0,X=F.length;N<X;N++){const H=F[N],oe=v(H),K=b%R,Q=K%oe.boundary,$=K+Q;b+=Q,$!==0&&R-$<oe.storage&&(b+=R-$),D.__data=new Float32Array(oe.storage/Float32Array.BYTES_PER_ELEMENT),D.__offset=b,b+=oe.storage}}}const T=b%R;return T>0&&(b+=R-T),M.__size=b,M.__cache={},this}function v(M){const E={boundary:0,storage:0};return typeof M=="number"||typeof M=="boolean"?(E.boundary=4,E.storage=4):M.isVector2?(E.boundary=8,E.storage=8):M.isVector3||M.isColor?(E.boundary=16,E.storage=12):M.isVector4?(E.boundary=16,E.storage=16):M.isMatrix3?(E.boundary=48,E.storage=48):M.isMatrix4?(E.boundary=64,E.storage=64):M.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",M),E}function _(M){const E=M.target;E.removeEventListener("dispose",_);const b=o.indexOf(E.__bindingPointIndex);o.splice(b,1),s.deleteBuffer(i[E.id]),delete i[E.id],delete r[E.id]}function p(){for(const M in i)s.deleteBuffer(i[M]);o=[],i={},r={}}return{bind:c,update:l,dispose:p}}class Yv{constructor(e={}){const{canvas:t=bp(),context:n=null,depth:i=!0,stencil:r=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:d=!1,reversedDepthBuffer:u=!1}=e;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=o;const g=new Uint32Array(4),v=new Int32Array(4);let _=null,p=null;const M=[],E=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=wi,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const b=this;let R=!1;this._outputColorSpace=Mn;let T=0,A=0,I=null,x=-1,y=null;const U=new At,D=new At;let F=null;const N=new rt(0);let X=0,H=t.width,oe=t.height,K=1,Q=null,$=null;const k=new At(0,0,H,oe),Y=new At(0,0,H,oe);let ie=!1;const se=new wl;let ee=!1,W=!1;const V=new ft,te=new q,ge=new At,we={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let me=!1;function be(){return I===null?K:1}let L=n;function Oe(C,Z){return t.getContext(C,Z)}try{const C={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:d};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${cl}`),t.addEventListener("webglcontextlost",xe,!1),t.addEventListener("webglcontextrestored",ke,!1),t.addEventListener("webglcontextcreationerror",pe,!1),L===null){const Z="webgl2";if(L=Oe(Z,C),L===null)throw Oe(Z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Ee,Te,ve,Se,_e,Re,fe,Ve,P,S,B,re,ne,J,Me,ue,De,Ie,de,ye,Ae,Le,Ce,Xe;function G(){Ee=new rw(L),Ee.init(),Le=new Bv(L,Ee),Te=new Zg(L,Ee,e,Le),ve=new kv(L,Ee),Te.reversedDepthBuffer&&u&&ve.buffers.depth.setReversed(!0),Se=new aw(L),_e=new Ev,Re=new zv(L,Ee,ve,_e,Te,Le,Se),fe=new Qg(b),Ve=new iw(b),P=new f_(L),Ce=new Kg(L,P),S=new sw(L,P,Se,Ce),B=new lw(L,S,P,Se),de=new cw(L,Te,Re),ue=new $g(_e),re=new Mv(b,fe,Ve,Ee,Te,Ce,ue),ne=new Xv(b,_e),J=new Av,Me=new Uv(Ee),Ie=new Yg(b,fe,Ve,ve,B,f,c),De=new Nv(b,B,Te),Xe=new qv(L,Se,Te,ve),ye=new Jg(L,Ee,Se),Ae=new ow(L,Ee,Se),Se.programs=re.programs,b.capabilities=Te,b.extensions=Ee,b.properties=_e,b.renderLists=J,b.shadowMap=De,b.state=ve,b.info=Se}G();const he=new Wv(b,L);this.xr=he,this.getContext=function(){return L},this.getContextAttributes=function(){return L.getContextAttributes()},this.forceContextLoss=function(){const C=Ee.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Ee.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return K},this.setPixelRatio=function(C){C!==void 0&&(K=C,this.setSize(H,oe,!1))},this.getSize=function(C){return C.set(H,oe)},this.setSize=function(C,Z,ce=!0){if(he.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}H=C,oe=Z,t.width=Math.floor(C*K),t.height=Math.floor(Z*K),ce===!0&&(t.style.width=C+"px",t.style.height=Z+"px"),this.setViewport(0,0,C,Z)},this.getDrawingBufferSize=function(C){return C.set(H*K,oe*K).floor()},this.setDrawingBufferSize=function(C,Z,ce){H=C,oe=Z,K=ce,t.width=Math.floor(C*ce),t.height=Math.floor(Z*ce),this.setViewport(0,0,C,Z)},this.getCurrentViewport=function(C){return C.copy(U)},this.getViewport=function(C){return C.copy(k)},this.setViewport=function(C,Z,ce,le){C.isVector4?k.set(C.x,C.y,C.z,C.w):k.set(C,Z,ce,le),ve.viewport(U.copy(k).multiplyScalar(K).round())},this.getScissor=function(C){return C.copy(Y)},this.setScissor=function(C,Z,ce,le){C.isVector4?Y.set(C.x,C.y,C.z,C.w):Y.set(C,Z,ce,le),ve.scissor(D.copy(Y).multiplyScalar(K).round())},this.getScissorTest=function(){return ie},this.setScissorTest=function(C){ve.setScissorTest(ie=C)},this.setOpaqueSort=function(C){Q=C},this.setTransparentSort=function(C){$=C},this.getClearColor=function(C){return C.copy(Ie.getClearColor())},this.setClearColor=function(){Ie.setClearColor(...arguments)},this.getClearAlpha=function(){return Ie.getClearAlpha()},this.setClearAlpha=function(){Ie.setClearAlpha(...arguments)},this.clear=function(C=!0,Z=!0,ce=!0){let le=0;if(C){let z=!1;if(I!==null){const Pe=I.texture.format;z=Pe===_l||Pe===pl||Pe===fl}if(z){const Pe=I.texture.type,Ne=Pe===Xn||Pe===Ki||Pe===vs||Pe===bs||Pe===hl||Pe===dl,He=Ie.getClearColor(),ze=Ie.getClearAlpha(),Ze=He.r,$e=He.g,je=He.b;Ne?(g[0]=Ze,g[1]=$e,g[2]=je,g[3]=ze,L.clearBufferuiv(L.COLOR,0,g)):(v[0]=Ze,v[1]=$e,v[2]=je,v[3]=ze,L.clearBufferiv(L.COLOR,0,v))}else le|=L.COLOR_BUFFER_BIT}Z&&(le|=L.DEPTH_BUFFER_BIT),ce&&(le|=L.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),L.clear(le)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",xe,!1),t.removeEventListener("webglcontextrestored",ke,!1),t.removeEventListener("webglcontextcreationerror",pe,!1),Ie.dispose(),J.dispose(),Me.dispose(),_e.dispose(),fe.dispose(),Ve.dispose(),B.dispose(),Ce.dispose(),Xe.dispose(),re.dispose(),he.dispose(),he.removeEventListener("sessionstart",xt),he.removeEventListener("sessionend",Ct),Ot.stop()};function xe(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),R=!0}function ke(){console.log("THREE.WebGLRenderer: Context Restored."),R=!1;const C=Se.autoReset,Z=De.enabled,ce=De.autoUpdate,le=De.needsUpdate,z=De.type;G(),Se.autoReset=C,De.enabled=Z,De.autoUpdate=ce,De.needsUpdate=le,De.type=z}function pe(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function ae(C){const Z=C.target;Z.removeEventListener("dispose",ae),Ue(Z)}function Ue(C){Be(C),_e.remove(C)}function Be(C){const Z=_e.get(C).programs;Z!==void 0&&(Z.forEach(function(ce){re.releaseProgram(ce)}),C.isShaderMaterial&&re.releaseShaderCache(C))}this.renderBufferDirect=function(C,Z,ce,le,z,Pe){Z===null&&(Z=we);const Ne=z.isMesh&&z.matrixWorld.determinant()<0,He=Gr(C,Z,ce,le,z);ve.setMaterial(le,Ne);let ze=ce.index,Ze=1;if(le.wireframe===!0){if(ze=S.getWireframeAttribute(ce),ze===void 0)return;Ze=2}const $e=ce.drawRange,je=ce.attributes.position;let tt=$e.start*Ze,pt=($e.start+$e.count)*Ze;Pe!==null&&(tt=Math.max(tt,Pe.start*Ze),pt=Math.min(pt,(Pe.start+Pe.count)*Ze)),ze!==null?(tt=Math.max(tt,0),pt=Math.min(pt,ze.count)):je!=null&&(tt=Math.max(tt,0),pt=Math.min(pt,je.count));const St=pt-tt;if(St<0||St===1/0)return;Ce.setup(z,le,He,ce,ze);let gt,_t=ye;if(ze!==null&&(gt=P.get(ze),_t=Ae,_t.setIndex(gt)),z.isMesh)le.wireframe===!0?(ve.setLineWidth(le.wireframeLinewidth*be()),_t.setMode(L.LINES)):_t.setMode(L.TRIANGLES);else if(z.isLine){let Ke=le.linewidth;Ke===void 0&&(Ke=1),ve.setLineWidth(Ke*be()),z.isLineSegments?_t.setMode(L.LINES):z.isLineLoop?_t.setMode(L.LINE_LOOP):_t.setMode(L.LINE_STRIP)}else z.isPoints?_t.setMode(L.POINTS):z.isSprite&&_t.setMode(L.TRIANGLES);if(z.isBatchedMesh)if(z._multiDrawInstances!==null)Ss("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),_t.renderMultiDrawInstances(z._multiDrawStarts,z._multiDrawCounts,z._multiDrawCount,z._multiDrawInstances);else if(Ee.get("WEBGL_multi_draw"))_t.renderMultiDraw(z._multiDrawStarts,z._multiDrawCounts,z._multiDrawCount);else{const Ke=z._multiDrawStarts,mt=z._multiDrawCounts,at=z._multiDrawCount,Lt=ze?P.get(ze).bytesPerElement:1,zn=_e.get(le).currentProgram.getUniforms();for(let Xt=0;Xt<at;Xt++)zn.setValue(L,"_gl_DrawID",Xt),_t.render(Ke[Xt]/Lt,mt[Xt])}else if(z.isInstancedMesh)_t.renderInstances(tt,St,z.count);else if(ce.isInstancedBufferGeometry){const Ke=ce._maxInstanceCount!==void 0?ce._maxInstanceCount:1/0,mt=Math.min(ce.instanceCount,Ke);_t.renderInstances(tt,St,mt)}else _t.render(tt,St)};function Ge(C,Z,ce){C.transparent===!0&&C.side===Fn&&C.forceSinglePass===!1?(C.side=dn,C.needsUpdate=!0,Ut(C,Z,ce),C.side=bi,C.needsUpdate=!0,Ut(C,Z,ce),C.side=Fn):Ut(C,Z,ce)}this.compile=function(C,Z,ce=null){ce===null&&(ce=C),p=Me.get(ce),p.init(Z),E.push(p),ce.traverseVisible(function(z){z.isLight&&z.layers.test(Z.layers)&&(p.pushLight(z),z.castShadow&&p.pushShadow(z))}),C!==ce&&C.traverseVisible(function(z){z.isLight&&z.layers.test(Z.layers)&&(p.pushLight(z),z.castShadow&&p.pushShadow(z))}),p.setupLights();const le=new Set;return C.traverse(function(z){if(!(z.isMesh||z.isPoints||z.isLine||z.isSprite))return;const Pe=z.material;if(Pe)if(Array.isArray(Pe))for(let Ne=0;Ne<Pe.length;Ne++){const He=Pe[Ne];Ge(He,ce,z),le.add(He)}else Ge(Pe,ce,z),le.add(Pe)}),p=E.pop(),le},this.compileAsync=function(C,Z,ce=null){const le=this.compile(C,Z,ce);return new Promise(z=>{function Pe(){if(le.forEach(function(Ne){_e.get(Ne).currentProgram.isReady()&&le.delete(Ne)}),le.size===0){z(C);return}setTimeout(Pe,10)}Ee.get("KHR_parallel_shader_compile")!==null?Pe():setTimeout(Pe,10)})};let qe=null;function Mt(C){qe&&qe(C)}function xt(){Ot.stop()}function Ct(){Ot.start()}const Ot=new Uu;Ot.setAnimationLoop(Mt),typeof self<"u"&&Ot.setContext(self),this.setAnimationLoop=function(C){qe=C,he.setAnimationLoop(C),C===null?Ot.stop():Ot.start()},he.addEventListener("sessionstart",xt),he.addEventListener("sessionend",Ct),this.render=function(C,Z){if(Z!==void 0&&Z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(R===!0)return;if(C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),Z.parent===null&&Z.matrixWorldAutoUpdate===!0&&Z.updateMatrixWorld(),he.enabled===!0&&he.isPresenting===!0&&(he.cameraAutoUpdate===!0&&he.updateCamera(Z),Z=he.getCamera()),C.isScene===!0&&C.onBeforeRender(b,C,Z,I),p=Me.get(C,E.length),p.init(Z),E.push(p),V.multiplyMatrices(Z.projectionMatrix,Z.matrixWorldInverse),se.setFromProjectionMatrix(V,Vn,Z.reversedDepth),W=this.localClippingEnabled,ee=ue.init(this.clippingPlanes,W),_=J.get(C,M.length),_.init(),M.push(_),he.enabled===!0&&he.isPresenting===!0){const Pe=b.xr.getDepthSensingMesh();Pe!==null&&gn(Pe,Z,-1/0,b.sortObjects)}gn(C,Z,0,b.sortObjects),_.finish(),b.sortObjects===!0&&_.sort(Q,$),me=he.enabled===!1||he.isPresenting===!1||he.hasDepthSensing()===!1,me&&Ie.addToRenderList(_,C),this.info.render.frame++,ee===!0&&ue.beginShadows();const ce=p.state.shadowsArray;De.render(ce,C,Z),ee===!0&&ue.endShadows(),this.info.autoReset===!0&&this.info.reset();const le=_.opaque,z=_.transmissive;if(p.setupLights(),Z.isArrayCamera){const Pe=Z.cameras;if(z.length>0)for(let Ne=0,He=Pe.length;Ne<He;Ne++){const ze=Pe[Ne];An(le,z,C,ze)}me&&Ie.render(C);for(let Ne=0,He=Pe.length;Ne<He;Ne++){const ze=Pe[Ne];wn(_,C,ze,ze.viewport)}}else z.length>0&&An(le,z,C,Z),me&&Ie.render(C),wn(_,C,Z);I!==null&&A===0&&(Re.updateMultisampleRenderTarget(I),Re.updateRenderTargetMipmap(I)),C.isScene===!0&&C.onAfterRender(b,C,Z),Ce.resetDefaultState(),x=-1,y=null,E.pop(),E.length>0?(p=E[E.length-1],ee===!0&&ue.setGlobalState(b.clippingPlanes,p.state.camera)):p=null,M.pop(),M.length>0?_=M[M.length-1]:_=null};function gn(C,Z,ce,le){if(C.visible===!1)return;if(C.layers.test(Z.layers)){if(C.isGroup)ce=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(Z);else if(C.isLight)p.pushLight(C),C.castShadow&&p.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||se.intersectsSprite(C)){le&&ge.setFromMatrixPosition(C.matrixWorld).applyMatrix4(V);const Ne=B.update(C),He=C.material;He.visible&&_.push(C,Ne,He,ce,ge.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(!C.frustumCulled||se.intersectsObject(C))){const Ne=B.update(C),He=C.material;if(le&&(C.boundingSphere!==void 0?(C.boundingSphere===null&&C.computeBoundingSphere(),ge.copy(C.boundingSphere.center)):(Ne.boundingSphere===null&&Ne.computeBoundingSphere(),ge.copy(Ne.boundingSphere.center)),ge.applyMatrix4(C.matrixWorld).applyMatrix4(V)),Array.isArray(He)){const ze=Ne.groups;for(let Ze=0,$e=ze.length;Ze<$e;Ze++){const je=ze[Ze],tt=He[je.materialIndex];tt&&tt.visible&&_.push(C,Ne,tt,ce,ge.z,je)}}else He.visible&&_.push(C,Ne,He,ce,ge.z,null)}}const Pe=C.children;for(let Ne=0,He=Pe.length;Ne<He;Ne++)gn(Pe[Ne],Z,ce,le)}function wn(C,Z,ce,le){const z=C.opaque,Pe=C.transmissive,Ne=C.transparent;p.setupLightsView(ce),ee===!0&&ue.setGlobalState(b.clippingPlanes,ce),le&&ve.viewport(U.copy(le)),z.length>0&&vn(z,Z,ce),Pe.length>0&&vn(Pe,Z,ce),Ne.length>0&&vn(Ne,Z,ce),ve.buffers.depth.setTest(!0),ve.buffers.depth.setMask(!0),ve.buffers.color.setMask(!0),ve.setPolygonOffset(!1)}function An(C,Z,ce,le){if((ce.isScene===!0?ce.overrideMaterial:null)!==null)return;p.state.transmissionRenderTarget[le.id]===void 0&&(p.state.transmissionRenderTarget[le.id]=new Ji(1,1,{generateMipmaps:!0,type:Ee.has("EXT_color_buffer_half_float")||Ee.has("EXT_color_buffer_float")?Rs:Xn,minFilter:Vi,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:ut.workingColorSpace}));const Pe=p.state.transmissionRenderTarget[le.id],Ne=le.viewport||U;Pe.setSize(Ne.z*b.transmissionResolutionScale,Ne.w*b.transmissionResolutionScale);const He=b.getRenderTarget(),ze=b.getActiveCubeFace(),Ze=b.getActiveMipmapLevel();b.setRenderTarget(Pe),b.getClearColor(N),X=b.getClearAlpha(),X<1&&b.setClearColor(16777215,.5),b.clear(),me&&Ie.render(ce);const $e=b.toneMapping;b.toneMapping=wi;const je=le.viewport;if(le.viewport!==void 0&&(le.viewport=void 0),p.setupLightsView(le),ee===!0&&ue.setGlobalState(b.clippingPlanes,le),vn(C,ce,le),Re.updateMultisampleRenderTarget(Pe),Re.updateRenderTargetMipmap(Pe),Ee.has("WEBGL_multisampled_render_to_texture")===!1){let tt=!1;for(let pt=0,St=Z.length;pt<St;pt++){const gt=Z[pt],_t=gt.object,Ke=gt.geometry,mt=gt.material,at=gt.group;if(mt.side===Fn&&_t.layers.test(le.layers)){const Lt=mt.side;mt.side=dn,mt.needsUpdate=!0,bn(_t,ce,le,Ke,mt,at),mt.side=Lt,mt.needsUpdate=!0,tt=!0}}tt===!0&&(Re.updateMultisampleRenderTarget(Pe),Re.updateRenderTargetMipmap(Pe))}b.setRenderTarget(He,ze,Ze),b.setClearColor(N,X),je!==void 0&&(le.viewport=je),b.toneMapping=$e}function vn(C,Z,ce){const le=Z.isScene===!0?Z.overrideMaterial:null;for(let z=0,Pe=C.length;z<Pe;z++){const Ne=C[z],He=Ne.object,ze=Ne.geometry,Ze=Ne.group;let $e=Ne.material;$e.allowOverride===!0&&le!==null&&($e=le),He.layers.test(ce.layers)&&bn(He,Z,ce,ze,$e,Ze)}}function bn(C,Z,ce,le,z,Pe){C.onBeforeRender(b,Z,ce,le,z,Pe),C.modelViewMatrix.multiplyMatrices(ce.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),z.onBeforeRender(b,Z,ce,le,C,Pe),z.transparent===!0&&z.side===Fn&&z.forceSinglePass===!1?(z.side=dn,z.needsUpdate=!0,b.renderBufferDirect(ce,Z,le,z,C,Pe),z.side=bi,z.needsUpdate=!0,b.renderBufferDirect(ce,Z,le,z,C,Pe),z.side=Fn):b.renderBufferDirect(ce,Z,le,z,C,Pe),C.onAfterRender(b,Z,ce,le,z,Pe)}function Ut(C,Z,ce){Z.isScene!==!0&&(Z=we);const le=_e.get(C),z=p.state.lights,Pe=p.state.shadowsArray,Ne=z.state.version,He=re.getParameters(C,z.state,Pe,Z,ce),ze=re.getProgramCacheKey(He);let Ze=le.programs;le.environment=C.isMeshStandardMaterial?Z.environment:null,le.fog=Z.fog,le.envMap=(C.isMeshStandardMaterial?Ve:fe).get(C.envMap||le.environment),le.envMapRotation=le.environment!==null&&C.envMap===null?Z.environmentRotation:C.envMapRotation,Ze===void 0&&(C.addEventListener("dispose",ae),Ze=new Map,le.programs=Ze);let $e=Ze.get(ze);if($e!==void 0){if(le.currentProgram===$e&&le.lightsStateVersion===Ne)return Br(C,He),$e}else He.uniforms=re.getUniforms(C),C.onBeforeCompile(He,b),$e=re.acquireProgram(He,ze),Ze.set(ze,$e),le.uniforms=He.uniforms;const je=le.uniforms;return(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(je.clippingPlanes=ue.uniform),Br(C,He),le.needsLights=Ds(C),le.lightsStateVersion=Ne,le.needsLights&&(je.ambientLightColor.value=z.state.ambient,je.lightProbe.value=z.state.probe,je.directionalLights.value=z.state.directional,je.directionalLightShadows.value=z.state.directionalShadow,je.spotLights.value=z.state.spot,je.spotLightShadows.value=z.state.spotShadow,je.rectAreaLights.value=z.state.rectArea,je.ltc_1.value=z.state.rectAreaLTC1,je.ltc_2.value=z.state.rectAreaLTC2,je.pointLights.value=z.state.point,je.pointLightShadows.value=z.state.pointShadow,je.hemisphereLights.value=z.state.hemi,je.directionalShadowMap.value=z.state.directionalShadowMap,je.directionalShadowMatrix.value=z.state.directionalShadowMatrix,je.spotShadowMap.value=z.state.spotShadowMap,je.spotLightMatrix.value=z.state.spotLightMatrix,je.spotLightMap.value=z.state.spotLightMap,je.pointShadowMap.value=z.state.pointShadowMap,je.pointShadowMatrix.value=z.state.pointShadowMatrix),le.currentProgram=$e,le.uniformsList=null,$e}function kn(C){if(C.uniformsList===null){const Z=C.currentProgram.getUniforms();C.uniformsList=Ro.seqWithValue(Z.seq,C.uniforms)}return C.uniformsList}function Br(C,Z){const ce=_e.get(C);ce.outputColorSpace=Z.outputColorSpace,ce.batching=Z.batching,ce.batchingColor=Z.batchingColor,ce.instancing=Z.instancing,ce.instancingColor=Z.instancingColor,ce.instancingMorph=Z.instancingMorph,ce.skinning=Z.skinning,ce.morphTargets=Z.morphTargets,ce.morphNormals=Z.morphNormals,ce.morphColors=Z.morphColors,ce.morphTargetsCount=Z.morphTargetsCount,ce.numClippingPlanes=Z.numClippingPlanes,ce.numIntersection=Z.numClipIntersection,ce.vertexAlphas=Z.vertexAlphas,ce.vertexTangents=Z.vertexTangents,ce.toneMapping=Z.toneMapping}function Gr(C,Z,ce,le,z){Z.isScene!==!0&&(Z=we),Re.resetTextureUnits();const Pe=Z.fog,Ne=le.isMeshStandardMaterial?Z.environment:null,He=I===null?b.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:Dr,ze=(le.isMeshStandardMaterial?Ve:fe).get(le.envMap||Ne),Ze=le.vertexColors===!0&&!!ce.attributes.color&&ce.attributes.color.itemSize===4,$e=!!ce.attributes.tangent&&(!!le.normalMap||le.anisotropy>0),je=!!ce.morphAttributes.position,tt=!!ce.morphAttributes.normal,pt=!!ce.morphAttributes.color;let St=wi;le.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(St=b.toneMapping);const gt=ce.morphAttributes.position||ce.morphAttributes.normal||ce.morphAttributes.color,_t=gt!==void 0?gt.length:0,Ke=_e.get(le),mt=p.state.lights;if(ee===!0&&(W===!0||C!==y)){const It=C===y&&le.id===x;ue.setState(le,C,It)}let at=!1;le.version===Ke.__version?(Ke.needsLights&&Ke.lightsStateVersion!==mt.state.version||Ke.outputColorSpace!==He||z.isBatchedMesh&&Ke.batching===!1||!z.isBatchedMesh&&Ke.batching===!0||z.isBatchedMesh&&Ke.batchingColor===!0&&z.colorTexture===null||z.isBatchedMesh&&Ke.batchingColor===!1&&z.colorTexture!==null||z.isInstancedMesh&&Ke.instancing===!1||!z.isInstancedMesh&&Ke.instancing===!0||z.isSkinnedMesh&&Ke.skinning===!1||!z.isSkinnedMesh&&Ke.skinning===!0||z.isInstancedMesh&&Ke.instancingColor===!0&&z.instanceColor===null||z.isInstancedMesh&&Ke.instancingColor===!1&&z.instanceColor!==null||z.isInstancedMesh&&Ke.instancingMorph===!0&&z.morphTexture===null||z.isInstancedMesh&&Ke.instancingMorph===!1&&z.morphTexture!==null||Ke.envMap!==ze||le.fog===!0&&Ke.fog!==Pe||Ke.numClippingPlanes!==void 0&&(Ke.numClippingPlanes!==ue.numPlanes||Ke.numIntersection!==ue.numIntersection)||Ke.vertexAlphas!==Ze||Ke.vertexTangents!==$e||Ke.morphTargets!==je||Ke.morphNormals!==tt||Ke.morphColors!==pt||Ke.toneMapping!==St||Ke.morphTargetsCount!==_t)&&(at=!0):(at=!0,Ke.__version=le.version);let Lt=Ke.currentProgram;at===!0&&(Lt=Ut(le,Z,z));let zn=!1,Xt=!1,qn=!1;const dt=Lt.getUniforms(),an=Ke.uniforms;if(ve.useProgram(Lt.program)&&(zn=!0,Xt=!0,qn=!0),le.id!==x&&(x=le.id,Xt=!0),zn||y!==C){ve.buffers.depth.getReversed()&&C.reversedDepth!==!0&&(C._reversedDepth=!0,C.updateProjectionMatrix()),dt.setValue(L,"projectionMatrix",C.projectionMatrix),dt.setValue(L,"viewMatrix",C.matrixWorldInverse);const Yt=dt.map.cameraPosition;Yt!==void 0&&Yt.setValue(L,te.setFromMatrixPosition(C.matrixWorld)),Te.logarithmicDepthBuffer&&dt.setValue(L,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),(le.isMeshPhongMaterial||le.isMeshToonMaterial||le.isMeshLambertMaterial||le.isMeshBasicMaterial||le.isMeshStandardMaterial||le.isShaderMaterial)&&dt.setValue(L,"isOrthographic",C.isOrthographicCamera===!0),y!==C&&(y=C,Xt=!0,qn=!0)}if(z.isSkinnedMesh){dt.setOptional(L,z,"bindMatrix"),dt.setOptional(L,z,"bindMatrixInverse");const It=z.skeleton;It&&(It.boneTexture===null&&It.computeBoneTexture(),dt.setValue(L,"boneTexture",It.boneTexture,Re))}z.isBatchedMesh&&(dt.setOptional(L,z,"batchingTexture"),dt.setValue(L,"batchingTexture",z._matricesTexture,Re),dt.setOptional(L,z,"batchingIdTexture"),dt.setValue(L,"batchingIdTexture",z._indirectTexture,Re),dt.setOptional(L,z,"batchingColorTexture"),z._colorsTexture!==null&&dt.setValue(L,"batchingColorTexture",z._colorsTexture,Re));const qt=ce.morphAttributes;if((qt.position!==void 0||qt.normal!==void 0||qt.color!==void 0)&&de.update(z,ce,Lt),(Xt||Ke.receiveShadow!==z.receiveShadow)&&(Ke.receiveShadow=z.receiveShadow,dt.setValue(L,"receiveShadow",z.receiveShadow)),le.isMeshGouraudMaterial&&le.envMap!==null&&(an.envMap.value=ze,an.flipEnvMap.value=ze.isCubeTexture&&ze.isRenderTargetTexture===!1?-1:1),le.isMeshStandardMaterial&&le.envMap===null&&Z.environment!==null&&(an.envMapIntensity.value=Z.environmentIntensity),Xt&&(dt.setValue(L,"toneMappingExposure",b.toneMappingExposure),Ke.needsLights&&ea(an,qn),Pe&&le.fog===!0&&ne.refreshFogUniforms(an,Pe),ne.refreshMaterialUniforms(an,le,K,oe,p.state.transmissionRenderTarget[C.id]),Ro.upload(L,kn(Ke),an,Re)),le.isShaderMaterial&&le.uniformsNeedUpdate===!0&&(Ro.upload(L,kn(Ke),an,Re),le.uniformsNeedUpdate=!1),le.isSpriteMaterial&&dt.setValue(L,"center",z.center),dt.setValue(L,"modelViewMatrix",z.modelViewMatrix),dt.setValue(L,"normalMatrix",z.normalMatrix),dt.setValue(L,"modelMatrix",z.matrixWorld),le.isShaderMaterial||le.isRawShaderMaterial){const It=le.uniformsGroups;for(let Yt=0,ri=It.length;Yt<ri;Yt++){const yn=It[Yt];Xe.update(yn,Lt),Xe.bind(yn,Lt)}}return Lt}function ea(C,Z){C.ambientLightColor.needsUpdate=Z,C.lightProbe.needsUpdate=Z,C.directionalLights.needsUpdate=Z,C.directionalLightShadows.needsUpdate=Z,C.pointLights.needsUpdate=Z,C.pointLightShadows.needsUpdate=Z,C.spotLights.needsUpdate=Z,C.spotLightShadows.needsUpdate=Z,C.rectAreaLights.needsUpdate=Z,C.hemisphereLights.needsUpdate=Z}function Ds(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return A},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(C,Z,ce){const le=_e.get(C);le.__autoAllocateDepthBuffer=C.resolveDepthBuffer===!1,le.__autoAllocateDepthBuffer===!1&&(le.__useRenderToTexture=!1),_e.get(C.texture).__webglTexture=Z,_e.get(C.depthTexture).__webglTexture=le.__autoAllocateDepthBuffer?void 0:ce,le.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(C,Z){const ce=_e.get(C);ce.__webglFramebuffer=Z,ce.__useDefaultFramebuffer=Z===void 0};const Zi=L.createFramebuffer();this.setRenderTarget=function(C,Z=0,ce=0){I=C,T=Z,A=ce;let le=!0,z=null,Pe=!1,Ne=!1;if(C){const ze=_e.get(C);if(ze.__useDefaultFramebuffer!==void 0)ve.bindFramebuffer(L.FRAMEBUFFER,null),le=!1;else if(ze.__webglFramebuffer===void 0)Re.setupRenderTarget(C);else if(ze.__hasExternalTextures)Re.rebindTextures(C,_e.get(C.texture).__webglTexture,_e.get(C.depthTexture).__webglTexture);else if(C.depthBuffer){const je=C.depthTexture;if(ze.__boundDepthTexture!==je){if(je!==null&&_e.has(je)&&(C.width!==je.image.width||C.height!==je.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");Re.setupDepthRenderbuffer(C)}}const Ze=C.texture;(Ze.isData3DTexture||Ze.isDataArrayTexture||Ze.isCompressedArrayTexture)&&(Ne=!0);const $e=_e.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(Array.isArray($e[Z])?z=$e[Z][ce]:z=$e[Z],Pe=!0):C.samples>0&&Re.useMultisampledRTT(C)===!1?z=_e.get(C).__webglMultisampledFramebuffer:Array.isArray($e)?z=$e[ce]:z=$e,U.copy(C.viewport),D.copy(C.scissor),F=C.scissorTest}else U.copy(k).multiplyScalar(K).floor(),D.copy(Y).multiplyScalar(K).floor(),F=ie;if(ce!==0&&(z=Zi),ve.bindFramebuffer(L.FRAMEBUFFER,z)&&le&&ve.drawBuffers(C,z),ve.viewport(U),ve.scissor(D),ve.setScissorTest(F),Pe){const ze=_e.get(C.texture);L.framebufferTexture2D(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,L.TEXTURE_CUBE_MAP_POSITIVE_X+Z,ze.__webglTexture,ce)}else if(Ne){const ze=Z;for(let Ze=0;Ze<C.textures.length;Ze++){const $e=_e.get(C.textures[Ze]);L.framebufferTextureLayer(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0+Ze,$e.__webglTexture,ce,ze)}}else if(C!==null&&ce!==0){const ze=_e.get(C.texture);L.framebufferTexture2D(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,L.TEXTURE_2D,ze.__webglTexture,ce)}x=-1},this.readRenderTargetPixels=function(C,Z,ce,le,z,Pe,Ne,He=0){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ze=_e.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Ne!==void 0&&(ze=ze[Ne]),ze){ve.bindFramebuffer(L.FRAMEBUFFER,ze);try{const Ze=C.textures[He],$e=Ze.format,je=Ze.type;if(!Te.textureFormatReadable($e)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Te.textureTypeReadable(je)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Z>=0&&Z<=C.width-le&&ce>=0&&ce<=C.height-z&&(C.textures.length>1&&L.readBuffer(L.COLOR_ATTACHMENT0+He),L.readPixels(Z,ce,le,z,Le.convert($e),Le.convert(je),Pe))}finally{const Ze=I!==null?_e.get(I).__webglFramebuffer:null;ve.bindFramebuffer(L.FRAMEBUFFER,Ze)}}},this.readRenderTargetPixelsAsync=async function(C,Z,ce,le,z,Pe,Ne,He=0){if(!(C&&C.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let ze=_e.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Ne!==void 0&&(ze=ze[Ne]),ze)if(Z>=0&&Z<=C.width-le&&ce>=0&&ce<=C.height-z){ve.bindFramebuffer(L.FRAMEBUFFER,ze);const Ze=C.textures[He],$e=Ze.format,je=Ze.type;if(!Te.textureFormatReadable($e))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Te.textureTypeReadable(je))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const tt=L.createBuffer();L.bindBuffer(L.PIXEL_PACK_BUFFER,tt),L.bufferData(L.PIXEL_PACK_BUFFER,Pe.byteLength,L.STREAM_READ),C.textures.length>1&&L.readBuffer(L.COLOR_ATTACHMENT0+He),L.readPixels(Z,ce,le,z,Le.convert($e),Le.convert(je),0);const pt=I!==null?_e.get(I).__webglFramebuffer:null;ve.bindFramebuffer(L.FRAMEBUFFER,pt);const St=L.fenceSync(L.SYNC_GPU_COMMANDS_COMPLETE,0);return L.flush(),await yp(L,St,4),L.bindBuffer(L.PIXEL_PACK_BUFFER,tt),L.getBufferSubData(L.PIXEL_PACK_BUFFER,0,Pe),L.deleteBuffer(tt),L.deleteSync(St),Pe}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(C,Z=null,ce=0){const le=Math.pow(2,-ce),z=Math.floor(C.image.width*le),Pe=Math.floor(C.image.height*le),Ne=Z!==null?Z.x:0,He=Z!==null?Z.y:0;Re.setTexture2D(C,0),L.copyTexSubImage2D(L.TEXTURE_2D,ce,0,0,Ne,He,z,Pe),ve.unbindTexture()};const Hr=L.createFramebuffer(),ta=L.createFramebuffer();this.copyTextureToTexture=function(C,Z,ce=null,le=null,z=0,Pe=null){Pe===null&&(z!==0?(Ss("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Pe=z,z=0):Pe=0);let Ne,He,ze,Ze,$e,je,tt,pt,St;const gt=C.isCompressedTexture?C.mipmaps[Pe]:C.image;if(ce!==null)Ne=ce.max.x-ce.min.x,He=ce.max.y-ce.min.y,ze=ce.isBox3?ce.max.z-ce.min.z:1,Ze=ce.min.x,$e=ce.min.y,je=ce.isBox3?ce.min.z:0;else{const qt=Math.pow(2,-z);Ne=Math.floor(gt.width*qt),He=Math.floor(gt.height*qt),C.isDataArrayTexture?ze=gt.depth:C.isData3DTexture?ze=Math.floor(gt.depth*qt):ze=1,Ze=0,$e=0,je=0}le!==null?(tt=le.x,pt=le.y,St=le.z):(tt=0,pt=0,St=0);const _t=Le.convert(Z.format),Ke=Le.convert(Z.type);let mt;Z.isData3DTexture?(Re.setTexture3D(Z,0),mt=L.TEXTURE_3D):Z.isDataArrayTexture||Z.isCompressedArrayTexture?(Re.setTexture2DArray(Z,0),mt=L.TEXTURE_2D_ARRAY):(Re.setTexture2D(Z,0),mt=L.TEXTURE_2D),L.pixelStorei(L.UNPACK_FLIP_Y_WEBGL,Z.flipY),L.pixelStorei(L.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Z.premultiplyAlpha),L.pixelStorei(L.UNPACK_ALIGNMENT,Z.unpackAlignment);const at=L.getParameter(L.UNPACK_ROW_LENGTH),Lt=L.getParameter(L.UNPACK_IMAGE_HEIGHT),zn=L.getParameter(L.UNPACK_SKIP_PIXELS),Xt=L.getParameter(L.UNPACK_SKIP_ROWS),qn=L.getParameter(L.UNPACK_SKIP_IMAGES);L.pixelStorei(L.UNPACK_ROW_LENGTH,gt.width),L.pixelStorei(L.UNPACK_IMAGE_HEIGHT,gt.height),L.pixelStorei(L.UNPACK_SKIP_PIXELS,Ze),L.pixelStorei(L.UNPACK_SKIP_ROWS,$e),L.pixelStorei(L.UNPACK_SKIP_IMAGES,je);const dt=C.isDataArrayTexture||C.isData3DTexture,an=Z.isDataArrayTexture||Z.isData3DTexture;if(C.isDepthTexture){const qt=_e.get(C),It=_e.get(Z),Yt=_e.get(qt.__renderTarget),ri=_e.get(It.__renderTarget);ve.bindFramebuffer(L.READ_FRAMEBUFFER,Yt.__webglFramebuffer),ve.bindFramebuffer(L.DRAW_FRAMEBUFFER,ri.__webglFramebuffer);for(let yn=0;yn<ze;yn++)dt&&(L.framebufferTextureLayer(L.READ_FRAMEBUFFER,L.COLOR_ATTACHMENT0,_e.get(C).__webglTexture,z,je+yn),L.framebufferTextureLayer(L.DRAW_FRAMEBUFFER,L.COLOR_ATTACHMENT0,_e.get(Z).__webglTexture,Pe,St+yn)),L.blitFramebuffer(Ze,$e,Ne,He,tt,pt,Ne,He,L.DEPTH_BUFFER_BIT,L.NEAREST);ve.bindFramebuffer(L.READ_FRAMEBUFFER,null),ve.bindFramebuffer(L.DRAW_FRAMEBUFFER,null)}else if(z!==0||C.isRenderTargetTexture||_e.has(C)){const qt=_e.get(C),It=_e.get(Z);ve.bindFramebuffer(L.READ_FRAMEBUFFER,Hr),ve.bindFramebuffer(L.DRAW_FRAMEBUFFER,ta);for(let Yt=0;Yt<ze;Yt++)dt?L.framebufferTextureLayer(L.READ_FRAMEBUFFER,L.COLOR_ATTACHMENT0,qt.__webglTexture,z,je+Yt):L.framebufferTexture2D(L.READ_FRAMEBUFFER,L.COLOR_ATTACHMENT0,L.TEXTURE_2D,qt.__webglTexture,z),an?L.framebufferTextureLayer(L.DRAW_FRAMEBUFFER,L.COLOR_ATTACHMENT0,It.__webglTexture,Pe,St+Yt):L.framebufferTexture2D(L.DRAW_FRAMEBUFFER,L.COLOR_ATTACHMENT0,L.TEXTURE_2D,It.__webglTexture,Pe),z!==0?L.blitFramebuffer(Ze,$e,Ne,He,tt,pt,Ne,He,L.COLOR_BUFFER_BIT,L.NEAREST):an?L.copyTexSubImage3D(mt,Pe,tt,pt,St+Yt,Ze,$e,Ne,He):L.copyTexSubImage2D(mt,Pe,tt,pt,Ze,$e,Ne,He);ve.bindFramebuffer(L.READ_FRAMEBUFFER,null),ve.bindFramebuffer(L.DRAW_FRAMEBUFFER,null)}else an?C.isDataTexture||C.isData3DTexture?L.texSubImage3D(mt,Pe,tt,pt,St,Ne,He,ze,_t,Ke,gt.data):Z.isCompressedArrayTexture?L.compressedTexSubImage3D(mt,Pe,tt,pt,St,Ne,He,ze,_t,gt.data):L.texSubImage3D(mt,Pe,tt,pt,St,Ne,He,ze,_t,Ke,gt):C.isDataTexture?L.texSubImage2D(L.TEXTURE_2D,Pe,tt,pt,Ne,He,_t,Ke,gt.data):C.isCompressedTexture?L.compressedTexSubImage2D(L.TEXTURE_2D,Pe,tt,pt,gt.width,gt.height,_t,gt.data):L.texSubImage2D(L.TEXTURE_2D,Pe,tt,pt,Ne,He,_t,Ke,gt);L.pixelStorei(L.UNPACK_ROW_LENGTH,at),L.pixelStorei(L.UNPACK_IMAGE_HEIGHT,Lt),L.pixelStorei(L.UNPACK_SKIP_PIXELS,zn),L.pixelStorei(L.UNPACK_SKIP_ROWS,Xt),L.pixelStorei(L.UNPACK_SKIP_IMAGES,qn),Pe===0&&Z.generateMipmaps&&L.generateMipmap(mt),ve.unbindTexture()},this.initRenderTarget=function(C){_e.get(C).__webglFramebuffer===void 0&&Re.setupRenderTarget(C)},this.initTexture=function(C){C.isCubeTexture?Re.setTextureCube(C,0):C.isData3DTexture?Re.setTexture3D(C,0):C.isDataArrayTexture||C.isCompressedArrayTexture?Re.setTexture2DArray(C,0):Re.setTexture2D(C,0),ve.unbindTexture()},this.resetState=function(){T=0,A=0,I=null,ve.reset(),Ce.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Vn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=ut._getDrawingBufferColorSpace(e),t.unpackColorSpace=ut._getUnpackColorSpace()}}var ds=function(){var s=0,e=document.createElement("div");e.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",e.addEventListener("click",function(h){h.preventDefault(),n(++s%e.children.length)},!1);function t(h){return e.appendChild(h.dom),h}function n(h){for(var d=0;d<e.children.length;d++)e.children[d].style.display=d===h?"block":"none";s=h}var i=(performance||Date).now(),r=i,o=0,a=t(new ds.Panel("FPS","#0ff","#002")),c=t(new ds.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var l=t(new ds.Panel("MB","#f08","#201"));return n(0),{REVISION:16,dom:e,addPanel:t,showPanel:n,begin:function(){i=(performance||Date).now()},end:function(){o++;var h=(performance||Date).now();if(c.update(h-i,200),h>=r+1e3&&(a.update(o*1e3/(h-r),100),r=h,o=0,l)){var d=performance.memory;l.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return h},update:function(){i=this.end()},domElement:e,setMode:n}};ds.Panel=function(s,e,t){var n=1/0,i=0,r=Math.round,o=r(window.devicePixelRatio||1),a=80*o,c=48*o,l=3*o,h=2*o,d=3*o,u=15*o,f=74*o,g=30*o,v=document.createElement("canvas");v.width=a,v.height=c,v.style.cssText="width:80px;height:48px";var _=v.getContext("2d");return _.font="bold "+9*o+"px Helvetica,Arial,sans-serif",_.textBaseline="top",_.fillStyle=t,_.fillRect(0,0,a,c),_.fillStyle=e,_.fillText(s,l,h),_.fillRect(d,u,f,g),_.fillStyle=t,_.globalAlpha=.9,_.fillRect(d,u,f,g),{dom:v,update:function(p,M){n=Math.min(n,p),i=Math.max(i,p),_.fillStyle=t,_.globalAlpha=1,_.fillRect(0,0,a,u),_.fillStyle=e,_.fillText(r(p)+" "+s+" ("+r(n)+"-"+r(i)+")",l,h),_.drawImage(v,d+o,u,f-o,g,d,u,f-o,g),_.fillRect(d+f-o,u,o,g),_.fillStyle=t,_.globalAlpha=.9,_.fillRect(d+f-o,u,o,r((1-p/M)*g))}}};class Kv{scene;renderer;clock;stats;loadingManager;size;constructor(e){const t=tn();this.clock=new h_,this.stats=new ds,e.parentElement?.appendChild(this.stats.dom),gs(()=>t.debug.showStats,n=>{this.stats.dom.style.display=n?"block":"none"},{immediate:!0}),this.scene=new jp,this.scene.background=new rt(8900331),this.loadingManager=this.createLoadingManager(),this.stats.begin(),this.size={width:window.innerWidth,height:window.innerHeight},this.renderer=this.createRenderer(e)}render(e){this.stats.update(),this.renderer.render(this.scene,e)}resize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}cleanup(){this.renderer.dispose(),this.stats.end()}isInBounds(e,t,n){return e>=0&&e<this.size.width&&n>=0&&n<this.size.width&&t>=0&&t<this.size.height}createLoadingManager(){const e=new i_;return e.onStart=(t,n,i)=>{console.log(`📦 [LoadingManager] Started loading: ${n}/${i}`)},e.onProgress=(t,n,i)=>{console.log(`📦 [LoadingManager] Progress: ${n}/${i} - ${t}`)},e.onLoad=()=>{console.log("📦 [LoadingManager] All assets loaded")},e.onError=t=>{ws("scene:loading").$next("fail",{sceneName:"Engine",error:"Failed to load: "+t,url:t}),console.error("📦 [LoadingManager] Error loading:",t)},e}createRenderer(e){const t=new Yv({canvas:e,antialias:!0,alpha:!1});return t.setPixelRatio(Math.min(window.devicePixelRatio,2)),t.setSize(window.innerWidth,window.innerHeight),t.shadowMap.enabled=!0,t.shadowMap.type=$d,t}}class ku{config;_position=new Qe(0,0);_previousPosition=new Qe(0,0);_delta=new Qe(0,0);_normalizedPosition=new Qe(0,0);_buttons=new Set;_isDown=!1;_isInside=!1;_isDragging=!1;_scrollDelta=0;_totalDistance=0;_dragStartPosition=new Qe(0,0);_isPointerLocked=!1;_pointerLockDelta=new Qe(0,0);canvasWidth=0;canvasHeight=0;eventCallbacks=new Map;boundHandlers={mouseMove:e=>this.handleMouseMove(e),mouseDown:e=>this.handleMouseDown(e),mouseUp:e=>this.handleMouseUp(e),mouseEnter:()=>this.handleMouseEnter(),mouseLeave:()=>this.handleMouseLeave(),wheel:e=>this.handleWheel(e),contextMenu:e=>this.handleContextMenu(e),resize:()=>this.handleResize(),pointerLockChange:()=>this.handlePointerLockChange()};constructor(e={}){this.config={target:e.target??window,preventContextMenu:e.preventContextMenu??!0,trackScroll:e.trackScroll??!0,scrollSensitivity:e.scrollSensitivity??1,autoResetScroll:e.autoResetScroll??!0,supportPointerLock:e.supportPointerLock??!1,dragThreshold:e.dragThreshold??5},this.initialize()}initialize(){const e=this.config.target;e.addEventListener("mousemove",this.boundHandlers.mouseMove),e.addEventListener("mousedown",this.boundHandlers.mouseDown),e.addEventListener("mouseup",this.boundHandlers.mouseUp),e.addEventListener("mouseenter",this.boundHandlers.mouseEnter),e.addEventListener("mouseleave",this.boundHandlers.mouseLeave),this.config.trackScroll&&e.addEventListener("wheel",this.boundHandlers.wheel,{passive:!1}),this.config.preventContextMenu&&e.addEventListener("contextmenu",this.boundHandlers.contextMenu),window.addEventListener("resize",this.boundHandlers.resize),this.config.supportPointerLock&&document.addEventListener("pointerlockchange",this.boundHandlers.pointerLockChange),this.handleResize()}handleMouseMove(e){if(this._isPointerLocked){this._pointerLockDelta.set(e.movementX,e.movementY),this._delta.copy(this._pointerLockDelta),this.emit("move",{position:this._position.clone(),normalizedPosition:this._normalizedPosition.clone(),delta:this._delta.clone(),buttons:new Set(this._buttons)});return}const t=e.clientX,n=e.clientY;this._delta.set(t-this._position.x,n-this._position.y),this._isDown&&(this._totalDistance+=Math.abs(this._delta.x)+Math.abs(this._delta.y),!this._isDragging&&this._totalDistance>this.config.dragThreshold&&(this._isDragging=!0,this.emit("dragstart",{position:this._position.clone(),normalizedPosition:this._normalizedPosition.clone(),delta:this._delta.clone(),buttons:new Set(this._buttons),dragStartPosition:this._dragStartPosition.clone(),dragDistance:this._totalDistance})),this._isDragging&&this.emit("drag",{position:this._position.clone(),normalizedPosition:this._normalizedPosition.clone(),delta:this._delta.clone(),buttons:new Set(this._buttons),dragStartPosition:this._dragStartPosition.clone(),dragDistance:this._totalDistance})),this._previousPosition.copy(this._position),this._position.set(t,n),this._normalizedPosition.set(t/this.canvasWidth*2-1,-(n/this.canvasHeight)*2+1),this.emit("move",{position:this._position.clone(),normalizedPosition:this._normalizedPosition.clone(),delta:this._delta.clone(),buttons:new Set(this._buttons)})}handleMouseDown(e){this._isDown=!0,this._buttons.add(e.button),this._totalDistance=0,this._dragStartPosition.copy(this._position),this.emit("down",{position:this._position.clone(),normalizedPosition:this._normalizedPosition.clone(),delta:this._delta.clone(),button:e.button,buttons:new Set(this._buttons)})}handleMouseUp(e){const t=this._isDown,n=this._isDragging;if(this._buttons.delete(e.button),this._buttons.size===0&&(this._isDown=!1),this.emit("up",{position:this._position.clone(),normalizedPosition:this._normalizedPosition.clone(),delta:this._delta.clone(),button:e.button,buttons:new Set(this._buttons)}),n&&(this._isDragging=!1,this.emit("dragend",{position:this._position.clone(),normalizedPosition:this._normalizedPosition.clone(),delta:this._delta.clone(),buttons:new Set(this._buttons),dragStartPosition:this._dragStartPosition.clone(),dragDistance:this._totalDistance})),t&&!n&&this._totalDistance<=this.config.dragThreshold){const i={position:this._position.clone(),normalizedPosition:this._normalizedPosition.clone(),delta:this._delta.clone(),button:e.button,buttons:new Set(this._buttons)};this.emit("click",i),e.button===0||(e.button===2?this.emit("rightclick",i):e.button===1&&this.emit("middleclick",i))}this._totalDistance=0}handleMouseEnter(){this._isInside=!0,this.emit("enter",{position:this._position.clone(),normalizedPosition:this._normalizedPosition.clone(),delta:this._delta.clone(),buttons:new Set(this._buttons)})}handleMouseLeave(){this._isInside=!1,this._isDown=!1,this._buttons.clear(),this.emit("leave",{position:this._position.clone(),normalizedPosition:this._normalizedPosition.clone(),delta:this._delta.clone(),buttons:new Set(this._buttons)})}handleWheel(e){this.config.preventContextMenu&&e.preventDefault();const t=e.deltaY*this.config.scrollSensitivity;this._scrollDelta+=t,this.emit("scroll",{position:this._position.clone(),normalizedPosition:this._normalizedPosition.clone(),delta:this._delta.clone(),buttons:new Set(this._buttons),scrollDelta:this._scrollDelta,rawDelta:t})}handleContextMenu(e){e.preventDefault()}handleResize(){this.config.target instanceof HTMLElement?(this.canvasWidth=this.config.target.clientWidth,this.canvasHeight=this.config.target.clientHeight):(this.canvasWidth=window.innerWidth,this.canvasHeight=window.innerHeight)}handlePointerLockChange(){const e=this._isPointerLocked;this._isPointerLocked=document.pointerLockElement!==null,e!==this._isPointerLocked&&this.emit("pointerlockchange",{position:this._position.clone(),normalizedPosition:this._normalizedPosition.clone(),delta:this._delta.clone(),buttons:new Set(this._buttons)})}on(e,t){return this.eventCallbacks.has(e)||this.eventCallbacks.set(e,new Set),this.eventCallbacks.get(e).add(t),()=>this.off(e,t)}off(e,t){const n=this.eventCallbacks.get(e);n&&n.delete(t)}emit(e,t){const n=this.eventCallbacks.get(e);n&&n.forEach(i=>i(t))}requestPointerLock(){if(!this.config.supportPointerLock){console.warn("Pointer lock not enabled in config");return}this.config.target instanceof HTMLElement&&this.config.target.requestPointerLock()}exitPointerLock(){this._isPointerLocked&&document.exitPointerLock()}update(){this._delta.set(0,0),this._pointerLockDelta.set(0,0),this.config.autoResetScroll&&(this._scrollDelta=0)}resetScroll(){this._scrollDelta=0}resetDistance(){this._totalDistance=0}isButtonPressed(e){return this._buttons.has(e)}get isLeftButtonPressed(){return this.isButtonPressed(0)}get isRightButtonPressed(){return this.isButtonPressed(2)}get isMiddleButtonPressed(){return this.isButtonPressed(1)}hasMovedMoreThan(e){return this._totalDistance>e}getDistanceFromDragStart(){return this._position.distanceTo(this._dragStartPosition)}get position(){return this._position.clone()}get normalizedPosition(){return this._normalizedPosition.clone()}get delta(){return this._delta.clone()}get deltaRef(){return this._delta}get positionRef(){return this._position}get normalizedPositionRef(){return this._normalizedPosition}get scrollDelta(){return this._scrollDelta}get isDown(){return this._isDown}get isInside(){return this._isInside}get isDragging(){return this._isDragging}get isPointerLocked(){return this._isPointerLocked}get totalDistance(){return this._totalDistance}get dragStartPosition(){return this._dragStartPosition.clone()}get pressedButtons(){return Array.from(this._buttons)}destroy(){const e=this.config.target;e.removeEventListener("mousemove",this.boundHandlers.mouseMove),e.removeEventListener("mousedown",this.boundHandlers.mouseDown),e.removeEventListener("mouseup",this.boundHandlers.mouseUp),e.removeEventListener("mouseenter",this.boundHandlers.mouseEnter),e.removeEventListener("mouseleave",this.boundHandlers.mouseLeave),this.config.trackScroll&&e.removeEventListener("wheel",this.boundHandlers.wheel),this.config.preventContextMenu&&e.removeEventListener("contextmenu",this.boundHandlers.contextMenu),window.removeEventListener("resize",this.boundHandlers.resize),this.config.supportPointerLock&&document.removeEventListener("pointerlockchange",this.boundHandlers.pointerLockChange),this.exitPointerLock(),this.eventCallbacks.clear(),this._buttons.clear()}}function Jv(s,e){const t=tn(),n=ot(!1),i=new ku({target:document.body,preventContextMenu:!0,trackScroll:!0,scrollSensitivity:.005,autoResetScroll:!0,supportPointerLock:!0});return i.on("down",r=>{r.button===2&&(n.value=!0,t.debug.enableConsoleLog&&console.log("🔒 [CameraMouseInput] Requesting pointer lock..."),i.requestPointerLock())}),i.on("move",r=>{n.value&&s.update(r.delta.x,r.delta.y)}),i.on("up",r=>{r.button===2&&(n.value=!1,t.debug.enableConsoleLog&&console.log("🔓 [CameraMouseInput] Releasing pointer lock..."),i.exitPointerLock())}),i.on("scroll",r=>{e.update(r.rawDelta)}),i.on("pointerlockchange",()=>{!i.isPointerLocked&&n.value&&(n.value=!1,t.debug.enableConsoleLog&&console.log("🔓 [CameraMouseInput] Pointer lock released externally"))}),wf(()=>{i.destroy()}),{isDragging:n,mouse:i}}function Zv(s,e,t={h:.005,v:.005}){const n=tn(),i=n.camera.angleVMin,r=n.camera.angleVMax;function o(l){s.value-=l*t.h}function a(l){e.value=Math.max(i,Math.min(r,e.value+l*t.v))}function c(l,h){o(l),a(h)}return{updateHorizontal:o,updateVertical:a,update:c}}function $v(s,e){const t=tn(),n=ot(!1),i=ot(0),r=ot(0),o=ot(0);function a(h){if(h.touches.length===1)h.preventDefault(),h.stopPropagation(),n.value=!0,i.value=h.touches[0].clientX,r.value=h.touches[0].clientY;else if(h.touches.length===2){h.preventDefault(),h.stopPropagation();const d=h.touches[0].clientX-h.touches[1].clientX,u=h.touches[0].clientY-h.touches[1].clientY;o.value=Math.sqrt(d*d+u*u)}}function c(h){if(h.touches.length===1&&n.value){const d=h.touches[0].clientX-i.value,u=h.touches[0].clientY-r.value;s.update(d*t.camera.touchSensitivityMultiplier,u*t.camera.touchSensitivityMultiplier),i.value=h.touches[0].clientX,r.value=h.touches[0].clientY,h.preventDefault()}else if(h.touches.length===2){const d=h.touches[0].clientX-h.touches[1].clientX,u=h.touches[0].clientY-h.touches[1].clientY,f=Math.sqrt(d*d+u*u);if(o.value>0){const g=f-o.value;e.update(-g*.05)}o.value=f,h.preventDefault()}}function l(h){h.touches.length===0?(n.value=!1,o.value=0):h.touches.length===1&&(i.value=h.touches[0].clientX,r.value=h.touches[0].clientY,o.value=0)}return qi("touchstart",a,{passive:!1}),qi("touchmove",c,{passive:!1}),qi("touchend",l,{passive:!1}),{}}function Qv(s,e={min:5,max:20}){function t(n){s.value=Math.max(e.min,Math.min(e.max,s.value+n))}return{update:t}}function e0(){const s=tn(),e=vf({x:0,z:0,y:0}),t=ot(s.camera.initialDistance),n=ot(s.camera.initialAngleH),i=ot(s.camera.initialAngleV),r=Zv(n,i,{h:s.camera.mouseSensitivityH,v:s.camera.mouseSensitivityV}),o=Qv(t,{min:s.camera.zoomMin,max:s.camera.zoomMax}),a=Jv(r,o);$v(r,o),Yd(()=>{Math.sin(n.value)*t.value*Math.cos(i.value),Math.cos(n.value)*t.value*Math.cos(i.value),Math.sin(i.value)*t.value});function c(){t.value=s.camera.initialDistance,n.value=s.camera.initialAngleH,i.value=s.camera.initialAngleV}function l(){c(),a.isDragging.value=!1}function h(d){e.x=d.x,e.z=d.z}return{angle:{horizontal:n,vertical:i},distance:t,isDragging:a.isDragging,target:e,update:h,reset:c,destroy:l}}function t0(){tn();const s=e0(),e=new En(75,window.innerWidth/window.innerHeight,.1,1e3);function t(){e.aspect=window.innerWidth/window.innerHeight,e.updateProjectionMatrix()}function n(){e.lookAt(new q(0,1,0)),e.updateMatrixWorld(!0)}function i(a){s.target.x=a.x,s.target.z=a.z,e.lookAt(a)}function r(){s.reset()}function o(){s.destroy()}return Yd(()=>{const a=Math.sin(s.angle.horizontal.value)*s.distance.value*Math.cos(s.angle.vertical.value),c=Math.cos(s.angle.horizontal.value)*s.distance.value*Math.cos(s.angle.vertical.value),l=Math.sin(s.angle.vertical.value)*s.distance.value;e.position.set(s.target.x+a,l+1,s.target.z+c)}),qi("resize",t),{instance:e,controller:s,start:n,update:i,reset:r,destroy:o}}function n0(){const s=tn(),e=ot(!1),t=ot(0),{space:n}=Kd({passive:!1,onEventFired(o){(o.key===" "||o.code==="Space")&&(o.preventDefault(),o.stopPropagation())}});bf(n,()=>{e.value||(e.value=!0,t.value=s.character.jumpInitialVelocity)});function i(o,a){e.value&&(t.value-=s.character.jumpGravity*a,t.value<-s.character.jumpMaxFallSpeed&&(t.value=-s.character.jumpMaxFallSpeed),o.value+=t.value*a,o.value<=s.character.groundLevel&&(o.value=s.character.groundLevel,e.value=!1,t.value=0))}function r(){e.value=!1,t.value=0}return{isJumping:e,verticalVelocity:t,update:i,reset:r}}function i0(){const s=tn(),e=ot(0),t=ot(5),n=ot(0),i=ot(0),r=Wn(()=>s.character.moveSpeed),{w:o,a,s:c,d:l}=Kd({passive:!1,onEventFired(u){(u.key==="w"||u.key==="a"||u.key==="s"||u.key==="d"||u.key==="W"||u.key==="A"||u.key==="S"||u.key==="D")&&(u.preventDefault(),u.stopPropagation())}});function h(u,f,g,v){let _=0,p=0;if(o.value&&(p-=1),c.value&&(p+=1),a.value&&(_-=1),l.value&&(_+=1),(g!==0||v!==0)&&(_=g,p=v),_!==0||p!==0){const M=Math.sqrt(_*_+p*p);M>1&&(_/=M,p/=M);const E=_*Math.cos(f)+p*Math.sin(f),b=-_*Math.sin(f)+p*Math.cos(f);e.value+=E*r.value*u,n.value+=b*r.value*u,i.value=Math.atan2(E,b)}}function d(){e.value=0,t.value=0,n.value=0,i.value=0}return{position:{x:e,y:t,z:n},rotation:i,speed:r,update:h,reset:d}}function r0(){const s=tn(),e=ot(!1),t=ot(0),n=ot(0),i=ot(0),r=ot(0),o=ot(null),a=Wn(()=>{if(!e.value)return{x:0,z:0};const f=t.value-i.value,g=n.value-r.value,v=Math.sqrt(f*f+g*g);if(v<=s.character.joystickDeadZone)return{x:0,z:0};const _=Math.min(v,s.character.joystickMaxDistance),p=f/v*_,M=g/v*_;return{x:p/s.character.joystickMaxDistance,z:M/s.character.joystickMaxDistance}}),c=Wn(()=>a.value.x),l=Wn(()=>a.value.z);function h(f){const g=f.touches[0];g.clientX<window.innerWidth/2&&o.value===null&&(f.preventDefault(),f.stopPropagation(),o.value=g.identifier,e.value=!0,i.value=g.clientX,r.value=g.clientY,t.value=g.clientX,n.value=g.clientY)}function d(f){if(o.value!==null)for(let g=0;g<f.touches.length;g++){const v=f.touches[g];if(v.identifier===o.value){f.preventDefault(),f.stopPropagation(),t.value=v.clientX,n.value=v.clientY;break}}}function u(f){if(o.value===null)return;let g=!0;for(let v=0;v<f.touches.length;v++)if(f.touches[v].identifier===o.value){g=!1;break}g&&(f.preventDefault(),f.stopPropagation(),e.value=!1,t.value=0,n.value=0,o.value=null)}return qi("touchstart",h,{passive:!1}),qi("touchmove",d,{passive:!1}),qi("touchend",u,{passive:!1}),{active:e,x:t,y:n,startX:i,startY:r,inputX:c,inputZ:l}}function s0(s){tn();const{cameraAngleH:e}=s,t=r0(),n=n0(),i=i0();function r(h){i.update(h,e.value,t.inputX.value,t.inputZ.value),n.update(i.position.y,h)}function o(){return new q(i.position.x.value,i.position.y.value,i.position.z.value)}function a(h,d,u){i.position.x.value=h,i.position.y.value=d,i.position.z.value=u}function c(){i.reset(),n.reset()}function l(){c()}return{position:i.position,rotation:i.rotation,speed:i.speed,isJumping:n.isJumping,joystick:{active:t.active,x:t.x,y:t.y,startX:t.startX,startY:t.startY},getPosition:o,setPosition:a,update:r,reset:c,destroy:l}}function o0(s){const e=s0(s);function t(r){e.update(r)}function n(){e.reset()}function i(){e.destroy()}return{controller:e,update:t,reset:n,destroy:i}}class zu{watchers=[];objects=[];disposables=[];registerWatcher(e){return this.watchers.push(e),this}registerObject(...e){return this.objects.push(...e),this}registerDisposable(...e){return this.disposables.push(...e),this}cleanup(e){this.watchers.forEach(r=>r());let t=0,n=0,i=0;this.objects.forEach(r=>{try{e.remove(r),this.disposeObject3D(r),t++}catch(o){i++,console.warn("⚠️ [CleanupRegistry] Failed to dispose Object3D:",o)}}),this.disposables.forEach(r=>{try{r.dispose(),n++}catch(o){i++,console.warn("⚠️ [CleanupRegistry] Failed to dispose resource:",o)}}),this.watchers=[],this.objects=[],this.disposables=[],(t>0||n>0)&&console.log(`🧹 [CleanupRegistry] Cleaned up ${t} objects, ${n} disposables${i>0?`, ${i} errors`:""}`)}disposeObject3D(e){e.traverse(t=>{this.hasGeometryAndMaterial(t)&&(this.disposeGeometry(t),this.disposeMaterial(t))})}hasGeometryAndMaterial(e){return"geometry"in e&&"material"in e}disposeGeometry(e){const t=e.geometry;t&&"dispose"in t&&t.dispose()}disposeMaterial(e){const t=e.material;t&&(Array.isArray(t)?t.forEach(n=>this.disposeSingleMaterial(n)):this.disposeSingleMaterial(t))}disposeSingleMaterial(e){this.disposeTextures(e),"dispose"in e&&e.dispose()}disposeTextures(e){["map","normalMap","bumpMap","displacementMap","roughnessMap","metalnessMap","aoMap","emissiveMap","lightMap","envMap","alphaMap"].forEach(n=>{const i=e[n];i&&i.dispose&&typeof i.dispose=="function"&&i.dispose()})}getRegisteredCount(){return{objects:this.objects.length,disposables:this.disposables.length,watchers:this.watchers.length}}isEmpty(){return this.objects.length===0&&this.disposables.length===0&&this.watchers.length===0}}class a0{modules=new Map;moduleNames=new Map;updateableModules=new Set;initializedModules=new Set;initializedUpdateableModules=new Set;add(e,t){this.modules.set(e,t);const n=String(e);return this.moduleNames.set(t,n),"setName"in t&&typeof t.setName=="function"&&t.setName(n),this.isUpdateable(t)&&this.updateableModules.add(t),this}get(e){return this.modules.get(e)}getModuleName(e){return this.moduleNames.get(e)}forEach(e){this.modules.forEach(t=>e(t))}async forEachAsync(e){for(const t of this.modules.values())await e(t)}getUpdateable(){return this.updateableModules}getInitializedUpdateable(){return this.initializedUpdateableModules}markInitialized(e){this.initializedModules.add(e),this.updateableModules.has(e)&&this.initializedUpdateableModules.add(e)}count(){return this.modules.size}initializedCount(){return this.initializedModules.size}allInitialized(){return this.initializedModules.size===this.modules.size}clear(){this.modules.clear(),this.moduleNames.clear(),this.updateableModules.clear(),this.initializedModules.clear(),this.initializedUpdateableModules.clear()}isUpdateable(e){return typeof e.update=="function"}}class c0{raycaster;constructor(){this.raycaster=new d_}fromCamera(e,t,n){return this.raycaster.setFromCamera(e,t),this.raycaster.intersectObjects(n,!0)}fromDirection(e,t,n){return this.raycaster.set(e,t.clone().normalize()),this.raycaster.intersectObjects(n,!0)}getFirstHit(e){return e[0]||null}distanceTo(e,t){return e.distanceTo(t)}getRaycaster(){return this.raycaster}}class l0{behaviors={};built=!1;onBuild;constructor(e){this.onBuild=e}withHoverGlow(e=16747520,t=.3){return this.behaviors.hover||(this.behaviors.hover={}),this.behaviors.hover.glow={color:e,intensity:t},this.scheduleAutoBuild(),this}withTooltip(e,t){return this.behaviors.hover||(this.behaviors.hover={}),this.behaviors.hover.tooltip={title:e,description:t},this.scheduleAutoBuild(),this}withHoverCallbacks(e){return this.behaviors.hover||(this.behaviors.hover={}),this.behaviors.hover.customCallbacks=e,this.scheduleAutoBuild(),this}withClickVFX(e="POW!",t){return this.behaviors.click||(this.behaviors.click={}),this.behaviors.click.vfx={text:e,color:t},this.scheduleAutoBuild(),this}withCameraShake(e=.1,t=.3){return this.behaviors.click||(this.behaviors.click={}),this.behaviors.click.shake={intensity:e,duration:t},this.scheduleAutoBuild(),this}withParticles(e=20,t,n){return this.behaviors.click||(this.behaviors.click={}),this.behaviors.click.particles={count:e,color:t,speed:n},this.scheduleAutoBuild(),this}withClickCallbacks(e){return this.behaviors.click||(this.behaviors.click={}),this.behaviors.click.customCallbacks=e,this.scheduleAutoBuild(),this}withDrag(e){return this.behaviors.drag={enabled:!0,lockAxis:e?.lockAxis,snapToGrid:e?.snapToGrid,customCallbacks:{onStart:e?.onStart,onMove:e?.onMove,onEnd:e?.onEnd}},this.scheduleAutoBuild(),this}build(){return this.behaviors}scheduleAutoBuild(){!this.built&&this.onBuild&&(this.built=!0,Promise.resolve().then(()=>this.onBuild(this.behaviors)))}}class jo{context;async start(e){this.context=e,await this.init(e)}}class h0 extends jo{config;raycast=new c0;mouse;objects=new Map;objectArray=[];hoverState=null;dragState=null;pointerDirty=!1;gridHelper=null;interactionConfig={hoverHoldThreshold:500,enabled:!0};constructor(e){super(),e&&(this.interactionConfig={...this.interactionConfig,...e}),this.config=tn()}async init(e){this.context=e,this.mouse=new ku({target:e.engine.renderer.domElement,preventContextMenu:!0,trackScroll:!1,dragThreshold:5}),this.createGridHelper(),this.mouse.on("move",()=>{this.interactionConfig.enabled&&(this.pointerDirty=!0)}),this.mouse.on("dragstart",this.handleDragStart.bind(this)),this.mouse.on("drag",this.handleDrag.bind(this)),this.mouse.on("dragend",this.handleDragEnd.bind(this)),this.mouse.on("click",this.handleClick.bind(this)),this.mouse.on("leave",this.clearHover.bind(this))}update(e){if(!(!this.interactionConfig.enabled||!this.context.camera)&&(this.pointerDirty&&!this.dragState&&(this.updateHover(),this.pointerDirty=!1),this.hoverState&&!this.hoverState.holdFired)){const t=Date.now()-this.hoverState.startTime;t>=this.interactionConfig.hoverHoldThreshold&&(this.fireHoverHold(t),this.hoverState.holdFired=!0)}}async destroy(){this.mouse.destroy(),this.objects.clear(),this.objectArray=[],this.hoverState=null,this.dragState=null,console.log("🧹 [InteractionService] Destroyed")}updateHover(){if(!this.context.camera)return;const e=this.raycast.fromCamera(this.mouse.normalizedPositionRef,this.context.camera.instance,this.objectArray);if(e.length>0){const t=this.findObject(e[0].object);if(t&&t.behaviors.hover){(!this.hoverState||this.hoverState.objectId!==t.id)&&(this.clearHover(),this.startHover(t,e[0]));return}}this.clearHover()}startHover(e,t){this.hoverState={objectId:e.id,startTime:Date.now(),holdFired:!1};const n=e.behaviors.hover;n&&(n.glow&&this.context.services.vfx.applyEmissive(e.object3D,n.glow.color,this.resolve(n.glow.intensity)),n.customCallbacks?.onStart?.(t))}clearHover(){if(!this.hoverState)return;const e=this.objects.get(this.hoverState.objectId);if(!e)return;const t=e?.behaviors.hover;t?.glow&&this.context.services.vfx.restoreEmissive(e.object3D),this.context.services.vfx.hideTooltip(),t?.customCallbacks?.onEnd?.(),this.hoverState=null}fireHoverHold(e){if(!this.hoverState)return;const t=this.objects.get(this.hoverState.objectId);if(!t)return;const n=t?.behaviors.hover;n?.tooltip&&this.context.services.vfx.showTooltip(t.object3D.position,n.tooltip.title,n.tooltip.description),n?.customCallbacks?.onHold?.(e)}handleClick(){if(!this.hoverState)return;const e=this.objects.get(this.hoverState.objectId),t=e?.behaviors.click;if(!t)return;const n=this.raycast.fromCamera(this.mouse.normalizedPositionRef,this.context.camera.instance,[e.object3D]);if(n.length===0)return;const i=n[0];t.vfx&&this.context.services.vfx.showClickEffect(i.point,t.vfx.text,t.vfx.color),t.shake&&this.context.services.vfx.shakeCamera(this.resolve(t.shake.intensity),this.resolve(t.shake.duration)),t.particles&&this.context.services.vfx.spawnParticles(i.point,this.resolve(t.particles.count),t.particles.color,t.particles.speed?this.resolve(t.particles.speed):void 0),t.customCallbacks?.onClick?.(i)}handleDragStart(){if(!this.hoverState)return;const e=this.objects.get(this.hoverState.objectId);if(!e)return;const t=e?.behaviors.drag;t?.enabled&&this.config.editor.enabled&&(this.dragState={objectId:e.id,startPos:e.object3D.position.clone(),currentPos:e.object3D.position.clone(),dragPlane:this.createDragPlane(e.object3D.position.y)},this.applyDragStyle(e.object3D,!0),this.showGrid(),t.customCallbacks?.onStart?.(this.dragState.startPos.clone()),console.log("🎯 [InteractionService] Started dragging:",e.id))}handleDrag(){if(!this.dragState)return;const e=this.objects.get(this.dragState.objectId),t=e?.behaviors.drag;if(!e||!t)return;const n=this.raycastToPlane(this.dragState.dragPlane);if(!n)return;const i=n.clone(),r=t.lockAxis||["y"];r.includes("x")&&(i.x=this.dragState.startPos.x),r.includes("y")&&(i.y=this.dragState.startPos.y),r.includes("z")&&(i.z=this.dragState.startPos.z);const o=t.snapToGrid??this.config.editor.snapToGrid;o&&this.config.editor.enabled&&(i.x=Math.round(i.x/o)*o,i.z=Math.round(i.z/o)*o),e.object3D.position.copy(i),this.dragState.currentPos.copy(i),t.customCallbacks?.onMove?.(i.clone())}handleDragEnd(){if(!this.dragState)return;const e=this.objects.get(this.dragState.objectId),t=e?.behaviors.drag;if(!e||!t)return;const n=this.dragState.currentPos.clone();this.applyDragStyle(e.object3D,!1),this.hideGrid(),t.customCallbacks?.onEnd?.(n),console.log("✅ [InteractionService] Finished dragging at:",n),this.dragState=null}createDragPlane(e){return new _i(new q(0,1,0),-e)}raycastToPlane(e){const t=this.raycast.getRaycaster();t.setFromCamera(this.mouse.normalizedPositionRef,this.context.camera.instance);const n=new q;return t.ray.intersectPlane(e,n)?n:null}applyDragStyle(e,t){const n=t?this.config.editor.dragOpacity:1;e.traverse(i=>{if(i.material){const r=i.material;r.transparent=t,r.opacity=n,r.needsUpdate=!0}})}createGridHelper(){const t=100/this.config.editor.snapToGrid;this.gridHelper=new Iu(100,t,8947848,4473924),this.gridHelper.position.y=.01,this.gridHelper.visible=!1,this.context.scene.add(this.gridHelper),this.context.cleanupRegistry.registerObject(this.gridHelper)}showGrid(){this.gridHelper&&this.config.editor.showGrid&&(this.gridHelper.visible=!0)}hideGrid(){this.gridHelper&&(this.gridHelper.visible=!1)}findObject(e){for(const t of this.objects.values())if(t.object3D===e||this.isChildOf(e,t.object3D))return t;return null}isChildOf(e,t){let n=e;for(;n;){if(n===t)return!0;n=n.parent}return!1}resolve(e){return typeof e=="function"?e():e}register(e,t){return new l0(n=>{this._register(e,t,n)})}unregister(e){const t=this.objects.get(e);if(!t)return;this.hoverState?.objectId===e&&this.clearHover(),this.dragState?.objectId===e&&(this.dragState=null),this.objects.delete(e);const n=this.objectArray.indexOf(t.object3D);n!==-1&&this.objectArray.splice(n,1)}setEnabled(e){this.interactionConfig.enabled=e,e||(this.clearHover(),this.dragState=null)}_register(e,t,n){const i={id:e,object3D:t,behaviors:n};this.objects.set(e,i),this.objectArray.push(t)}}const d0="/client_rune_dictionary/assets/rapier_wasm3d_bg.BNGu8hfb.wasm",u0=async(s={},e)=>{let t;if(e.startsWith("data:")){const n=e.replace(/^data:.*?base64,/,"");let i;if(typeof Buffer=="function"&&typeof Buffer.from=="function")i=Buffer.from(n,"base64");else if(typeof atob=="function"){const r=atob(n);i=new Uint8Array(r.length);for(let o=0;o<r.length;o++)i[o]=r.charCodeAt(o)}else throw Error("Cannot decode base64-encoded data URL");t=await WebAssembly.instantiate(i,s)}else{const n=await fetch(e),i=n.headers.get("Content-Type")||"";if("instantiateStreaming"in WebAssembly&&i.startsWith("application/wasm"))t=await WebAssembly.instantiateStreaming(n,s);else{const r=await n.arrayBuffer();t=await WebAssembly.instantiate(r,s)}}return t.instance.exports};let m;function f0(s){m=s}const lt=new Array(128).fill(void 0);lt.push(void 0,null,!0,!1);function ct(s){return lt[s]}let us=lt.length;function yt(s){us===lt.length&&lt.push(lt.length+1);const e=us;return us=lt[e],lt[e]=s,e}function Xo(s,e){try{return s.apply(this,e)}catch(t){m.__wbindgen_export_0(yt(t))}}const p0=typeof TextDecoder>"u"?(0,module.require)("util").TextDecoder:TextDecoder;let Bu=new p0("utf-8",{ignoreBOM:!0,fatal:!0});Bu.decode();let mo=null;function _0(){return(mo===null||mo.byteLength===0)&&(mo=new Uint8Array(m.memory.buffer)),mo}function yl(s,e){return s=s>>>0,Bu.decode(_0().subarray(s,s+e))}function Je(s){return s==null}let vr=null;function Nt(){return(vr===null||vr.buffer.detached===!0||vr.buffer.detached===void 0&&vr.buffer!==m.memory.buffer)&&(vr=new DataView(m.memory.buffer)),vr}function m0(s){s<132||(lt[s]=us,us=s)}function Es(s){const e=ct(s);return m0(s),e}function dP(){let s,e;try{const i=m.__wbindgen_add_to_stack_pointer(-16);m.version(i);var t=Nt().getInt32(i+4*0,!0),n=Nt().getInt32(i+4*1,!0);return s=t,e=n,yl(t,n)}finally{m.__wbindgen_add_to_stack_pointer(16),m.__wbindgen_export_1(s,e,1)}}function uP(s){m.reserve_memory(s)}function O(s,e){if(!(s instanceof e))throw new Error(`expected instance of ${e.name}`)}let bt=128;function Et(s){if(bt==1)throw new Error("out of js stack");return lt[--bt]=s,bt}let go=null;function g0(){return(go===null||go.byteLength===0)&&(go=new Int32Array(m.memory.buffer)),go}function w0(s,e){return s=s>>>0,g0().subarray(s/4,s/4+e)}let wo=null;function Gu(){return(wo===null||wo.byteLength===0)&&(wo=new Float32Array(m.memory.buffer)),wo}function rd(s,e){return s=s>>>0,Gu().subarray(s/4,s/4+e)}let vo=null;function Hu(){return(vo===null||vo.byteLength===0)&&(vo=new Uint32Array(m.memory.buffer)),vo}function v0(s,e){return s=s>>>0,Hu().subarray(s/4,s/4+e)}let on=0;function os(s,e){const t=e(s.length*4,4)>>>0;return Hu().set(s,t/4),on=s.length,t}function fi(s,e){const t=e(s.length*4,4)>>>0;return Gu().set(s,t/4),on=s.length,t}const fP=Object.freeze({LinX:0,0:"LinX",LinY:1,1:"LinY",LinZ:2,2:"LinZ",AngX:3,3:"AngX",AngY:4,4:"AngY",AngZ:5,5:"AngZ"}),pP=Object.freeze({Revolute:0,0:"Revolute",Fixed:1,1:"Fixed",Prismatic:2,2:"Prismatic",Rope:3,3:"Rope",Spring:4,4:"Spring",Spherical:5,5:"Spherical",Generic:6,6:"Generic"}),Vt=Object.freeze({Ball:0,0:"Ball",Cuboid:1,1:"Cuboid",Capsule:2,2:"Capsule",Segment:3,3:"Segment",Polyline:4,4:"Polyline",Triangle:5,5:"Triangle",TriMesh:6,6:"TriMesh",HeightField:7,7:"HeightField",Compound:8,8:"Compound",ConvexPolyhedron:9,9:"ConvexPolyhedron",Cylinder:10,10:"Cylinder",Cone:11,11:"Cone",RoundCuboid:12,12:"RoundCuboid",RoundTriangle:13,13:"RoundTriangle",RoundCylinder:14,14:"RoundCylinder",RoundCone:15,15:"RoundCone",RoundConvexPolyhedron:16,16:"RoundConvexPolyhedron",HalfSpace:17,17:"HalfSpace",Voxels:18,18:"Voxels"}),Xa=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawbroadphase_free(s>>>0,1));class Si{static __wrap(e){e=e>>>0;const t=Object.create(Si.prototype);return t.__wbg_ptr=e,Xa.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Xa.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawbroadphase_free(e,0)}constructor(){const e=m.rawbroadphase_new();return this.__wbg_ptr=e>>>0,Xa.register(this,this.__wbg_ptr,this),this}castRay(e,t,n,i,r,o,a,c,l,h,d,u){try{O(e,kt),O(t,Tt),O(n,Pt),O(i,j),O(r,j);const f=m.rawbroadphase_castRay(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o,a,c,Je(l)?4294967297:l>>>0,!Je(h),Je(h)?0:h,!Je(d),Je(d)?0:d,Et(u));return f===0?void 0:Tl.__wrap(f)}finally{lt[bt++]=void 0}}castRayAndGetNormal(e,t,n,i,r,o,a,c,l,h,d,u){try{O(e,kt),O(t,Tt),O(n,Pt),O(i,j),O(r,j);const f=m.rawbroadphase_castRayAndGetNormal(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o,a,c,Je(l)?4294967297:l>>>0,!Je(h),Je(h)?0:h,!Je(d),Je(d)?0:d,Et(u));return f===0?void 0:Ko.__wrap(f)}finally{lt[bt++]=void 0}}intersectionsWithRay(e,t,n,i,r,o,a,c,l,h,d,u,f){try{O(e,kt),O(t,Tt),O(n,Pt),O(i,j),O(r,j),m.rawbroadphase_intersectionsWithRay(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o,a,Et(c),l,Je(h)?4294967297:h>>>0,!Je(d),Je(d)?0:d,!Je(u),Je(u)?0:u,Et(f))}finally{lt[bt++]=void 0,lt[bt++]=void 0}}intersectionWithShape(e,t,n,i,r,o,a,c,l,h,d){try{const g=m.__wbindgen_add_to_stack_pointer(-16);O(e,kt),O(t,Tt),O(n,Pt),O(i,j),O(r,st),O(o,Ye),m.rawbroadphase_intersectionWithShape(g,this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o.__wbg_ptr,a,Je(c)?4294967297:c>>>0,!Je(l),Je(l)?0:l,!Je(h),Je(h)?0:h,Et(d));var u=Nt().getInt32(g+4*0,!0),f=Nt().getFloat64(g+8*1,!0);return u===0?void 0:f}finally{m.__wbindgen_add_to_stack_pointer(16),lt[bt++]=void 0}}projectPoint(e,t,n,i,r,o,a,c,l,h){try{O(e,kt),O(t,Tt),O(n,Pt),O(i,j);const d=m.rawbroadphase_projectPoint(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r,o,Je(a)?4294967297:a>>>0,!Je(c),Je(c)?0:c,!Je(l),Je(l)?0:l,Et(h));return d===0?void 0:Oo.__wrap(d)}finally{lt[bt++]=void 0}}projectPointAndGetFeature(e,t,n,i,r,o,a,c,l){try{O(e,kt),O(t,Tt),O(n,Pt),O(i,j);const h=m.rawbroadphase_projectPointAndGetFeature(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r,Je(o)?4294967297:o>>>0,!Je(a),Je(a)?0:a,!Je(c),Je(c)?0:c,Et(l));return h===0?void 0:Oo.__wrap(h)}finally{lt[bt++]=void 0}}intersectionsWithPoint(e,t,n,i,r,o,a,c,l,h){try{O(e,kt),O(t,Tt),O(n,Pt),O(i,j),m.rawbroadphase_intersectionsWithPoint(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,Et(r),o,Je(a)?4294967297:a>>>0,!Je(c),Je(c)?0:c,!Je(l),Je(l)?0:l,Et(h))}finally{lt[bt++]=void 0,lt[bt++]=void 0}}castShape(e,t,n,i,r,o,a,c,l,h,d,u,f,g,v){try{O(e,kt),O(t,Tt),O(n,Pt),O(i,j),O(r,st),O(o,j),O(a,Ye);const _=m.rawbroadphase_castShape(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o.__wbg_ptr,a.__wbg_ptr,c,l,h,d,Je(u)?4294967297:u>>>0,!Je(f),Je(f)?0:f,!Je(g),Je(g)?0:g,Et(v));return _===0?void 0:qo.__wrap(_)}finally{lt[bt++]=void 0}}intersectionsWithShape(e,t,n,i,r,o,a,c,l,h,d,u){try{O(e,kt),O(t,Tt),O(n,Pt),O(i,j),O(r,st),O(o,Ye),m.rawbroadphase_intersectionsWithShape(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o.__wbg_ptr,Et(a),c,Je(l)?4294967297:l>>>0,!Je(h),Je(h)?0:h,!Je(d),Je(d)?0:d,Et(u))}finally{lt[bt++]=void 0,lt[bt++]=void 0}}collidersWithAabbIntersectingAabb(e,t,n,i,r,o){try{O(e,kt),O(t,Tt),O(n,Pt),O(i,j),O(r,j),m.rawbroadphase_collidersWithAabbIntersectingAabb(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,Et(o))}finally{lt[bt++]=void 0}}}const sd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawccdsolver_free(s>>>0,1));class od{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,sd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawccdsolver_free(e,0)}constructor(){const e=m.rawccdsolver_new();return this.__wbg_ptr=e>>>0,sd.register(this,this.__wbg_ptr,this),this}}const ad=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawcharactercollision_free(s>>>0,1));class b0{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,ad.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawcharactercollision_free(e,0)}constructor(){const e=m.rawcharactercollision_new();return this.__wbg_ptr=e>>>0,ad.register(this,this.__wbg_ptr,this),this}handle(){return m.rawcharactercollision_handle(this.__wbg_ptr)}translationDeltaApplied(){const e=m.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);return j.__wrap(e)}translationDeltaRemaining(){const e=m.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);return j.__wrap(e)}toi(){return m.rawcharactercollision_toi(this.__wbg_ptr)}worldWitness1(){const e=m.rawcharactercollision_worldWitness1(this.__wbg_ptr);return j.__wrap(e)}worldWitness2(){const e=m.rawcharactercollision_worldWitness2(this.__wbg_ptr);return j.__wrap(e)}worldNormal1(){const e=m.rawcharactercollision_worldNormal1(this.__wbg_ptr);return j.__wrap(e)}worldNormal2(){const e=m.rawcharactercollision_worldNormal2(this.__wbg_ptr);return j.__wrap(e)}}const qa=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawcolliderset_free(s>>>0,1));class Pt{static __wrap(e){e=e>>>0;const t=Object.create(Pt.prototype);return t.__wbg_ptr=e,qa.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,qa.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawcolliderset_free(e,0)}coTranslation(e){const t=m.rawcolliderset_coTranslation(this.__wbg_ptr,e);return j.__wrap(t)}coRotation(e){const t=m.rawcolliderset_coRotation(this.__wbg_ptr,e);return st.__wrap(t)}coTranslationWrtParent(e){const t=m.rawcolliderset_coTranslationWrtParent(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}coRotationWrtParent(e){const t=m.rawcolliderset_coRotationWrtParent(this.__wbg_ptr,e);return t===0?void 0:st.__wrap(t)}coSetTranslation(e,t,n,i){m.rawcolliderset_coSetTranslation(this.__wbg_ptr,e,t,n,i)}coSetTranslationWrtParent(e,t,n,i){m.rawcolliderset_coSetTranslationWrtParent(this.__wbg_ptr,e,t,n,i)}coSetRotation(e,t,n,i,r){m.rawcolliderset_coSetRotation(this.__wbg_ptr,e,t,n,i,r)}coSetRotationWrtParent(e,t,n,i,r){m.rawcolliderset_coSetRotationWrtParent(this.__wbg_ptr,e,t,n,i,r)}coIsSensor(e){return m.rawcolliderset_coIsSensor(this.__wbg_ptr,e)!==0}coShapeType(e){return m.rawcolliderset_coShapeType(this.__wbg_ptr,e)}coHalfspaceNormal(e){const t=m.rawcolliderset_coHalfspaceNormal(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}coHalfExtents(e){const t=m.rawcolliderset_coHalfExtents(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}coSetHalfExtents(e,t){O(t,j),m.rawcolliderset_coSetHalfExtents(this.__wbg_ptr,e,t.__wbg_ptr)}coRadius(e){const t=m.rawcolliderset_coRadius(this.__wbg_ptr,e);return t===4294967297?void 0:t}coSetRadius(e,t){m.rawcolliderset_coSetRadius(this.__wbg_ptr,e,t)}coHalfHeight(e){const t=m.rawcolliderset_coHalfHeight(this.__wbg_ptr,e);return t===4294967297?void 0:t}coSetHalfHeight(e,t){m.rawcolliderset_coSetHalfHeight(this.__wbg_ptr,e,t)}coRoundRadius(e){const t=m.rawcolliderset_coRoundRadius(this.__wbg_ptr,e);return t===4294967297?void 0:t}coSetRoundRadius(e,t){m.rawcolliderset_coSetRoundRadius(this.__wbg_ptr,e,t)}coVoxelData(e){try{const i=m.__wbindgen_add_to_stack_pointer(-16);m.rawcolliderset_coVoxelData(i,this.__wbg_ptr,e);var t=Nt().getInt32(i+4*0,!0),n=Nt().getInt32(i+4*1,!0);let r;return t!==0&&(r=w0(t,n).slice(),m.__wbindgen_export_1(t,n*4,4)),r}finally{m.__wbindgen_add_to_stack_pointer(16)}}coVoxelSize(e){const t=m.rawcolliderset_coVoxelSize(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}coSetVoxel(e,t,n,i,r){m.rawcolliderset_coSetVoxel(this.__wbg_ptr,e,t,n,i,r)}coPropagateVoxelChange(e,t,n,i,r,o,a,c){m.rawcolliderset_coPropagateVoxelChange(this.__wbg_ptr,e,t,n,i,r,o,a,c)}coCombineVoxelStates(e,t,n,i,r){m.rawcolliderset_coCombineVoxelStates(this.__wbg_ptr,e,t,n,i,r)}coVertices(e){try{const i=m.__wbindgen_add_to_stack_pointer(-16);m.rawcolliderset_coVertices(i,this.__wbg_ptr,e);var t=Nt().getInt32(i+4*0,!0),n=Nt().getInt32(i+4*1,!0);let r;return t!==0&&(r=rd(t,n).slice(),m.__wbindgen_export_1(t,n*4,4)),r}finally{m.__wbindgen_add_to_stack_pointer(16)}}coIndices(e){try{const i=m.__wbindgen_add_to_stack_pointer(-16);m.rawcolliderset_coIndices(i,this.__wbg_ptr,e);var t=Nt().getInt32(i+4*0,!0),n=Nt().getInt32(i+4*1,!0);let r;return t!==0&&(r=v0(t,n).slice(),m.__wbindgen_export_1(t,n*4,4)),r}finally{m.__wbindgen_add_to_stack_pointer(16)}}coTriMeshFlags(e){const t=m.rawcolliderset_coTriMeshFlags(this.__wbg_ptr,e);return t===4294967297?void 0:t}coHeightFieldFlags(e){const t=m.rawcolliderset_coHeightFieldFlags(this.__wbg_ptr,e);return t===4294967297?void 0:t}coHeightfieldHeights(e){try{const i=m.__wbindgen_add_to_stack_pointer(-16);m.rawcolliderset_coHeightfieldHeights(i,this.__wbg_ptr,e);var t=Nt().getInt32(i+4*0,!0),n=Nt().getInt32(i+4*1,!0);let r;return t!==0&&(r=rd(t,n).slice(),m.__wbindgen_export_1(t,n*4,4)),r}finally{m.__wbindgen_add_to_stack_pointer(16)}}coHeightfieldScale(e){const t=m.rawcolliderset_coHeightfieldScale(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}coHeightfieldNRows(e){const t=m.rawcolliderset_coHeightfieldNRows(this.__wbg_ptr,e);return t===4294967297?void 0:t}coHeightfieldNCols(e){const t=m.rawcolliderset_coHeightfieldNCols(this.__wbg_ptr,e);return t===4294967297?void 0:t}coParent(e){try{const i=m.__wbindgen_add_to_stack_pointer(-16);m.rawcolliderset_coParent(i,this.__wbg_ptr,e);var t=Nt().getInt32(i+4*0,!0),n=Nt().getFloat64(i+8*1,!0);return t===0?void 0:n}finally{m.__wbindgen_add_to_stack_pointer(16)}}coSetEnabled(e,t){m.rawcolliderset_coSetEnabled(this.__wbg_ptr,e,t)}coIsEnabled(e){return m.rawcolliderset_coIsEnabled(this.__wbg_ptr,e)!==0}coSetContactSkin(e,t){m.rawcolliderset_coSetContactSkin(this.__wbg_ptr,e,t)}coContactSkin(e){return m.rawcolliderset_coContactSkin(this.__wbg_ptr,e)}coFriction(e){return m.rawcolliderset_coFriction(this.__wbg_ptr,e)}coRestitution(e){return m.rawcolliderset_coRestitution(this.__wbg_ptr,e)}coDensity(e){return m.rawcolliderset_coDensity(this.__wbg_ptr,e)}coMass(e){return m.rawcolliderset_coMass(this.__wbg_ptr,e)}coVolume(e){return m.rawcolliderset_coVolume(this.__wbg_ptr,e)}coCollisionGroups(e){return m.rawcolliderset_coCollisionGroups(this.__wbg_ptr,e)>>>0}coSolverGroups(e){return m.rawcolliderset_coSolverGroups(this.__wbg_ptr,e)>>>0}coActiveHooks(e){return m.rawcolliderset_coActiveHooks(this.__wbg_ptr,e)>>>0}coActiveCollisionTypes(e){return m.rawcolliderset_coActiveCollisionTypes(this.__wbg_ptr,e)}coActiveEvents(e){return m.rawcolliderset_coActiveEvents(this.__wbg_ptr,e)>>>0}coContactForceEventThreshold(e){return m.rawcolliderset_coContactForceEventThreshold(this.__wbg_ptr,e)}coContainsPoint(e,t){return O(t,j),m.rawcolliderset_coContainsPoint(this.__wbg_ptr,e,t.__wbg_ptr)!==0}coCastShape(e,t,n,i,r,o,a,c,l){O(t,j),O(n,Ye),O(i,j),O(r,st),O(o,j);const h=m.rawcolliderset_coCastShape(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o.__wbg_ptr,a,c,l);return h===0?void 0:Zo.__wrap(h)}coCastCollider(e,t,n,i,r,o,a){O(t,j),O(i,j);const c=m.rawcolliderset_coCastCollider(this.__wbg_ptr,e,t.__wbg_ptr,n,i.__wbg_ptr,r,o,a);return c===0?void 0:qo.__wrap(c)}coIntersectsShape(e,t,n,i){return O(t,Ye),O(n,j),O(i,st),m.rawcolliderset_coIntersectsShape(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr)!==0}coContactShape(e,t,n,i,r){O(t,Ye),O(n,j),O(i,st);const o=m.rawcolliderset_coContactShape(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r);return o===0?void 0:Ts.__wrap(o)}coContactCollider(e,t,n){const i=m.rawcolliderset_coContactCollider(this.__wbg_ptr,e,t,n);return i===0?void 0:Ts.__wrap(i)}coProjectPoint(e,t,n){O(t,j);const i=m.rawcolliderset_coProjectPoint(this.__wbg_ptr,e,t.__wbg_ptr,n);return Yo.__wrap(i)}coIntersectsRay(e,t,n,i){return O(t,j),O(n,j),m.rawcolliderset_coIntersectsRay(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i)!==0}coCastRay(e,t,n,i,r){return O(t,j),O(n,j),m.rawcolliderset_coCastRay(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i,r)}coCastRayAndGetNormal(e,t,n,i,r){O(t,j),O(n,j);const o=m.rawcolliderset_coCastRayAndGetNormal(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i,r);return o===0?void 0:Jo.__wrap(o)}coSetSensor(e,t){m.rawcolliderset_coSetSensor(this.__wbg_ptr,e,t)}coSetRestitution(e,t){m.rawcolliderset_coSetRestitution(this.__wbg_ptr,e,t)}coSetFriction(e,t){m.rawcolliderset_coSetFriction(this.__wbg_ptr,e,t)}coFrictionCombineRule(e){return m.rawcolliderset_coFrictionCombineRule(this.__wbg_ptr,e)>>>0}coSetFrictionCombineRule(e,t){m.rawcolliderset_coSetFrictionCombineRule(this.__wbg_ptr,e,t)}coRestitutionCombineRule(e){return m.rawcolliderset_coRestitutionCombineRule(this.__wbg_ptr,e)>>>0}coSetRestitutionCombineRule(e,t){m.rawcolliderset_coSetRestitutionCombineRule(this.__wbg_ptr,e,t)}coSetCollisionGroups(e,t){m.rawcolliderset_coSetCollisionGroups(this.__wbg_ptr,e,t)}coSetSolverGroups(e,t){m.rawcolliderset_coSetSolverGroups(this.__wbg_ptr,e,t)}coSetActiveHooks(e,t){m.rawcolliderset_coSetActiveHooks(this.__wbg_ptr,e,t)}coSetActiveEvents(e,t){m.rawcolliderset_coSetActiveEvents(this.__wbg_ptr,e,t)}coSetActiveCollisionTypes(e,t){m.rawcolliderset_coSetActiveCollisionTypes(this.__wbg_ptr,e,t)}coSetShape(e,t){O(t,Ye),m.rawcolliderset_coSetShape(this.__wbg_ptr,e,t.__wbg_ptr)}coSetContactForceEventThreshold(e,t){m.rawcolliderset_coSetContactForceEventThreshold(this.__wbg_ptr,e,t)}coSetDensity(e,t){m.rawcolliderset_coSetDensity(this.__wbg_ptr,e,t)}coSetMass(e,t){m.rawcolliderset_coSetMass(this.__wbg_ptr,e,t)}coSetMassProperties(e,t,n,i,r){O(n,j),O(i,j),O(r,st),m.rawcolliderset_coSetMassProperties(this.__wbg_ptr,e,t,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr)}constructor(){const e=m.rawcolliderset_new();return this.__wbg_ptr=e>>>0,qa.register(this,this.__wbg_ptr,this),this}len(){return m.rawcolliderset_len(this.__wbg_ptr)>>>0}contains(e){return m.rawcolliderset_contains(this.__wbg_ptr,e)!==0}createCollider(e,t,n,i,r,o,a,c,l,h,d,u,f,g,v,_,p,M,E,b,R,T,A,I,x){try{const D=m.__wbindgen_add_to_stack_pointer(-16);O(t,Ye),O(n,j),O(i,st),O(a,j),O(c,j),O(l,st),O(x,Tt),m.rawcolliderset_createCollider(D,this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r,o,a.__wbg_ptr,c.__wbg_ptr,l.__wbg_ptr,h,d,u,f,g,v,_,p,M,E,b,R,T,A,I,x.__wbg_ptr);var y=Nt().getInt32(D+4*0,!0),U=Nt().getFloat64(D+8*1,!0);return y===0?void 0:U}finally{m.__wbindgen_add_to_stack_pointer(16)}}remove(e,t,n,i){O(t,Ei),O(n,Tt),m.rawcolliderset_remove(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i)}isHandleValid(e){return m.rawcolliderset_contains(this.__wbg_ptr,e)!==0}forEachColliderHandle(e){try{m.rawcolliderset_forEachColliderHandle(this.__wbg_ptr,Et(e))}finally{lt[bt++]=void 0}}}const cd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawcollidershapecasthit_free(s>>>0,1));class qo{static __wrap(e){e=e>>>0;const t=Object.create(qo.prototype);return t.__wbg_ptr=e,cd.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,cd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawcollidershapecasthit_free(e,0)}colliderHandle(){return m.rawcharactercollision_handle(this.__wbg_ptr)}time_of_impact(){return m.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}witness1(){const e=m.rawcollidershapecasthit_witness1(this.__wbg_ptr);return j.__wrap(e)}witness2(){const e=m.rawcollidershapecasthit_witness2(this.__wbg_ptr);return j.__wrap(e)}normal1(){const e=m.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);return j.__wrap(e)}normal2(){const e=m.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);return j.__wrap(e)}}const ld=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawcontactforceevent_free(s>>>0,1));class xl{static __wrap(e){e=e>>>0;const t=Object.create(xl.prototype);return t.__wbg_ptr=e,ld.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,ld.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawcontactforceevent_free(e,0)}collider1(){return m.rawcharactercollision_handle(this.__wbg_ptr)}collider2(){return m.rawcontactforceevent_collider2(this.__wbg_ptr)}total_force(){const e=m.rawcontactforceevent_total_force(this.__wbg_ptr);return j.__wrap(e)}total_force_magnitude(){return m.rawcontactforceevent_total_force_magnitude(this.__wbg_ptr)}max_force_direction(){const e=m.rawcontactforceevent_max_force_direction(this.__wbg_ptr);return j.__wrap(e)}max_force_magnitude(){return m.rawcontactforceevent_max_force_magnitude(this.__wbg_ptr)}}const hd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawcontactmanifold_free(s>>>0,1));class Sl{static __wrap(e){e=e>>>0;const t=Object.create(Sl.prototype);return t.__wbg_ptr=e,hd.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,hd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawcontactmanifold_free(e,0)}normal(){const e=m.rawcontactmanifold_normal(this.__wbg_ptr);return j.__wrap(e)}local_n1(){const e=m.rawcontactmanifold_local_n1(this.__wbg_ptr);return j.__wrap(e)}local_n2(){const e=m.rawcontactmanifold_local_n2(this.__wbg_ptr);return j.__wrap(e)}subshape1(){return m.rawcontactmanifold_subshape1(this.__wbg_ptr)>>>0}subshape2(){return m.rawcontactmanifold_subshape2(this.__wbg_ptr)>>>0}num_contacts(){return m.rawcontactmanifold_num_contacts(this.__wbg_ptr)>>>0}contact_local_p1(e){const t=m.rawcontactmanifold_contact_local_p1(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}contact_local_p2(e){const t=m.rawcontactmanifold_contact_local_p2(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}contact_dist(e){return m.rawcontactmanifold_contact_dist(this.__wbg_ptr,e)}contact_fid1(e){return m.rawcontactmanifold_contact_fid1(this.__wbg_ptr,e)>>>0}contact_fid2(e){return m.rawcontactmanifold_contact_fid2(this.__wbg_ptr,e)>>>0}contact_impulse(e){return m.rawcontactmanifold_contact_impulse(this.__wbg_ptr,e)}contact_tangent_impulse_x(e){return m.rawcontactmanifold_contact_tangent_impulse_x(this.__wbg_ptr,e)}contact_tangent_impulse_y(e){return m.rawcontactmanifold_contact_tangent_impulse_y(this.__wbg_ptr,e)}num_solver_contacts(){return m.rawcontactmanifold_num_solver_contacts(this.__wbg_ptr)>>>0}solver_contact_point(e){const t=m.rawcontactmanifold_solver_contact_point(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}solver_contact_dist(e){return m.rawcontactmanifold_solver_contact_dist(this.__wbg_ptr,e)}solver_contact_friction(e){return m.rawcontactmanifold_solver_contact_friction(this.__wbg_ptr,e)}solver_contact_restitution(e){return m.rawcontactmanifold_solver_contact_restitution(this.__wbg_ptr,e)}solver_contact_tangent_velocity(e){const t=m.rawcontactmanifold_solver_contact_tangent_velocity(this.__wbg_ptr,e);return j.__wrap(t)}}const dd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawcontactpair_free(s>>>0,1));class Ml{static __wrap(e){e=e>>>0;const t=Object.create(Ml.prototype);return t.__wbg_ptr=e,dd.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,dd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawcontactpair_free(e,0)}collider1(){return m.rawcontactpair_collider1(this.__wbg_ptr)}collider2(){return m.rawcontactpair_collider2(this.__wbg_ptr)}numContactManifolds(){return m.rawcontactpair_numContactManifolds(this.__wbg_ptr)>>>0}contactManifold(e){const t=m.rawcontactpair_contactManifold(this.__wbg_ptr,e);return t===0?void 0:Sl.__wrap(t)}}const ud=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawdebugrenderpipeline_free(s>>>0,1));class _P{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,ud.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawdebugrenderpipeline_free(e,0)}constructor(){const e=m.rawdebugrenderpipeline_new();return this.__wbg_ptr=e>>>0,ud.register(this,this.__wbg_ptr,this),this}vertices(){const e=m.rawdebugrenderpipeline_vertices(this.__wbg_ptr);return Es(e)}colors(){const e=m.rawdebugrenderpipeline_colors(this.__wbg_ptr);return Es(e)}render(e,t,n,i,r,o,a){try{O(e,Tt),O(t,Pt),O(n,Mi),O(i,Ti),O(r,kt),m.rawdebugrenderpipeline_render(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o,Et(a))}finally{lt[bt++]=void 0}}}const fd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawdeserializedworld_free(s>>>0,1));class El{static __wrap(e){e=e>>>0;const t=Object.create(El.prototype);return t.__wbg_ptr=e,fd.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,fd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawdeserializedworld_free(e,0)}takeGravity(){const e=m.rawdeserializedworld_takeGravity(this.__wbg_ptr);return e===0?void 0:j.__wrap(e)}takeIntegrationParameters(){const e=m.rawdeserializedworld_takeIntegrationParameters(this.__wbg_ptr);return e===0?void 0:Fr.__wrap(e)}takeIslandManager(){const e=m.rawdeserializedworld_takeIslandManager(this.__wbg_ptr);return e===0?void 0:Ei.__wrap(e)}takeBroadPhase(){const e=m.rawdeserializedworld_takeBroadPhase(this.__wbg_ptr);return e===0?void 0:Si.__wrap(e)}takeNarrowPhase(){const e=m.rawdeserializedworld_takeNarrowPhase(this.__wbg_ptr);return e===0?void 0:kt.__wrap(e)}takeBodies(){const e=m.rawdeserializedworld_takeBodies(this.__wbg_ptr);return e===0?void 0:Tt.__wrap(e)}takeColliders(){const e=m.rawdeserializedworld_takeColliders(this.__wbg_ptr);return e===0?void 0:Pt.__wrap(e)}takeImpulseJoints(){const e=m.rawdeserializedworld_takeImpulseJoints(this.__wbg_ptr);return e===0?void 0:Mi.__wrap(e)}takeMultibodyJoints(){const e=m.rawdeserializedworld_takeMultibodyJoints(this.__wbg_ptr);return e===0?void 0:Ti.__wrap(e)}}const pd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawdynamicraycastvehiclecontroller_free(s>>>0,1));class mP{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,pd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawdynamicraycastvehiclecontroller_free(e,0)}constructor(e){const t=m.rawdynamicraycastvehiclecontroller_new(e);return this.__wbg_ptr=t>>>0,pd.register(this,this.__wbg_ptr,this),this}current_vehicle_speed(){return m.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr)}chassis(){return m.rawdynamicraycastvehiclecontroller_chassis(this.__wbg_ptr)}index_up_axis(){return m.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr)>>>0}set_index_up_axis(e){m.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr,e)}index_forward_axis(){return m.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr)>>>0}set_index_forward_axis(e){m.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr,e)}add_wheel(e,t,n,i,r){O(e,j),O(t,j),O(n,j),m.rawdynamicraycastvehiclecontroller_add_wheel(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i,r)}num_wheels(){return m.rawdynamicraycastvehiclecontroller_num_wheels(this.__wbg_ptr)>>>0}update_vehicle(e,t,n,i,r,o,a,c){try{O(t,Si),O(n,kt),O(i,Tt),O(r,Pt),m.rawdynamicraycastvehiclecontroller_update_vehicle(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o,Je(a)?4294967297:a>>>0,Et(c))}finally{lt[bt++]=void 0}}wheel_chassis_connection_point_cs(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}set_wheel_chassis_connection_point_cs(e,t){O(t,j),m.rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs(this.__wbg_ptr,e,t.__wbg_ptr)}wheel_suspension_rest_length(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_suspension_rest_length(e,t){m.rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length(this.__wbg_ptr,e,t)}wheel_max_suspension_travel(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_max_suspension_travel(e,t){m.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel(this.__wbg_ptr,e,t)}wheel_radius(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_radius(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_radius(e,t){m.rawdynamicraycastvehiclecontroller_set_wheel_radius(this.__wbg_ptr,e,t)}wheel_suspension_stiffness(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_suspension_stiffness(e,t){m.rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness(this.__wbg_ptr,e,t)}wheel_suspension_compression(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_suspension_compression(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_suspension_compression(e,t){m.rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression(this.__wbg_ptr,e,t)}wheel_suspension_relaxation(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_suspension_relaxation(e,t){m.rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation(this.__wbg_ptr,e,t)}wheel_max_suspension_force(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_max_suspension_force(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_max_suspension_force(e,t){m.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force(this.__wbg_ptr,e,t)}wheel_brake(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_brake(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_brake(e,t){m.rawdynamicraycastvehiclecontroller_set_wheel_brake(this.__wbg_ptr,e,t)}wheel_steering(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_steering(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_steering(e,t){m.rawdynamicraycastvehiclecontroller_set_wheel_steering(this.__wbg_ptr,e,t)}wheel_engine_force(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_engine_force(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_engine_force(e,t){m.rawdynamicraycastvehiclecontroller_set_wheel_engine_force(this.__wbg_ptr,e,t)}wheel_direction_cs(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_direction_cs(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}set_wheel_direction_cs(e,t){O(t,j),m.rawdynamicraycastvehiclecontroller_set_wheel_direction_cs(this.__wbg_ptr,e,t.__wbg_ptr)}wheel_axle_cs(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_axle_cs(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}set_wheel_axle_cs(e,t){O(t,j),m.rawdynamicraycastvehiclecontroller_set_wheel_axle_cs(this.__wbg_ptr,e,t.__wbg_ptr)}wheel_friction_slip(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_friction_slip(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_friction_slip(e,t){m.rawdynamicraycastvehiclecontroller_set_wheel_friction_slip(this.__wbg_ptr,e,t)}wheel_side_friction_stiffness(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness(this.__wbg_ptr,e);return t===4294967297?void 0:t}set_wheel_side_friction_stiffness(e,t){m.rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness(this.__wbg_ptr,e,t)}wheel_rotation(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_rotation(this.__wbg_ptr,e);return t===4294967297?void 0:t}wheel_forward_impulse(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_forward_impulse(this.__wbg_ptr,e);return t===4294967297?void 0:t}wheel_side_impulse(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_side_impulse(this.__wbg_ptr,e);return t===4294967297?void 0:t}wheel_suspension_force(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_suspension_force(this.__wbg_ptr,e);return t===4294967297?void 0:t}wheel_contact_normal_ws(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}wheel_contact_point_ws(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_contact_point_ws(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}wheel_suspension_length(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_suspension_length(this.__wbg_ptr,e);return t===4294967297?void 0:t}wheel_hard_point_ws(e){const t=m.rawdynamicraycastvehiclecontroller_wheel_hard_point_ws(this.__wbg_ptr,e);return t===0?void 0:j.__wrap(t)}wheel_is_in_contact(e){return m.rawdynamicraycastvehiclecontroller_wheel_is_in_contact(this.__wbg_ptr,e)!==0}wheel_ground_object(e){try{const i=m.__wbindgen_add_to_stack_pointer(-16);m.rawdynamicraycastvehiclecontroller_wheel_ground_object(i,this.__wbg_ptr,e);var t=Nt().getInt32(i+4*0,!0),n=Nt().getFloat64(i+8*1,!0);return t===0?void 0:n}finally{m.__wbindgen_add_to_stack_pointer(16)}}}const _d=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_raweventqueue_free(s>>>0,1));class y0{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,_d.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_raweventqueue_free(e,0)}constructor(e){const t=m.raweventqueue_new(e);return this.__wbg_ptr=t>>>0,_d.register(this,this.__wbg_ptr,this),this}drainCollisionEvents(e){try{m.raweventqueue_drainCollisionEvents(this.__wbg_ptr,Et(e))}finally{lt[bt++]=void 0}}drainContactForceEvents(e){try{m.raweventqueue_drainContactForceEvents(this.__wbg_ptr,Et(e))}finally{lt[bt++]=void 0}}clear(){m.raweventqueue_clear(this.__wbg_ptr)}}const md=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawgenericjoint_free(s>>>0,1));class Ln{static __wrap(e){e=e>>>0;const t=Object.create(Ln.prototype);return t.__wbg_ptr=e,md.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,md.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawgenericjoint_free(e,0)}static generic(e,t,n,i){O(e,j),O(t,j),O(n,j);const r=m.rawgenericjoint_generic(e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i);return r===0?void 0:Ln.__wrap(r)}static spring(e,t,n,i,r){O(i,j),O(r,j);const o=m.rawgenericjoint_spring(e,t,n,i.__wbg_ptr,r.__wbg_ptr);return Ln.__wrap(o)}static rope(e,t,n){O(t,j),O(n,j);const i=m.rawgenericjoint_rope(e,t.__wbg_ptr,n.__wbg_ptr);return Ln.__wrap(i)}static spherical(e,t){O(e,j),O(t,j);const n=m.rawgenericjoint_spherical(e.__wbg_ptr,t.__wbg_ptr);return Ln.__wrap(n)}static prismatic(e,t,n,i,r,o){O(e,j),O(t,j),O(n,j);const a=m.rawgenericjoint_prismatic(e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i,r,o);return a===0?void 0:Ln.__wrap(a)}static fixed(e,t,n,i){O(e,j),O(t,st),O(n,j),O(i,st);const r=m.rawgenericjoint_fixed(e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr);return Ln.__wrap(r)}static revolute(e,t,n){O(e,j),O(t,j),O(n,j);const i=m.rawgenericjoint_revolute(e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr);return i===0?void 0:Ln.__wrap(i)}}const Ya=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawimpulsejointset_free(s>>>0,1));class Mi{static __wrap(e){e=e>>>0;const t=Object.create(Mi.prototype);return t.__wbg_ptr=e,Ya.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Ya.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawimpulsejointset_free(e,0)}jointType(e){return m.rawimpulsejointset_jointType(this.__wbg_ptr,e)}jointBodyHandle1(e){return m.rawimpulsejointset_jointBodyHandle1(this.__wbg_ptr,e)}jointBodyHandle2(e){return m.rawimpulsejointset_jointBodyHandle2(this.__wbg_ptr,e)}jointFrameX1(e){const t=m.rawimpulsejointset_jointFrameX1(this.__wbg_ptr,e);return st.__wrap(t)}jointFrameX2(e){const t=m.rawimpulsejointset_jointFrameX2(this.__wbg_ptr,e);return st.__wrap(t)}jointAnchor1(e){const t=m.rawimpulsejointset_jointAnchor1(this.__wbg_ptr,e);return j.__wrap(t)}jointAnchor2(e){const t=m.rawimpulsejointset_jointAnchor2(this.__wbg_ptr,e);return j.__wrap(t)}jointSetAnchor1(e,t){O(t,j),m.rawimpulsejointset_jointSetAnchor1(this.__wbg_ptr,e,t.__wbg_ptr)}jointSetAnchor2(e,t){O(t,j),m.rawimpulsejointset_jointSetAnchor2(this.__wbg_ptr,e,t.__wbg_ptr)}jointContactsEnabled(e){return m.rawimpulsejointset_jointContactsEnabled(this.__wbg_ptr,e)!==0}jointSetContactsEnabled(e,t){m.rawimpulsejointset_jointSetContactsEnabled(this.__wbg_ptr,e,t)}jointLimitsEnabled(e,t){return m.rawimpulsejointset_jointLimitsEnabled(this.__wbg_ptr,e,t)!==0}jointLimitsMin(e,t){return m.rawimpulsejointset_jointLimitsMin(this.__wbg_ptr,e,t)}jointLimitsMax(e,t){return m.rawimpulsejointset_jointLimitsMax(this.__wbg_ptr,e,t)}jointSetLimits(e,t,n,i){m.rawimpulsejointset_jointSetLimits(this.__wbg_ptr,e,t,n,i)}jointConfigureMotorModel(e,t,n){m.rawimpulsejointset_jointConfigureMotorModel(this.__wbg_ptr,e,t,n)}jointConfigureMotorVelocity(e,t,n,i){m.rawimpulsejointset_jointConfigureMotorVelocity(this.__wbg_ptr,e,t,n,i)}jointConfigureMotorPosition(e,t,n,i,r){m.rawimpulsejointset_jointConfigureMotorPosition(this.__wbg_ptr,e,t,n,i,r)}jointConfigureMotor(e,t,n,i,r,o){m.rawimpulsejointset_jointConfigureMotor(this.__wbg_ptr,e,t,n,i,r,o)}constructor(){const e=m.rawimpulsejointset_new();return this.__wbg_ptr=e>>>0,Ya.register(this,this.__wbg_ptr,this),this}createJoint(e,t,n,i){return O(e,Ln),m.rawimpulsejointset_createJoint(this.__wbg_ptr,e.__wbg_ptr,t,n,i)}remove(e,t){m.rawimpulsejointset_remove(this.__wbg_ptr,e,t)}len(){return m.rawimpulsejointset_len(this.__wbg_ptr)>>>0}contains(e){return m.rawimpulsejointset_contains(this.__wbg_ptr,e)!==0}forEachJointHandle(e){try{m.rawimpulsejointset_forEachJointHandle(this.__wbg_ptr,Et(e))}finally{lt[bt++]=void 0}}forEachJointAttachedToRigidBody(e,t){try{m.rawimpulsejointset_forEachJointAttachedToRigidBody(this.__wbg_ptr,e,Et(t))}finally{lt[bt++]=void 0}}}const Ka=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawintegrationparameters_free(s>>>0,1));class Fr{static __wrap(e){e=e>>>0;const t=Object.create(Fr.prototype);return t.__wbg_ptr=e,Ka.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Ka.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawintegrationparameters_free(e,0)}constructor(){const e=m.rawintegrationparameters_new();return this.__wbg_ptr=e>>>0,Ka.register(this,this.__wbg_ptr,this),this}get dt(){return m.rawintegrationparameters_dt(this.__wbg_ptr)}get contact_erp(){return m.rawintegrationparameters_contact_erp(this.__wbg_ptr)}get normalizedAllowedLinearError(){return m.rawintegrationparameters_normalizedAllowedLinearError(this.__wbg_ptr)}get normalizedPredictionDistance(){return m.rawintegrationparameters_normalizedPredictionDistance(this.__wbg_ptr)}get numSolverIterations(){return m.rawintegrationparameters_numSolverIterations(this.__wbg_ptr)>>>0}get numInternalPgsIterations(){return m.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr)>>>0}get minIslandSize(){return m.rawintegrationparameters_minIslandSize(this.__wbg_ptr)>>>0}get maxCcdSubsteps(){return m.rawintegrationparameters_maxCcdSubsteps(this.__wbg_ptr)>>>0}get lengthUnit(){return m.rawcontactforceevent_total_force_magnitude(this.__wbg_ptr)}set dt(e){m.rawintegrationparameters_set_dt(this.__wbg_ptr,e)}set contact_natural_frequency(e){m.rawintegrationparameters_set_contact_natural_frequency(this.__wbg_ptr,e)}set normalizedAllowedLinearError(e){m.rawintegrationparameters_set_normalizedAllowedLinearError(this.__wbg_ptr,e)}set normalizedPredictionDistance(e){m.rawintegrationparameters_set_normalizedPredictionDistance(this.__wbg_ptr,e)}set numSolverIterations(e){m.rawintegrationparameters_set_numSolverIterations(this.__wbg_ptr,e)}set numInternalPgsIterations(e){m.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr,e)}set minIslandSize(e){m.rawintegrationparameters_set_minIslandSize(this.__wbg_ptr,e)}set maxCcdSubsteps(e){m.rawintegrationparameters_set_maxCcdSubsteps(this.__wbg_ptr,e)}set lengthUnit(e){m.rawintegrationparameters_set_lengthUnit(this.__wbg_ptr,e)}}const Ja=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawislandmanager_free(s>>>0,1));class Ei{static __wrap(e){e=e>>>0;const t=Object.create(Ei.prototype);return t.__wbg_ptr=e,Ja.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Ja.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawislandmanager_free(e,0)}constructor(){const e=m.rawislandmanager_new();return this.__wbg_ptr=e>>>0,Ja.register(this,this.__wbg_ptr,this),this}forEachActiveRigidBodyHandle(e){try{m.rawislandmanager_forEachActiveRigidBodyHandle(this.__wbg_ptr,Et(e))}finally{lt[bt++]=void 0}}}const gd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawkinematiccharactercontroller_free(s>>>0,1));class gP{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,gd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawkinematiccharactercontroller_free(e,0)}constructor(e){const t=m.rawkinematiccharactercontroller_new(e);return this.__wbg_ptr=t>>>0,gd.register(this,this.__wbg_ptr,this),this}up(){const e=m.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);return j.__wrap(e)}setUp(e){O(e,j),m.rawkinematiccharactercontroller_setUp(this.__wbg_ptr,e.__wbg_ptr)}normalNudgeFactor(){return m.rawkinematiccharactercontroller_normalNudgeFactor(this.__wbg_ptr)}setNormalNudgeFactor(e){m.rawkinematiccharactercontroller_setNormalNudgeFactor(this.__wbg_ptr,e)}offset(){return m.rawkinematiccharactercontroller_offset(this.__wbg_ptr)}setOffset(e){m.rawkinematiccharactercontroller_setOffset(this.__wbg_ptr,e)}slideEnabled(){return m.rawkinematiccharactercontroller_slideEnabled(this.__wbg_ptr)!==0}setSlideEnabled(e){m.rawkinematiccharactercontroller_setSlideEnabled(this.__wbg_ptr,e)}autostepMaxHeight(){const e=m.rawkinematiccharactercontroller_autostepMaxHeight(this.__wbg_ptr);return e===4294967297?void 0:e}autostepMinWidth(){const e=m.rawkinematiccharactercontroller_autostepMinWidth(this.__wbg_ptr);return e===4294967297?void 0:e}autostepIncludesDynamicBodies(){const e=m.rawkinematiccharactercontroller_autostepIncludesDynamicBodies(this.__wbg_ptr);return e===16777215?void 0:e!==0}autostepEnabled(){return m.rawkinematiccharactercontroller_autostepEnabled(this.__wbg_ptr)!==0}enableAutostep(e,t,n){m.rawkinematiccharactercontroller_enableAutostep(this.__wbg_ptr,e,t,n)}disableAutostep(){m.rawkinematiccharactercontroller_disableAutostep(this.__wbg_ptr)}maxSlopeClimbAngle(){return m.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr)}setMaxSlopeClimbAngle(e){m.rawkinematiccharactercontroller_setMaxSlopeClimbAngle(this.__wbg_ptr,e)}minSlopeSlideAngle(){return m.rawkinematiccharactercontroller_minSlopeSlideAngle(this.__wbg_ptr)}setMinSlopeSlideAngle(e){m.rawkinematiccharactercontroller_setMinSlopeSlideAngle(this.__wbg_ptr,e)}snapToGroundDistance(){const e=m.rawkinematiccharactercontroller_snapToGroundDistance(this.__wbg_ptr);return e===4294967297?void 0:e}enableSnapToGround(e){m.rawkinematiccharactercontroller_enableSnapToGround(this.__wbg_ptr,e)}disableSnapToGround(){m.rawkinematiccharactercontroller_disableSnapToGround(this.__wbg_ptr)}snapToGroundEnabled(){return m.rawkinematiccharactercontroller_snapToGroundEnabled(this.__wbg_ptr)!==0}computeColliderMovement(e,t,n,i,r,o,a,c,l,h,d,u){try{O(t,Si),O(n,kt),O(i,Tt),O(r,Pt),O(a,j),m.rawkinematiccharactercontroller_computeColliderMovement(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o,a.__wbg_ptr,c,Je(l)?4294967297:Math.fround(l),h,Je(d)?4294967297:d>>>0,Et(u))}finally{lt[bt++]=void 0}}computedMovement(){const e=m.rawkinematiccharactercontroller_computedMovement(this.__wbg_ptr);return j.__wrap(e)}computedGrounded(){return m.rawkinematiccharactercontroller_computedGrounded(this.__wbg_ptr)!==0}numComputedCollisions(){return m.rawkinematiccharactercontroller_numComputedCollisions(this.__wbg_ptr)>>>0}computedCollision(e,t){return O(t,b0),m.rawkinematiccharactercontroller_computedCollision(this.__wbg_ptr,e,t.__wbg_ptr)!==0}}const Za=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawmultibodyjointset_free(s>>>0,1));class Ti{static __wrap(e){e=e>>>0;const t=Object.create(Ti.prototype);return t.__wbg_ptr=e,Za.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Za.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawmultibodyjointset_free(e,0)}jointType(e){return m.rawmultibodyjointset_jointType(this.__wbg_ptr,e)}jointFrameX1(e){const t=m.rawmultibodyjointset_jointFrameX1(this.__wbg_ptr,e);return st.__wrap(t)}jointFrameX2(e){const t=m.rawmultibodyjointset_jointFrameX2(this.__wbg_ptr,e);return st.__wrap(t)}jointAnchor1(e){const t=m.rawmultibodyjointset_jointAnchor1(this.__wbg_ptr,e);return j.__wrap(t)}jointAnchor2(e){const t=m.rawmultibodyjointset_jointAnchor2(this.__wbg_ptr,e);return j.__wrap(t)}jointContactsEnabled(e){return m.rawmultibodyjointset_jointContactsEnabled(this.__wbg_ptr,e)!==0}jointSetContactsEnabled(e,t){m.rawmultibodyjointset_jointSetContactsEnabled(this.__wbg_ptr,e,t)}jointLimitsEnabled(e,t){return m.rawmultibodyjointset_jointLimitsEnabled(this.__wbg_ptr,e,t)!==0}jointLimitsMin(e,t){return m.rawmultibodyjointset_jointLimitsMin(this.__wbg_ptr,e,t)}jointLimitsMax(e,t){return m.rawmultibodyjointset_jointLimitsMax(this.__wbg_ptr,e,t)}constructor(){const e=m.rawmultibodyjointset_new();return this.__wbg_ptr=e>>>0,Za.register(this,this.__wbg_ptr,this),this}createJoint(e,t,n,i){return O(e,Ln),m.rawmultibodyjointset_createJoint(this.__wbg_ptr,e.__wbg_ptr,t,n,i)}remove(e,t){m.rawmultibodyjointset_remove(this.__wbg_ptr,e,t)}contains(e){return m.rawmultibodyjointset_contains(this.__wbg_ptr,e)!==0}forEachJointHandle(e){try{m.rawmultibodyjointset_forEachJointHandle(this.__wbg_ptr,Et(e))}finally{lt[bt++]=void 0}}forEachJointAttachedToRigidBody(e,t){try{m.rawmultibodyjointset_forEachJointAttachedToRigidBody(this.__wbg_ptr,e,Et(t))}finally{lt[bt++]=void 0}}}const $a=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawnarrowphase_free(s>>>0,1));class kt{static __wrap(e){e=e>>>0;const t=Object.create(kt.prototype);return t.__wbg_ptr=e,$a.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,$a.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawnarrowphase_free(e,0)}constructor(){const e=m.rawnarrowphase_new();return this.__wbg_ptr=e>>>0,$a.register(this,this.__wbg_ptr,this),this}contact_pairs_with(e,t){m.rawnarrowphase_contact_pairs_with(this.__wbg_ptr,e,yt(t))}contact_pair(e,t){const n=m.rawnarrowphase_contact_pair(this.__wbg_ptr,e,t);return n===0?void 0:Ml.__wrap(n)}intersection_pairs_with(e,t){m.rawnarrowphase_intersection_pairs_with(this.__wbg_ptr,e,yt(t))}intersection_pair(e,t){return m.rawnarrowphase_intersection_pair(this.__wbg_ptr,e,t)!==0}}const wd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawphysicspipeline_free(s>>>0,1));class wP{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,wd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawphysicspipeline_free(e,0)}constructor(){const e=m.rawphysicspipeline_new();return this.__wbg_ptr=e>>>0,wd.register(this,this.__wbg_ptr,this),this}set_profiler_enabled(e){m.rawphysicspipeline_set_profiler_enabled(this.__wbg_ptr,e)}is_profiler_enabled(){return m.rawphysicspipeline_is_profiler_enabled(this.__wbg_ptr)!==0}timing_step(){return m.rawphysicspipeline_timing_step(this.__wbg_ptr)}timing_collision_detection(){return m.rawphysicspipeline_timing_collision_detection(this.__wbg_ptr)}timing_broad_phase(){return m.rawphysicspipeline_timing_broad_phase(this.__wbg_ptr)}timing_narrow_phase(){return m.rawphysicspipeline_timing_narrow_phase(this.__wbg_ptr)}timing_solver(){return m.rawphysicspipeline_timing_solver(this.__wbg_ptr)}timing_velocity_assembly(){return m.rawphysicspipeline_timing_velocity_assembly(this.__wbg_ptr)}timing_velocity_resolution(){return m.rawphysicspipeline_timing_velocity_resolution(this.__wbg_ptr)}timing_velocity_update(){return m.rawphysicspipeline_timing_velocity_update(this.__wbg_ptr)}timing_velocity_writeback(){return m.rawphysicspipeline_timing_velocity_writeback(this.__wbg_ptr)}timing_ccd(){return m.rawphysicspipeline_timing_ccd(this.__wbg_ptr)}timing_ccd_toi_computation(){return m.rawphysicspipeline_timing_ccd_toi_computation(this.__wbg_ptr)}timing_ccd_broad_phase(){return m.rawphysicspipeline_timing_ccd_broad_phase(this.__wbg_ptr)}timing_ccd_narrow_phase(){return m.rawphysicspipeline_timing_ccd_narrow_phase(this.__wbg_ptr)}timing_ccd_solver(){return m.rawphysicspipeline_timing_ccd_solver(this.__wbg_ptr)}timing_island_construction(){return m.rawphysicspipeline_timing_island_construction(this.__wbg_ptr)}timing_user_changes(){return m.rawphysicspipeline_timing_user_changes(this.__wbg_ptr)}step(e,t,n,i,r,o,a,c,l,h){O(e,j),O(t,Fr),O(n,Ei),O(i,Si),O(r,kt),O(o,Tt),O(a,Pt),O(c,Mi),O(l,Ti),O(h,od),m.rawphysicspipeline_step(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o.__wbg_ptr,a.__wbg_ptr,c.__wbg_ptr,l.__wbg_ptr,h.__wbg_ptr)}stepWithEvents(e,t,n,i,r,o,a,c,l,h,d,u,f,g){O(e,j),O(t,Fr),O(n,Ei),O(i,Si),O(r,kt),O(o,Tt),O(a,Pt),O(c,Mi),O(l,Ti),O(h,od),O(d,y0),m.rawphysicspipeline_stepWithEvents(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o.__wbg_ptr,a.__wbg_ptr,c.__wbg_ptr,l.__wbg_ptr,h.__wbg_ptr,d.__wbg_ptr,yt(u),yt(f),yt(g))}}const vd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawpidcontroller_free(s>>>0,1));class vP{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,vd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawpidcontroller_free(e,0)}constructor(e,t,n,i){const r=m.rawpidcontroller_new(e,t,n,i);return this.__wbg_ptr=r>>>0,vd.register(this,this.__wbg_ptr,this),this}set_kp(e,t){m.rawpidcontroller_set_kp(this.__wbg_ptr,e,t)}set_ki(e,t){m.rawpidcontroller_set_ki(this.__wbg_ptr,e,t)}set_kd(e,t){m.rawpidcontroller_set_kd(this.__wbg_ptr,e,t)}set_axes_mask(e){m.rawpidcontroller_set_axes_mask(this.__wbg_ptr,e)}reset_integrals(){m.rawpidcontroller_reset_integrals(this.__wbg_ptr)}apply_linear_correction(e,t,n,i,r){O(t,Tt),O(i,j),O(r,j),m.rawpidcontroller_apply_linear_correction(this.__wbg_ptr,e,t.__wbg_ptr,n,i.__wbg_ptr,r.__wbg_ptr)}apply_angular_correction(e,t,n,i,r){O(t,Tt),O(i,st),O(r,j),m.rawpidcontroller_apply_angular_correction(this.__wbg_ptr,e,t.__wbg_ptr,n,i.__wbg_ptr,r.__wbg_ptr)}linear_correction(e,t,n,i,r){O(t,Tt),O(i,j),O(r,j);const o=m.rawpidcontroller_linear_correction(this.__wbg_ptr,e,t.__wbg_ptr,n,i.__wbg_ptr,r.__wbg_ptr);return j.__wrap(o)}angular_correction(e,t,n,i,r){O(t,Tt),O(i,st),O(r,j);const o=m.rawpidcontroller_angular_correction(this.__wbg_ptr,e,t.__wbg_ptr,n,i.__wbg_ptr,r.__wbg_ptr);return j.__wrap(o)}}const bd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawpointcolliderprojection_free(s>>>0,1));class Oo{static __wrap(e){e=e>>>0;const t=Object.create(Oo.prototype);return t.__wbg_ptr=e,bd.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,bd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawpointcolliderprojection_free(e,0)}colliderHandle(){return m.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr)}point(){const e=m.rawpointcolliderprojection_point(this.__wbg_ptr);return j.__wrap(e)}isInside(){return m.rawpointcolliderprojection_isInside(this.__wbg_ptr)!==0}featureType(){return m.rawpointcolliderprojection_featureType(this.__wbg_ptr)}featureId(){const e=m.rawpointcolliderprojection_featureId(this.__wbg_ptr);return e===4294967297?void 0:e}}const yd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawpointprojection_free(s>>>0,1));class Yo{static __wrap(e){e=e>>>0;const t=Object.create(Yo.prototype);return t.__wbg_ptr=e,yd.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,yd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawpointprojection_free(e,0)}point(){const e=m.rawpointprojection_point(this.__wbg_ptr);return j.__wrap(e)}isInside(){return m.rawpointprojection_isInside(this.__wbg_ptr)!==0}}const xd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawraycolliderhit_free(s>>>0,1));class Tl{static __wrap(e){e=e>>>0;const t=Object.create(Tl.prototype);return t.__wbg_ptr=e,xd.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,xd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawraycolliderhit_free(e,0)}colliderHandle(){return m.rawcharactercollision_handle(this.__wbg_ptr)}timeOfImpact(){return m.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}}const Sd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawraycolliderintersection_free(s>>>0,1));class Ko{static __wrap(e){e=e>>>0;const t=Object.create(Ko.prototype);return t.__wbg_ptr=e,Sd.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Sd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawraycolliderintersection_free(e,0)}colliderHandle(){return m.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr)}normal(){const e=m.rawcollidershapecasthit_witness1(this.__wbg_ptr);return j.__wrap(e)}time_of_impact(){return m.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}featureType(){return m.rawpointcolliderprojection_featureType(this.__wbg_ptr)}featureId(){const e=m.rawpointcolliderprojection_featureId(this.__wbg_ptr);return e===4294967297?void 0:e}}const Md=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawrayintersection_free(s>>>0,1));class Jo{static __wrap(e){e=e>>>0;const t=Object.create(Jo.prototype);return t.__wbg_ptr=e,Md.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Md.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawrayintersection_free(e,0)}normal(){const e=m.rawcollidershapecasthit_witness1(this.__wbg_ptr);return j.__wrap(e)}time_of_impact(){return m.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}featureType(){return m.rawpointcolliderprojection_featureType(this.__wbg_ptr)}featureId(){const e=m.rawpointcolliderprojection_featureId(this.__wbg_ptr);return e===4294967297?void 0:e}}const Qa=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawrigidbodyset_free(s>>>0,1));class Tt{static __wrap(e){e=e>>>0;const t=Object.create(Tt.prototype);return t.__wbg_ptr=e,Qa.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Qa.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawrigidbodyset_free(e,0)}rbTranslation(e){const t=m.rawrigidbodyset_rbTranslation(this.__wbg_ptr,e);return j.__wrap(t)}rbRotation(e){const t=m.rawrigidbodyset_rbRotation(this.__wbg_ptr,e);return st.__wrap(t)}rbSleep(e){m.rawrigidbodyset_rbSleep(this.__wbg_ptr,e)}rbIsSleeping(e){return m.rawrigidbodyset_rbIsSleeping(this.__wbg_ptr,e)!==0}rbIsMoving(e){return m.rawrigidbodyset_rbIsMoving(this.__wbg_ptr,e)!==0}rbNextTranslation(e){const t=m.rawrigidbodyset_rbNextTranslation(this.__wbg_ptr,e);return j.__wrap(t)}rbNextRotation(e){const t=m.rawrigidbodyset_rbNextRotation(this.__wbg_ptr,e);return st.__wrap(t)}rbSetTranslation(e,t,n,i,r){m.rawrigidbodyset_rbSetTranslation(this.__wbg_ptr,e,t,n,i,r)}rbSetRotation(e,t,n,i,r,o){m.rawrigidbodyset_rbSetRotation(this.__wbg_ptr,e,t,n,i,r,o)}rbSetLinvel(e,t,n){O(t,j),m.rawrigidbodyset_rbSetLinvel(this.__wbg_ptr,e,t.__wbg_ptr,n)}rbSetAngvel(e,t,n){O(t,j),m.rawrigidbodyset_rbSetAngvel(this.__wbg_ptr,e,t.__wbg_ptr,n)}rbSetNextKinematicTranslation(e,t,n,i){m.rawrigidbodyset_rbSetNextKinematicTranslation(this.__wbg_ptr,e,t,n,i)}rbSetNextKinematicRotation(e,t,n,i,r){m.rawrigidbodyset_rbSetNextKinematicRotation(this.__wbg_ptr,e,t,n,i,r)}rbRecomputeMassPropertiesFromColliders(e,t){O(t,Pt),m.rawrigidbodyset_rbRecomputeMassPropertiesFromColliders(this.__wbg_ptr,e,t.__wbg_ptr)}rbSetAdditionalMass(e,t,n){m.rawrigidbodyset_rbSetAdditionalMass(this.__wbg_ptr,e,t,n)}rbSetAdditionalMassProperties(e,t,n,i,r,o){O(n,j),O(i,j),O(r,st),m.rawrigidbodyset_rbSetAdditionalMassProperties(this.__wbg_ptr,e,t,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o)}rbLinvel(e){const t=m.rawrigidbodyset_rbLinvel(this.__wbg_ptr,e);return j.__wrap(t)}rbAngvel(e){const t=m.rawrigidbodyset_rbAngvel(this.__wbg_ptr,e);return j.__wrap(t)}rbVelocityAtPoint(e,t){O(t,j);const n=m.rawrigidbodyset_rbVelocityAtPoint(this.__wbg_ptr,e,t.__wbg_ptr);return j.__wrap(n)}rbLockTranslations(e,t,n){m.rawrigidbodyset_rbLockTranslations(this.__wbg_ptr,e,t,n)}rbSetEnabledTranslations(e,t,n,i,r){m.rawrigidbodyset_rbSetEnabledTranslations(this.__wbg_ptr,e,t,n,i,r)}rbLockRotations(e,t,n){m.rawrigidbodyset_rbLockRotations(this.__wbg_ptr,e,t,n)}rbSetEnabledRotations(e,t,n,i,r){m.rawrigidbodyset_rbSetEnabledRotations(this.__wbg_ptr,e,t,n,i,r)}rbDominanceGroup(e){return m.rawrigidbodyset_rbDominanceGroup(this.__wbg_ptr,e)}rbSetDominanceGroup(e,t){m.rawrigidbodyset_rbSetDominanceGroup(this.__wbg_ptr,e,t)}rbEnableCcd(e,t){m.rawrigidbodyset_rbEnableCcd(this.__wbg_ptr,e,t)}rbSetSoftCcdPrediction(e,t){m.rawrigidbodyset_rbSetSoftCcdPrediction(this.__wbg_ptr,e,t)}rbMass(e){return m.rawrigidbodyset_rbMass(this.__wbg_ptr,e)}rbInvMass(e){return m.rawrigidbodyset_rbInvMass(this.__wbg_ptr,e)}rbEffectiveInvMass(e){const t=m.rawrigidbodyset_rbEffectiveInvMass(this.__wbg_ptr,e);return j.__wrap(t)}rbLocalCom(e){const t=m.rawrigidbodyset_rbLocalCom(this.__wbg_ptr,e);return j.__wrap(t)}rbWorldCom(e){const t=m.rawrigidbodyset_rbWorldCom(this.__wbg_ptr,e);return j.__wrap(t)}rbInvPrincipalInertia(e){const t=m.rawrigidbodyset_rbInvPrincipalInertia(this.__wbg_ptr,e);return j.__wrap(t)}rbPrincipalInertiaLocalFrame(e){const t=m.rawrigidbodyset_rbPrincipalInertiaLocalFrame(this.__wbg_ptr,e);return st.__wrap(t)}rbPrincipalInertia(e){const t=m.rawrigidbodyset_rbPrincipalInertia(this.__wbg_ptr,e);return j.__wrap(t)}rbEffectiveWorldInvInertia(e){const t=m.rawrigidbodyset_rbEffectiveWorldInvInertia(this.__wbg_ptr,e);return ko.__wrap(t)}rbEffectiveAngularInertia(e){const t=m.rawrigidbodyset_rbEffectiveAngularInertia(this.__wbg_ptr,e);return ko.__wrap(t)}rbWakeUp(e){m.rawrigidbodyset_rbWakeUp(this.__wbg_ptr,e)}rbIsCcdEnabled(e){return m.rawrigidbodyset_rbIsCcdEnabled(this.__wbg_ptr,e)!==0}rbSoftCcdPrediction(e){return m.rawrigidbodyset_rbSoftCcdPrediction(this.__wbg_ptr,e)}rbNumColliders(e){return m.rawrigidbodyset_rbNumColliders(this.__wbg_ptr,e)>>>0}rbCollider(e,t){return m.rawrigidbodyset_rbCollider(this.__wbg_ptr,e,t)}rbBodyType(e){return m.rawrigidbodyset_rbBodyType(this.__wbg_ptr,e)}rbSetBodyType(e,t,n){m.rawrigidbodyset_rbSetBodyType(this.__wbg_ptr,e,t,n)}rbIsFixed(e){return m.rawrigidbodyset_rbIsFixed(this.__wbg_ptr,e)!==0}rbIsKinematic(e){return m.rawrigidbodyset_rbIsKinematic(this.__wbg_ptr,e)!==0}rbIsDynamic(e){return m.rawrigidbodyset_rbIsDynamic(this.__wbg_ptr,e)!==0}rbLinearDamping(e){return m.rawrigidbodyset_rbLinearDamping(this.__wbg_ptr,e)}rbAngularDamping(e){return m.rawrigidbodyset_rbAngularDamping(this.__wbg_ptr,e)}rbSetLinearDamping(e,t){m.rawrigidbodyset_rbSetLinearDamping(this.__wbg_ptr,e,t)}rbSetAngularDamping(e,t){m.rawrigidbodyset_rbSetAngularDamping(this.__wbg_ptr,e,t)}rbSetEnabled(e,t){m.rawrigidbodyset_rbSetEnabled(this.__wbg_ptr,e,t)}rbIsEnabled(e){return m.rawrigidbodyset_rbIsEnabled(this.__wbg_ptr,e)!==0}rbGravityScale(e){return m.rawrigidbodyset_rbGravityScale(this.__wbg_ptr,e)}rbSetGravityScale(e,t,n){m.rawrigidbodyset_rbSetGravityScale(this.__wbg_ptr,e,t,n)}rbResetForces(e,t){m.rawrigidbodyset_rbResetForces(this.__wbg_ptr,e,t)}rbResetTorques(e,t){m.rawrigidbodyset_rbResetTorques(this.__wbg_ptr,e,t)}rbAddForce(e,t,n){O(t,j),m.rawrigidbodyset_rbAddForce(this.__wbg_ptr,e,t.__wbg_ptr,n)}rbApplyImpulse(e,t,n){O(t,j),m.rawrigidbodyset_rbApplyImpulse(this.__wbg_ptr,e,t.__wbg_ptr,n)}rbAddTorque(e,t,n){O(t,j),m.rawrigidbodyset_rbAddTorque(this.__wbg_ptr,e,t.__wbg_ptr,n)}rbApplyTorqueImpulse(e,t,n){O(t,j),m.rawrigidbodyset_rbApplyTorqueImpulse(this.__wbg_ptr,e,t.__wbg_ptr,n)}rbAddForceAtPoint(e,t,n,i){O(t,j),O(n,j),m.rawrigidbodyset_rbAddForceAtPoint(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i)}rbApplyImpulseAtPoint(e,t,n,i){O(t,j),O(n,j),m.rawrigidbodyset_rbApplyImpulseAtPoint(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i)}rbAdditionalSolverIterations(e){return m.rawrigidbodyset_rbAdditionalSolverIterations(this.__wbg_ptr,e)>>>0}rbSetAdditionalSolverIterations(e,t){m.rawrigidbodyset_rbSetAdditionalSolverIterations(this.__wbg_ptr,e,t)}rbUserData(e){return m.rawrigidbodyset_rbUserData(this.__wbg_ptr,e)>>>0}rbSetUserData(e,t){m.rawrigidbodyset_rbSetUserData(this.__wbg_ptr,e,t)}rbUserForce(e){const t=m.rawrigidbodyset_rbUserForce(this.__wbg_ptr,e);return j.__wrap(t)}rbUserTorque(e){const t=m.rawrigidbodyset_rbUserTorque(this.__wbg_ptr,e);return j.__wrap(t)}constructor(){const e=m.rawrigidbodyset_new();return this.__wbg_ptr=e>>>0,Qa.register(this,this.__wbg_ptr,this),this}createRigidBody(e,t,n,i,r,o,a,c,l,h,d,u,f,g,v,_,p,M,E,b,R,T,A,I,x,y){return O(t,j),O(n,st),O(a,j),O(c,j),O(l,j),O(h,j),O(d,st),m.rawrigidbodyset_createRigidBody(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i,r,o,a.__wbg_ptr,c.__wbg_ptr,l.__wbg_ptr,h.__wbg_ptr,d.__wbg_ptr,u,f,g,v,_,p,M,E,b,R,T,A,I,x,y)}remove(e,t,n,i,r){O(t,Ei),O(n,Pt),O(i,Mi),O(r,Ti),m.rawrigidbodyset_remove(this.__wbg_ptr,e,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr)}len(){return m.rawrigidbodyset_len(this.__wbg_ptr)>>>0}contains(e){return m.rawrigidbodyset_contains(this.__wbg_ptr,e)!==0}forEachRigidBodyHandle(e){try{m.rawrigidbodyset_forEachRigidBodyHandle(this.__wbg_ptr,Et(e))}finally{lt[bt++]=void 0}}propagateModifiedBodyPositionsToColliders(e){O(e,Pt),m.rawrigidbodyset_propagateModifiedBodyPositionsToColliders(this.__wbg_ptr,e.__wbg_ptr)}}const ec=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawrotation_free(s>>>0,1));class st{static __wrap(e){e=e>>>0;const t=Object.create(st.prototype);return t.__wbg_ptr=e,ec.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,ec.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawrotation_free(e,0)}constructor(e,t,n,i){const r=m.rawrotation_new(e,t,n,i);return this.__wbg_ptr=r>>>0,ec.register(this,this.__wbg_ptr,this),this}static identity(){const e=m.rawrotation_identity();return st.__wrap(e)}get x(){return m.rawintegrationparameters_dt(this.__wbg_ptr)}get y(){return m.rawkinematiccharactercontroller_offset(this.__wbg_ptr)}get z(){return m.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}get w(){return m.rawrotation_w(this.__wbg_ptr)}}const Ed=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawsdpmatrix3_free(s>>>0,1));class ko{static __wrap(e){e=e>>>0;const t=Object.create(ko.prototype);return t.__wbg_ptr=e,Ed.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Ed.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawsdpmatrix3_free(e,0)}elements(){const e=m.rawsdpmatrix3_elements(this.__wbg_ptr);return Es(e)}}const Td=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawserializationpipeline_free(s>>>0,1));class bP{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Td.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawserializationpipeline_free(e,0)}constructor(){const e=m.rawccdsolver_new();return this.__wbg_ptr=e>>>0,Td.register(this,this.__wbg_ptr,this),this}serializeAll(e,t,n,i,r,o,a,c,l){O(e,j),O(t,Fr),O(n,Ei),O(i,Si),O(r,kt),O(o,Tt),O(a,Pt),O(c,Mi),O(l,Ti);const h=m.rawserializationpipeline_serializeAll(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o.__wbg_ptr,a.__wbg_ptr,c.__wbg_ptr,l.__wbg_ptr);return Es(h)}deserializeAll(e){const t=m.rawserializationpipeline_deserializeAll(this.__wbg_ptr,yt(e));return t===0?void 0:El.__wrap(t)}}const Ad=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawshape_free(s>>>0,1));class Ye{static __wrap(e){e=e>>>0;const t=Object.create(Ye.prototype);return t.__wbg_ptr=e,Ad.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Ad.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawshape_free(e,0)}static cuboid(e,t,n){const i=m.rawshape_cuboid(e,t,n);return Ye.__wrap(i)}static roundCuboid(e,t,n,i){const r=m.rawshape_roundCuboid(e,t,n,i);return Ye.__wrap(r)}static ball(e){const t=m.rawshape_ball(e);return Ye.__wrap(t)}static halfspace(e){O(e,j);const t=m.rawshape_halfspace(e.__wbg_ptr);return Ye.__wrap(t)}static capsule(e,t){const n=m.rawshape_capsule(e,t);return Ye.__wrap(n)}static cylinder(e,t){const n=m.rawshape_cylinder(e,t);return Ye.__wrap(n)}static roundCylinder(e,t,n){const i=m.rawshape_roundCylinder(e,t,n);return Ye.__wrap(i)}static cone(e,t){const n=m.rawshape_cone(e,t);return Ye.__wrap(n)}static roundCone(e,t,n){const i=m.rawshape_roundCone(e,t,n);return Ye.__wrap(i)}static voxels(e,t){O(e,j);const n=os(t,m.__wbindgen_export_2),i=on,r=m.rawshape_voxels(e.__wbg_ptr,n,i);return Ye.__wrap(r)}static voxelsFromPoints(e,t){O(e,j);const n=fi(t,m.__wbindgen_export_2),i=on,r=m.rawshape_voxelsFromPoints(e.__wbg_ptr,n,i);return Ye.__wrap(r)}static polyline(e,t){const n=fi(e,m.__wbindgen_export_2),i=on,r=os(t,m.__wbindgen_export_2),o=on,a=m.rawshape_polyline(n,i,r,o);return Ye.__wrap(a)}static trimesh(e,t,n){const i=fi(e,m.__wbindgen_export_2),r=on,o=os(t,m.__wbindgen_export_2),a=on,c=m.rawshape_trimesh(i,r,o,a,n);return c===0?void 0:Ye.__wrap(c)}static heightfield(e,t,n,i,r){const o=fi(n,m.__wbindgen_export_2),a=on;O(i,j);const c=m.rawshape_heightfield(e,t,o,a,i.__wbg_ptr,r);return Ye.__wrap(c)}static segment(e,t){O(e,j),O(t,j);const n=m.rawshape_segment(e.__wbg_ptr,t.__wbg_ptr);return Ye.__wrap(n)}static triangle(e,t,n){O(e,j),O(t,j),O(n,j);const i=m.rawshape_triangle(e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr);return Ye.__wrap(i)}static roundTriangle(e,t,n,i){O(e,j),O(t,j),O(n,j);const r=m.rawshape_roundTriangle(e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i);return Ye.__wrap(r)}static convexHull(e){const t=fi(e,m.__wbindgen_export_2),n=on,i=m.rawshape_convexHull(t,n);return i===0?void 0:Ye.__wrap(i)}static roundConvexHull(e,t){const n=fi(e,m.__wbindgen_export_2),i=on,r=m.rawshape_roundConvexHull(n,i,t);return r===0?void 0:Ye.__wrap(r)}static convexMesh(e,t){const n=fi(e,m.__wbindgen_export_2),i=on,r=os(t,m.__wbindgen_export_2),o=on,a=m.rawshape_convexMesh(n,i,r,o);return a===0?void 0:Ye.__wrap(a)}static roundConvexMesh(e,t,n){const i=fi(e,m.__wbindgen_export_2),r=on,o=os(t,m.__wbindgen_export_2),a=on,c=m.rawshape_roundConvexMesh(i,r,o,a,n);return c===0?void 0:Ye.__wrap(c)}castShape(e,t,n,i,r,o,a,c,l,h){O(e,j),O(t,st),O(n,j),O(i,Ye),O(r,j),O(o,st),O(a,j);const d=m.rawshape_castShape(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o.__wbg_ptr,a.__wbg_ptr,c,l,h);return d===0?void 0:Zo.__wrap(d)}intersectsShape(e,t,n,i,r){return O(e,j),O(t,st),O(n,Ye),O(i,j),O(r,st),m.rawshape_intersectsShape(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr)!==0}contactShape(e,t,n,i,r,o){O(e,j),O(t,st),O(n,Ye),O(i,j),O(r,st);const a=m.rawshape_contactShape(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r.__wbg_ptr,o);return a===0?void 0:Ts.__wrap(a)}containsPoint(e,t,n){return O(e,j),O(t,st),O(n,j),m.rawshape_containsPoint(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr)!==0}projectPoint(e,t,n,i){O(e,j),O(t,st),O(n,j);const r=m.rawshape_projectPoint(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i);return Yo.__wrap(r)}intersectsRay(e,t,n,i,r){return O(e,j),O(t,st),O(n,j),O(i,j),m.rawshape_intersectsRay(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r)!==0}castRay(e,t,n,i,r,o){return O(e,j),O(t,st),O(n,j),O(i,j),m.rawshape_castRay(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r,o)}castRayAndGetNormal(e,t,n,i,r,o){O(e,j),O(t,st),O(n,j),O(i,j);const a=m.rawshape_castRayAndGetNormal(this.__wbg_ptr,e.__wbg_ptr,t.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,r,o);return a===0?void 0:Jo.__wrap(a)}}const Rd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawshapecasthit_free(s>>>0,1));class Zo{static __wrap(e){e=e>>>0;const t=Object.create(Zo.prototype);return t.__wbg_ptr=e,Rd.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Rd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawshapecasthit_free(e,0)}time_of_impact(){return m.rawintegrationparameters_dt(this.__wbg_ptr)}witness1(){const e=m.rawshapecasthit_witness1(this.__wbg_ptr);return j.__wrap(e)}witness2(){const e=m.rawcontactforceevent_total_force(this.__wbg_ptr);return j.__wrap(e)}normal1(){const e=m.rawshapecasthit_normal1(this.__wbg_ptr);return j.__wrap(e)}normal2(){const e=m.rawshapecasthit_normal2(this.__wbg_ptr);return j.__wrap(e)}}const Cd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawshapecontact_free(s>>>0,1));class Ts{static __wrap(e){e=e>>>0;const t=Object.create(Ts.prototype);return t.__wbg_ptr=e,Cd.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Cd.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawshapecontact_free(e,0)}distance(){return m.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr)}point1(){const e=m.rawpointprojection_point(this.__wbg_ptr);return j.__wrap(e)}point2(){const e=m.rawcollidershapecasthit_witness1(this.__wbg_ptr);return j.__wrap(e)}normal1(){const e=m.rawcollidershapecasthit_witness2(this.__wbg_ptr);return j.__wrap(e)}normal2(){const e=m.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);return j.__wrap(e)}}const tc=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>m.__wbg_rawvector_free(s>>>0,1));class j{static __wrap(e){e=e>>>0;const t=Object.create(j.prototype);return t.__wbg_ptr=e,tc.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,tc.unregister(this),e}free(){const e=this.__destroy_into_raw();m.__wbg_rawvector_free(e,0)}static zero(){const e=m.rawvector_zero();return j.__wrap(e)}constructor(e,t,n){const i=m.rawvector_new(e,t,n);return this.__wbg_ptr=i>>>0,tc.register(this,this.__wbg_ptr,this),this}get x(){return m.rawintegrationparameters_dt(this.__wbg_ptr)}set x(e){m.rawintegrationparameters_set_dt(this.__wbg_ptr,e)}get y(){return m.rawkinematiccharactercontroller_offset(this.__wbg_ptr)}set y(e){m.rawvector_set_y(this.__wbg_ptr,e)}get z(){return m.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr)}set z(e){m.rawvector_set_z(this.__wbg_ptr,e)}xyz(){const e=m.rawvector_xyz(this.__wbg_ptr);return j.__wrap(e)}yxz(){const e=m.rawvector_yxz(this.__wbg_ptr);return j.__wrap(e)}zxy(){const e=m.rawvector_zxy(this.__wbg_ptr);return j.__wrap(e)}xzy(){const e=m.rawvector_xzy(this.__wbg_ptr);return j.__wrap(e)}yzx(){const e=m.rawvector_yzx(this.__wbg_ptr);return j.__wrap(e)}zyx(){const e=m.rawvector_zyx(this.__wbg_ptr);return j.__wrap(e)}}function x0(s,e,t,n){const i=ct(s).bind(ct(e),ct(t),ct(n));return yt(i)}function S0(s){const e=ct(s).buffer;return yt(e)}function M0(){return Xo(function(s,e){const t=ct(s).call(ct(e));return yt(t)},arguments)}function E0(){return Xo(function(s,e,t){const n=ct(s).call(ct(e),ct(t));return yt(n)},arguments)}function T0(){return Xo(function(s,e,t,n){const i=ct(s).call(ct(e),ct(t),ct(n));return yt(i)},arguments)}function A0(){return Xo(function(s,e,t,n,i){const r=ct(s).call(ct(e),ct(t),ct(n),ct(i));return yt(r)},arguments)}function R0(s){return ct(s).length}function C0(s){return ct(s).length}function P0(s){const e=new Uint8Array(ct(s));return yt(e)}function D0(s,e){const t=new Function(yl(s,e));return yt(t)}function I0(s,e,t){const n=new Uint8Array(ct(s),e>>>0,t>>>0);return yt(n)}function U0(s,e,t){const n=new Float32Array(ct(s),e>>>0,t>>>0);return yt(n)}function L0(s){const e=new Float32Array(s>>>0);return yt(e)}function F0(s){return ct(s).now()}function N0(s){const e=ct(s).performance;return yt(e)}function O0(s){const e=xl.__wrap(s);return yt(e)}function k0(s){const e=Ko.__wrap(s);return yt(e)}function z0(s,e,t){ct(s).set(ct(e),t>>>0)}function B0(s,e,t){ct(s).set(ct(e),t>>>0)}function G0(){const s=typeof global>"u"?null:global;return Je(s)?0:yt(s)}function H0(){const s=typeof globalThis>"u"?null:globalThis;return Je(s)?0:yt(s)}function V0(){const s=typeof self>"u"?null:self;return Je(s)?0:yt(s)}function W0(){const s=typeof window>"u"?null:window;return Je(s)?0:yt(s)}function j0(s){const e=ct(s);return typeof e=="boolean"?e?1:0:2}function X0(s){return typeof ct(s)=="function"}function q0(s){return ct(s)===void 0}function Y0(){const s=m.memory;return yt(s)}function K0(s,e){const t=ct(e),n=typeof t=="number"?t:void 0;Nt().setFloat64(s+8*1,Je(n)?0:n,!0),Nt().setInt32(s+4*0,!Je(n),!0)}function J0(s){return yt(s)}function Z0(s){const e=ct(s);return yt(e)}function $0(s){Es(s)}function Q0(s,e){throw new Error(yl(s,e))}URL=globalThis.URL;const w=await u0({"./rapier_wasm3d_bg.js":{__wbindgen_number_new:J0,__wbindgen_boolean_get:j0,__wbindgen_object_drop_ref:$0,__wbindgen_number_get:K0,__wbindgen_is_function:X0,__wbg_rawraycolliderintersection_new:k0,__wbg_rawcontactforceevent_new:O0,__wbg_performance_7a3ffd0b17f663ad:N0,__wbindgen_is_undefined:q0,__wbg_now_2c95c9de01293173:F0,__wbindgen_object_clone_ref:Z0,__wbg_newnoargs_105ed471475aaf50:D0,__wbg_call_672a4d21634d4a24:M0,__wbg_call_7cccdd69e0791ae2:E0,__wbg_call_833bed5770ea2041:T0,__wbg_call_b8adc8b1d0a0d8eb:A0,__wbg_bind_c8359b1cba058168:x0,__wbg_buffer_609cc3eee51ed158:S0,__wbg_static_accessor_GLOBAL_THIS_56578be7e9f832b0:H0,__wbg_static_accessor_SELF_37c5d418e4bf5819:V0,__wbg_static_accessor_WINDOW_5de37043a91a9c40:W0,__wbg_static_accessor_GLOBAL_88a902d13a557d07:G0,__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a:I0,__wbg_new_a12002a7f91c75be:P0,__wbg_set_65595bdd868b3009:B0,__wbg_length_a446193dc22c12f8:C0,__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354:U0,__wbg_set_10bad9bee0e9c58b:z0,__wbg_length_3b4f022188ae8db6:R0,__wbg_newwithlength_5a5efe313cfd59f1:L0,__wbindgen_throw:Q0,__wbindgen_memory:Y0}},d0),eb=w.memory,tb=w.version,nb=w.__wbg_rawkinematiccharactercontroller_free,ib=w.rawkinematiccharactercontroller_new,rb=w.rawkinematiccharactercontroller_setUp,sb=w.rawkinematiccharactercontroller_normalNudgeFactor,ob=w.rawkinematiccharactercontroller_setNormalNudgeFactor,ab=w.rawkinematiccharactercontroller_offset,cb=w.rawkinematiccharactercontroller_setOffset,lb=w.rawkinematiccharactercontroller_slideEnabled,hb=w.rawkinematiccharactercontroller_setSlideEnabled,db=w.rawkinematiccharactercontroller_autostepMaxHeight,ub=w.rawkinematiccharactercontroller_autostepMinWidth,fb=w.rawkinematiccharactercontroller_autostepIncludesDynamicBodies,pb=w.rawkinematiccharactercontroller_autostepEnabled,_b=w.rawkinematiccharactercontroller_enableAutostep,mb=w.rawkinematiccharactercontroller_disableAutostep,gb=w.rawkinematiccharactercontroller_maxSlopeClimbAngle,wb=w.rawkinematiccharactercontroller_setMaxSlopeClimbAngle,vb=w.rawkinematiccharactercontroller_minSlopeSlideAngle,bb=w.rawkinematiccharactercontroller_setMinSlopeSlideAngle,yb=w.rawkinematiccharactercontroller_snapToGroundDistance,xb=w.rawkinematiccharactercontroller_enableSnapToGround,Sb=w.rawkinematiccharactercontroller_disableSnapToGround,Mb=w.rawkinematiccharactercontroller_snapToGroundEnabled,Eb=w.rawkinematiccharactercontroller_computeColliderMovement,Tb=w.rawkinematiccharactercontroller_computedMovement,Ab=w.rawkinematiccharactercontroller_computedGrounded,Rb=w.rawkinematiccharactercontroller_numComputedCollisions,Cb=w.rawkinematiccharactercontroller_computedCollision,Pb=w.__wbg_rawcharactercollision_free,Db=w.rawcharactercollision_new,Ib=w.rawcharactercollision_handle,Ub=w.rawcharactercollision_translationDeltaApplied,Lb=w.rawcharactercollision_translationDeltaRemaining,Fb=w.rawcharactercollision_toi,Nb=w.rawcharactercollision_worldWitness1,Ob=w.rawcharactercollision_worldWitness2,kb=w.rawcharactercollision_worldNormal1,zb=w.rawcharactercollision_worldNormal2,Bb=w.__wbg_rawpidcontroller_free,Gb=w.rawpidcontroller_new,Hb=w.rawpidcontroller_set_kp,Vb=w.rawpidcontroller_set_ki,Wb=w.rawpidcontroller_set_kd,jb=w.rawpidcontroller_set_axes_mask,Xb=w.rawpidcontroller_reset_integrals,qb=w.rawpidcontroller_apply_linear_correction,Yb=w.rawpidcontroller_apply_angular_correction,Kb=w.rawpidcontroller_linear_correction,Jb=w.rawpidcontroller_angular_correction,Zb=w.__wbg_rawdynamicraycastvehiclecontroller_free,$b=w.rawdynamicraycastvehiclecontroller_new,Qb=w.rawdynamicraycastvehiclecontroller_current_vehicle_speed,ey=w.rawdynamicraycastvehiclecontroller_chassis,ty=w.rawdynamicraycastvehiclecontroller_index_up_axis,ny=w.rawdynamicraycastvehiclecontroller_set_index_up_axis,iy=w.rawdynamicraycastvehiclecontroller_index_forward_axis,ry=w.rawdynamicraycastvehiclecontroller_set_index_forward_axis,sy=w.rawdynamicraycastvehiclecontroller_add_wheel,oy=w.rawdynamicraycastvehiclecontroller_num_wheels,ay=w.rawdynamicraycastvehiclecontroller_update_vehicle,cy=w.rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs,ly=w.rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs,hy=w.rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length,dy=w.rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length,uy=w.rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel,fy=w.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel,py=w.rawdynamicraycastvehiclecontroller_wheel_radius,_y=w.rawdynamicraycastvehiclecontroller_set_wheel_radius,my=w.rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness,gy=w.rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness,wy=w.rawdynamicraycastvehiclecontroller_wheel_suspension_compression,vy=w.rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression,by=w.rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation,yy=w.rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation,xy=w.rawdynamicraycastvehiclecontroller_wheel_max_suspension_force,Sy=w.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force,My=w.rawdynamicraycastvehiclecontroller_wheel_brake,Ey=w.rawdynamicraycastvehiclecontroller_set_wheel_brake,Ty=w.rawdynamicraycastvehiclecontroller_wheel_steering,Ay=w.rawdynamicraycastvehiclecontroller_set_wheel_steering,Ry=w.rawdynamicraycastvehiclecontroller_wheel_engine_force,Cy=w.rawdynamicraycastvehiclecontroller_set_wheel_engine_force,Py=w.rawdynamicraycastvehiclecontroller_wheel_direction_cs,Dy=w.rawdynamicraycastvehiclecontroller_set_wheel_direction_cs,Iy=w.rawdynamicraycastvehiclecontroller_wheel_axle_cs,Uy=w.rawdynamicraycastvehiclecontroller_set_wheel_axle_cs,Ly=w.rawdynamicraycastvehiclecontroller_wheel_friction_slip,Fy=w.rawdynamicraycastvehiclecontroller_set_wheel_friction_slip,Ny=w.rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness,Oy=w.rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness,ky=w.rawdynamicraycastvehiclecontroller_wheel_rotation,zy=w.rawdynamicraycastvehiclecontroller_wheel_forward_impulse,By=w.rawdynamicraycastvehiclecontroller_wheel_side_impulse,Gy=w.rawdynamicraycastvehiclecontroller_wheel_suspension_force,Hy=w.rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws,Vy=w.rawdynamicraycastvehiclecontroller_wheel_contact_point_ws,Wy=w.rawdynamicraycastvehiclecontroller_wheel_suspension_length,jy=w.rawdynamicraycastvehiclecontroller_wheel_hard_point_ws,Xy=w.rawdynamicraycastvehiclecontroller_wheel_is_in_contact,qy=w.rawdynamicraycastvehiclecontroller_wheel_ground_object,Yy=w.__wbg_rawccdsolver_free,Ky=w.rawimpulsejointset_jointType,Jy=w.rawimpulsejointset_jointBodyHandle1,Zy=w.rawimpulsejointset_jointBodyHandle2,$y=w.rawimpulsejointset_jointFrameX1,Qy=w.rawimpulsejointset_jointFrameX2,ex=w.rawimpulsejointset_jointAnchor1,tx=w.rawimpulsejointset_jointAnchor2,nx=w.rawimpulsejointset_jointSetAnchor1,ix=w.rawimpulsejointset_jointSetAnchor2,rx=w.rawimpulsejointset_jointContactsEnabled,sx=w.rawimpulsejointset_jointSetContactsEnabled,ox=w.rawimpulsejointset_jointLimitsEnabled,ax=w.rawimpulsejointset_jointLimitsMin,cx=w.rawimpulsejointset_jointLimitsMax,lx=w.rawimpulsejointset_jointSetLimits,hx=w.rawimpulsejointset_jointConfigureMotorModel,dx=w.rawimpulsejointset_jointConfigureMotorVelocity,ux=w.rawimpulsejointset_jointConfigureMotorPosition,fx=w.rawimpulsejointset_jointConfigureMotor,px=w.__wbg_rawimpulsejointset_free,_x=w.rawimpulsejointset_new,mx=w.rawimpulsejointset_createJoint,gx=w.rawimpulsejointset_remove,wx=w.rawimpulsejointset_len,vx=w.rawimpulsejointset_contains,bx=w.rawimpulsejointset_forEachJointHandle,yx=w.rawimpulsejointset_forEachJointAttachedToRigidBody,xx=w.__wbg_rawintegrationparameters_free,Sx=w.rawintegrationparameters_new,Mx=w.rawintegrationparameters_dt,Ex=w.rawintegrationparameters_contact_erp,Tx=w.rawintegrationparameters_normalizedAllowedLinearError,Ax=w.rawintegrationparameters_normalizedPredictionDistance,Rx=w.rawintegrationparameters_numSolverIterations,Cx=w.rawintegrationparameters_minIslandSize,Px=w.rawintegrationparameters_maxCcdSubsteps,Dx=w.rawintegrationparameters_set_dt,Ix=w.rawintegrationparameters_set_contact_natural_frequency,Ux=w.rawintegrationparameters_set_normalizedAllowedLinearError,Lx=w.rawintegrationparameters_set_normalizedPredictionDistance,Fx=w.rawintegrationparameters_set_numSolverIterations,Nx=w.rawintegrationparameters_set_minIslandSize,Ox=w.rawintegrationparameters_set_maxCcdSubsteps,kx=w.rawintegrationparameters_set_lengthUnit,zx=w.__wbg_rawislandmanager_free,Bx=w.rawislandmanager_new,Gx=w.rawislandmanager_forEachActiveRigidBodyHandle,Hx=w.__wbg_rawgenericjoint_free,Vx=w.rawgenericjoint_generic,Wx=w.rawgenericjoint_spring,jx=w.rawgenericjoint_rope,Xx=w.rawgenericjoint_spherical,qx=w.rawgenericjoint_prismatic,Yx=w.rawgenericjoint_fixed,Kx=w.rawgenericjoint_revolute,Jx=w.rawmultibodyjointset_jointType,Zx=w.rawmultibodyjointset_jointFrameX1,$x=w.rawmultibodyjointset_jointFrameX2,Qx=w.rawmultibodyjointset_jointAnchor1,eS=w.rawmultibodyjointset_jointAnchor2,tS=w.rawmultibodyjointset_jointContactsEnabled,nS=w.rawmultibodyjointset_jointSetContactsEnabled,iS=w.rawmultibodyjointset_jointLimitsEnabled,rS=w.rawmultibodyjointset_jointLimitsMin,sS=w.rawmultibodyjointset_jointLimitsMax,oS=w.__wbg_rawmultibodyjointset_free,aS=w.rawmultibodyjointset_new,cS=w.rawmultibodyjointset_createJoint,lS=w.rawmultibodyjointset_remove,hS=w.rawmultibodyjointset_contains,dS=w.rawmultibodyjointset_forEachJointHandle,uS=w.rawmultibodyjointset_forEachJointAttachedToRigidBody,fS=w.rawrigidbodyset_rbTranslation,pS=w.rawrigidbodyset_rbRotation,_S=w.rawrigidbodyset_rbSleep,mS=w.rawrigidbodyset_rbIsSleeping,gS=w.rawrigidbodyset_rbIsMoving,wS=w.rawrigidbodyset_rbNextTranslation,vS=w.rawrigidbodyset_rbNextRotation,bS=w.rawrigidbodyset_rbSetTranslation,yS=w.rawrigidbodyset_rbSetRotation,xS=w.rawrigidbodyset_rbSetLinvel,SS=w.rawrigidbodyset_rbSetAngvel,MS=w.rawrigidbodyset_rbSetNextKinematicTranslation,ES=w.rawrigidbodyset_rbSetNextKinematicRotation,TS=w.rawrigidbodyset_rbRecomputeMassPropertiesFromColliders,AS=w.rawrigidbodyset_rbSetAdditionalMass,RS=w.rawrigidbodyset_rbSetAdditionalMassProperties,CS=w.rawrigidbodyset_rbLinvel,PS=w.rawrigidbodyset_rbAngvel,DS=w.rawrigidbodyset_rbVelocityAtPoint,IS=w.rawrigidbodyset_rbLockTranslations,US=w.rawrigidbodyset_rbSetEnabledTranslations,LS=w.rawrigidbodyset_rbLockRotations,FS=w.rawrigidbodyset_rbSetEnabledRotations,NS=w.rawrigidbodyset_rbDominanceGroup,OS=w.rawrigidbodyset_rbSetDominanceGroup,kS=w.rawrigidbodyset_rbEnableCcd,zS=w.rawrigidbodyset_rbSetSoftCcdPrediction,BS=w.rawrigidbodyset_rbMass,GS=w.rawrigidbodyset_rbInvMass,HS=w.rawrigidbodyset_rbEffectiveInvMass,VS=w.rawrigidbodyset_rbLocalCom,WS=w.rawrigidbodyset_rbWorldCom,jS=w.rawrigidbodyset_rbInvPrincipalInertia,XS=w.rawrigidbodyset_rbPrincipalInertiaLocalFrame,qS=w.rawrigidbodyset_rbPrincipalInertia,YS=w.rawrigidbodyset_rbEffectiveWorldInvInertia,KS=w.rawrigidbodyset_rbEffectiveAngularInertia,JS=w.rawrigidbodyset_rbWakeUp,ZS=w.rawrigidbodyset_rbIsCcdEnabled,$S=w.rawrigidbodyset_rbSoftCcdPrediction,QS=w.rawrigidbodyset_rbNumColliders,eM=w.rawrigidbodyset_rbCollider,tM=w.rawrigidbodyset_rbBodyType,nM=w.rawrigidbodyset_rbSetBodyType,iM=w.rawrigidbodyset_rbIsFixed,rM=w.rawrigidbodyset_rbIsKinematic,sM=w.rawrigidbodyset_rbIsDynamic,oM=w.rawrigidbodyset_rbLinearDamping,aM=w.rawrigidbodyset_rbAngularDamping,cM=w.rawrigidbodyset_rbSetLinearDamping,lM=w.rawrigidbodyset_rbSetAngularDamping,hM=w.rawrigidbodyset_rbSetEnabled,dM=w.rawrigidbodyset_rbIsEnabled,uM=w.rawrigidbodyset_rbGravityScale,fM=w.rawrigidbodyset_rbSetGravityScale,pM=w.rawrigidbodyset_rbResetForces,_M=w.rawrigidbodyset_rbResetTorques,mM=w.rawrigidbodyset_rbAddForce,gM=w.rawrigidbodyset_rbApplyImpulse,wM=w.rawrigidbodyset_rbAddTorque,vM=w.rawrigidbodyset_rbApplyTorqueImpulse,bM=w.rawrigidbodyset_rbAddForceAtPoint,yM=w.rawrigidbodyset_rbApplyImpulseAtPoint,xM=w.rawrigidbodyset_rbAdditionalSolverIterations,SM=w.rawrigidbodyset_rbSetAdditionalSolverIterations,MM=w.rawrigidbodyset_rbUserData,EM=w.rawrigidbodyset_rbSetUserData,TM=w.rawrigidbodyset_rbUserForce,AM=w.rawrigidbodyset_rbUserTorque,RM=w.__wbg_rawrigidbodyset_free,CM=w.rawrigidbodyset_new,PM=w.rawrigidbodyset_createRigidBody,DM=w.rawrigidbodyset_remove,IM=w.rawrigidbodyset_len,UM=w.rawrigidbodyset_contains,LM=w.rawrigidbodyset_forEachRigidBodyHandle,FM=w.rawrigidbodyset_propagateModifiedBodyPositionsToColliders,NM=w.__wbg_rawbroadphase_free,OM=w.rawbroadphase_new,kM=w.rawbroadphase_castRay,zM=w.rawbroadphase_castRayAndGetNormal,BM=w.rawbroadphase_intersectionsWithRay,GM=w.rawbroadphase_intersectionWithShape,HM=w.rawbroadphase_projectPoint,VM=w.rawbroadphase_projectPointAndGetFeature,WM=w.rawbroadphase_intersectionsWithPoint,jM=w.rawbroadphase_castShape,XM=w.rawbroadphase_intersectionsWithShape,qM=w.rawbroadphase_collidersWithAabbIntersectingAabb,YM=w.rawcolliderset_coTranslation,KM=w.rawcolliderset_coRotation,JM=w.rawcolliderset_coTranslationWrtParent,ZM=w.rawcolliderset_coRotationWrtParent,$M=w.rawcolliderset_coSetTranslation,QM=w.rawcolliderset_coSetTranslationWrtParent,e1=w.rawcolliderset_coSetRotation,t1=w.rawcolliderset_coSetRotationWrtParent,n1=w.rawcolliderset_coIsSensor,i1=w.rawcolliderset_coShapeType,r1=w.rawcolliderset_coHalfspaceNormal,s1=w.rawcolliderset_coHalfExtents,o1=w.rawcolliderset_coSetHalfExtents,a1=w.rawcolliderset_coRadius,c1=w.rawcolliderset_coSetRadius,l1=w.rawcolliderset_coHalfHeight,h1=w.rawcolliderset_coSetHalfHeight,d1=w.rawcolliderset_coRoundRadius,u1=w.rawcolliderset_coSetRoundRadius,f1=w.rawcolliderset_coVoxelData,p1=w.rawcolliderset_coVoxelSize,_1=w.rawcolliderset_coSetVoxel,m1=w.rawcolliderset_coPropagateVoxelChange,g1=w.rawcolliderset_coCombineVoxelStates,w1=w.rawcolliderset_coVertices,v1=w.rawcolliderset_coIndices,b1=w.rawcolliderset_coTriMeshFlags,y1=w.rawcolliderset_coHeightFieldFlags,x1=w.rawcolliderset_coHeightfieldHeights,S1=w.rawcolliderset_coHeightfieldScale,M1=w.rawcolliderset_coHeightfieldNRows,E1=w.rawcolliderset_coHeightfieldNCols,T1=w.rawcolliderset_coParent,A1=w.rawcolliderset_coSetEnabled,R1=w.rawcolliderset_coIsEnabled,C1=w.rawcolliderset_coSetContactSkin,P1=w.rawcolliderset_coContactSkin,D1=w.rawcolliderset_coFriction,I1=w.rawcolliderset_coRestitution,U1=w.rawcolliderset_coDensity,L1=w.rawcolliderset_coMass,F1=w.rawcolliderset_coVolume,N1=w.rawcolliderset_coCollisionGroups,O1=w.rawcolliderset_coSolverGroups,k1=w.rawcolliderset_coActiveHooks,z1=w.rawcolliderset_coActiveCollisionTypes,B1=w.rawcolliderset_coActiveEvents,G1=w.rawcolliderset_coContactForceEventThreshold,H1=w.rawcolliderset_coContainsPoint,V1=w.rawcolliderset_coCastShape,W1=w.rawcolliderset_coCastCollider,j1=w.rawcolliderset_coIntersectsShape,X1=w.rawcolliderset_coContactShape,q1=w.rawcolliderset_coContactCollider,Y1=w.rawcolliderset_coProjectPoint,K1=w.rawcolliderset_coIntersectsRay,J1=w.rawcolliderset_coCastRay,Z1=w.rawcolliderset_coCastRayAndGetNormal,$1=w.rawcolliderset_coSetSensor,Q1=w.rawcolliderset_coSetRestitution,eE=w.rawcolliderset_coSetFriction,tE=w.rawcolliderset_coFrictionCombineRule,nE=w.rawcolliderset_coSetFrictionCombineRule,iE=w.rawcolliderset_coRestitutionCombineRule,rE=w.rawcolliderset_coSetRestitutionCombineRule,sE=w.rawcolliderset_coSetCollisionGroups,oE=w.rawcolliderset_coSetSolverGroups,aE=w.rawcolliderset_coSetActiveHooks,cE=w.rawcolliderset_coSetActiveEvents,lE=w.rawcolliderset_coSetActiveCollisionTypes,hE=w.rawcolliderset_coSetShape,dE=w.rawcolliderset_coSetContactForceEventThreshold,uE=w.rawcolliderset_coSetDensity,fE=w.rawcolliderset_coSetMass,pE=w.rawcolliderset_coSetMassProperties,_E=w.__wbg_rawcolliderset_free,mE=w.rawcolliderset_new,gE=w.rawcolliderset_len,wE=w.rawcolliderset_contains,vE=w.rawcolliderset_createCollider,bE=w.rawcolliderset_remove,yE=w.rawcolliderset_forEachColliderHandle,xE=w.__wbg_rawshapecontact_free,SE=w.__wbg_rawnarrowphase_free,ME=w.rawnarrowphase_new,EE=w.rawnarrowphase_contact_pairs_with,TE=w.rawnarrowphase_contact_pair,AE=w.rawnarrowphase_intersection_pairs_with,RE=w.rawnarrowphase_intersection_pair,CE=w.__wbg_rawcontactmanifold_free,PE=w.rawcontactpair_collider1,DE=w.rawcontactpair_collider2,IE=w.rawcontactpair_numContactManifolds,UE=w.rawcontactpair_contactManifold,LE=w.rawcontactmanifold_normal,FE=w.rawcontactmanifold_local_n1,NE=w.rawcontactmanifold_local_n2,OE=w.rawcontactmanifold_subshape1,kE=w.rawcontactmanifold_subshape2,zE=w.rawcontactmanifold_num_contacts,BE=w.rawcontactmanifold_contact_local_p1,GE=w.rawcontactmanifold_contact_local_p2,HE=w.rawcontactmanifold_contact_dist,VE=w.rawcontactmanifold_contact_fid1,WE=w.rawcontactmanifold_contact_fid2,jE=w.rawcontactmanifold_contact_impulse,XE=w.rawcontactmanifold_contact_tangent_impulse_x,qE=w.rawcontactmanifold_contact_tangent_impulse_y,YE=w.rawcontactmanifold_num_solver_contacts,KE=w.rawcontactmanifold_solver_contact_point,JE=w.rawcontactmanifold_solver_contact_dist,ZE=w.rawcontactmanifold_solver_contact_friction,$E=w.rawcontactmanifold_solver_contact_restitution,QE=w.rawcontactmanifold_solver_contact_tangent_velocity,eT=w.__wbg_rawpointprojection_free,tT=w.rawpointprojection_point,nT=w.rawpointprojection_isInside,iT=w.__wbg_rawpointcolliderprojection_free,rT=w.rawpointcolliderprojection_colliderHandle,sT=w.rawpointcolliderprojection_point,oT=w.rawpointcolliderprojection_isInside,aT=w.rawpointcolliderprojection_featureType,cT=w.rawpointcolliderprojection_featureId,lT=w.__wbg_rawrayintersection_free,hT=w.__wbg_rawraycolliderhit_free,dT=w.__wbg_rawshape_free,uT=w.rawshape_cuboid,fT=w.rawshape_roundCuboid,pT=w.rawshape_ball,_T=w.rawshape_halfspace,mT=w.rawshape_capsule,gT=w.rawshape_cylinder,wT=w.rawshape_roundCylinder,vT=w.rawshape_cone,bT=w.rawshape_roundCone,yT=w.rawshape_voxels,xT=w.rawshape_voxelsFromPoints,ST=w.rawshape_polyline,MT=w.rawshape_trimesh,ET=w.rawshape_heightfield,TT=w.rawshape_segment,AT=w.rawshape_triangle,RT=w.rawshape_roundTriangle,CT=w.rawshape_convexHull,PT=w.rawshape_roundConvexHull,DT=w.rawshape_convexMesh,IT=w.rawshape_roundConvexMesh,UT=w.rawshape_castShape,LT=w.rawshape_intersectsShape,FT=w.rawshape_contactShape,NT=w.rawshape_containsPoint,OT=w.rawshape_projectPoint,kT=w.rawshape_intersectsRay,zT=w.rawshape_castRay,BT=w.rawshape_castRayAndGetNormal,GT=w.__wbg_rawshapecasthit_free,HT=w.rawshapecasthit_witness1,VT=w.rawshapecasthit_normal1,WT=w.rawshapecasthit_normal2,jT=w.__wbg_rawcollidershapecasthit_free,XT=w.rawcollidershapecasthit_time_of_impact,qT=w.rawcollidershapecasthit_witness1,YT=w.rawcollidershapecasthit_witness2,KT=w.rawrotation_new,JT=w.rawrotation_identity,ZT=w.rawrotation_w,$T=w.rawvector_zero,QT=w.rawvector_new,eA=w.rawvector_set_y,tA=w.rawvector_set_z,nA=w.rawvector_xyz,iA=w.rawvector_yxz,rA=w.rawvector_zxy,sA=w.rawvector_xzy,oA=w.rawvector_yzx,aA=w.rawvector_zyx,cA=w.rawsdpmatrix3_elements,lA=w.__wbg_rawdebugrenderpipeline_free,hA=w.rawdebugrenderpipeline_new,dA=w.rawdebugrenderpipeline_vertices,uA=w.rawdebugrenderpipeline_colors,fA=w.rawdebugrenderpipeline_render,pA=w.__wbg_raweventqueue_free,_A=w.__wbg_rawcontactforceevent_free,mA=w.rawcontactforceevent_collider2,gA=w.rawcontactforceevent_total_force,wA=w.rawcontactforceevent_total_force_magnitude,vA=w.rawcontactforceevent_max_force_direction,bA=w.rawcontactforceevent_max_force_magnitude,yA=w.raweventqueue_new,xA=w.raweventqueue_drainCollisionEvents,SA=w.raweventqueue_drainContactForceEvents,MA=w.raweventqueue_clear,EA=w.__wbg_rawphysicspipeline_free,TA=w.rawphysicspipeline_new,AA=w.rawphysicspipeline_set_profiler_enabled,RA=w.rawphysicspipeline_is_profiler_enabled,CA=w.rawphysicspipeline_timing_step,PA=w.rawphysicspipeline_timing_collision_detection,DA=w.rawphysicspipeline_timing_broad_phase,IA=w.rawphysicspipeline_timing_narrow_phase,UA=w.rawphysicspipeline_timing_solver,LA=w.rawphysicspipeline_timing_velocity_assembly,FA=w.rawphysicspipeline_timing_velocity_resolution,NA=w.rawphysicspipeline_timing_velocity_update,OA=w.rawphysicspipeline_timing_velocity_writeback,kA=w.rawphysicspipeline_timing_ccd,zA=w.rawphysicspipeline_timing_ccd_toi_computation,BA=w.rawphysicspipeline_timing_ccd_broad_phase,GA=w.rawphysicspipeline_timing_ccd_narrow_phase,HA=w.rawphysicspipeline_timing_ccd_solver,VA=w.rawphysicspipeline_timing_island_construction,WA=w.rawphysicspipeline_timing_user_changes,jA=w.rawphysicspipeline_step,XA=w.rawphysicspipeline_stepWithEvents,qA=w.__wbg_rawdeserializedworld_free,YA=w.rawdeserializedworld_takeGravity,KA=w.rawdeserializedworld_takeIntegrationParameters,JA=w.rawdeserializedworld_takeIslandManager,ZA=w.rawdeserializedworld_takeBroadPhase,$A=w.rawdeserializedworld_takeNarrowPhase,QA=w.rawdeserializedworld_takeBodies,eR=w.rawdeserializedworld_takeColliders,tR=w.rawdeserializedworld_takeImpulseJoints,nR=w.rawdeserializedworld_takeMultibodyJoints,iR=w.rawserializationpipeline_serializeAll,rR=w.rawserializationpipeline_deserializeAll,sR=w.rawcolliderset_isHandleValid,oR=w.rawrayintersection_featureId,aR=w.rawraycolliderintersection_featureId,cR=w.rawintegrationparameters_set_numInternalPgsIterations,lR=w.rawvector_set_x,hR=w.reserve_memory,dR=w.rawkinematiccharactercontroller_up,uR=w.rawshapecontact_normal2,fR=w.rawshapecontact_point1,pR=w.rawshapecontact_point2,_R=w.rawrayintersection_normal,mR=w.rawraycolliderintersection_normal,gR=w.rawshapecontact_normal1,wR=w.rawcollidershapecasthit_normal1,vR=w.rawcollidershapecasthit_normal2,bR=w.rawshapecasthit_witness2,yR=w.rawintegrationparameters_numInternalPgsIterations,xR=w.rawshapecontact_distance,SR=w.rawrayintersection_featureType,MR=w.rawraycolliderintersection_colliderHandle,ER=w.rawrayintersection_time_of_impact,TR=w.rawraycolliderintersection_featureType,AR=w.rawraycolliderhit_colliderHandle,RR=w.rawraycolliderintersection_time_of_impact,CR=w.rawshapecasthit_time_of_impact,PR=w.rawcollidershapecasthit_colliderHandle,DR=w.rawraycolliderhit_timeOfImpact,IR=w.rawrotation_x,UR=w.rawrotation_y,LR=w.rawrotation_z,FR=w.rawvector_x,NR=w.rawvector_y,OR=w.rawvector_z,kR=w.rawcontactforceevent_collider1,zR=w.rawintegrationparameters_lengthUnit,BR=w.__wbg_rawcontactpair_free,GR=w.__wbg_rawraycolliderintersection_free,HR=w.__wbg_rawrotation_free,VR=w.__wbg_rawvector_free,WR=w.__wbg_rawsdpmatrix3_free,jR=w.__wbg_rawserializationpipeline_free,XR=w.rawccdsolver_new,qR=w.rawserializationpipeline_new,YR=w.__wbindgen_export_0,KR=w.__wbindgen_add_to_stack_pointer,JR=w.__wbindgen_export_1,ZR=w.__wbindgen_export_2,$R=Object.freeze(Object.defineProperty({__proto__:null,__wbg_rawbroadphase_free:NM,__wbg_rawccdsolver_free:Yy,__wbg_rawcharactercollision_free:Pb,__wbg_rawcolliderset_free:_E,__wbg_rawcollidershapecasthit_free:jT,__wbg_rawcontactforceevent_free:_A,__wbg_rawcontactmanifold_free:CE,__wbg_rawcontactpair_free:BR,__wbg_rawdebugrenderpipeline_free:lA,__wbg_rawdeserializedworld_free:qA,__wbg_rawdynamicraycastvehiclecontroller_free:Zb,__wbg_raweventqueue_free:pA,__wbg_rawgenericjoint_free:Hx,__wbg_rawimpulsejointset_free:px,__wbg_rawintegrationparameters_free:xx,__wbg_rawislandmanager_free:zx,__wbg_rawkinematiccharactercontroller_free:nb,__wbg_rawmultibodyjointset_free:oS,__wbg_rawnarrowphase_free:SE,__wbg_rawphysicspipeline_free:EA,__wbg_rawpidcontroller_free:Bb,__wbg_rawpointcolliderprojection_free:iT,__wbg_rawpointprojection_free:eT,__wbg_rawraycolliderhit_free:hT,__wbg_rawraycolliderintersection_free:GR,__wbg_rawrayintersection_free:lT,__wbg_rawrigidbodyset_free:RM,__wbg_rawrotation_free:HR,__wbg_rawsdpmatrix3_free:WR,__wbg_rawserializationpipeline_free:jR,__wbg_rawshape_free:dT,__wbg_rawshapecasthit_free:GT,__wbg_rawshapecontact_free:xE,__wbg_rawvector_free:VR,__wbindgen_add_to_stack_pointer:KR,__wbindgen_export_0:YR,__wbindgen_export_1:JR,__wbindgen_export_2:ZR,memory:eb,rawbroadphase_castRay:kM,rawbroadphase_castRayAndGetNormal:zM,rawbroadphase_castShape:jM,rawbroadphase_collidersWithAabbIntersectingAabb:qM,rawbroadphase_intersectionWithShape:GM,rawbroadphase_intersectionsWithPoint:WM,rawbroadphase_intersectionsWithRay:BM,rawbroadphase_intersectionsWithShape:XM,rawbroadphase_new:OM,rawbroadphase_projectPoint:HM,rawbroadphase_projectPointAndGetFeature:VM,rawccdsolver_new:XR,rawcharactercollision_handle:Ib,rawcharactercollision_new:Db,rawcharactercollision_toi:Fb,rawcharactercollision_translationDeltaApplied:Ub,rawcharactercollision_translationDeltaRemaining:Lb,rawcharactercollision_worldNormal1:kb,rawcharactercollision_worldNormal2:zb,rawcharactercollision_worldWitness1:Nb,rawcharactercollision_worldWitness2:Ob,rawcolliderset_coActiveCollisionTypes:z1,rawcolliderset_coActiveEvents:B1,rawcolliderset_coActiveHooks:k1,rawcolliderset_coCastCollider:W1,rawcolliderset_coCastRay:J1,rawcolliderset_coCastRayAndGetNormal:Z1,rawcolliderset_coCastShape:V1,rawcolliderset_coCollisionGroups:N1,rawcolliderset_coCombineVoxelStates:g1,rawcolliderset_coContactCollider:q1,rawcolliderset_coContactForceEventThreshold:G1,rawcolliderset_coContactShape:X1,rawcolliderset_coContactSkin:P1,rawcolliderset_coContainsPoint:H1,rawcolliderset_coDensity:U1,rawcolliderset_coFriction:D1,rawcolliderset_coFrictionCombineRule:tE,rawcolliderset_coHalfExtents:s1,rawcolliderset_coHalfHeight:l1,rawcolliderset_coHalfspaceNormal:r1,rawcolliderset_coHeightFieldFlags:y1,rawcolliderset_coHeightfieldHeights:x1,rawcolliderset_coHeightfieldNCols:E1,rawcolliderset_coHeightfieldNRows:M1,rawcolliderset_coHeightfieldScale:S1,rawcolliderset_coIndices:v1,rawcolliderset_coIntersectsRay:K1,rawcolliderset_coIntersectsShape:j1,rawcolliderset_coIsEnabled:R1,rawcolliderset_coIsSensor:n1,rawcolliderset_coMass:L1,rawcolliderset_coParent:T1,rawcolliderset_coProjectPoint:Y1,rawcolliderset_coPropagateVoxelChange:m1,rawcolliderset_coRadius:a1,rawcolliderset_coRestitution:I1,rawcolliderset_coRestitutionCombineRule:iE,rawcolliderset_coRotation:KM,rawcolliderset_coRotationWrtParent:ZM,rawcolliderset_coRoundRadius:d1,rawcolliderset_coSetActiveCollisionTypes:lE,rawcolliderset_coSetActiveEvents:cE,rawcolliderset_coSetActiveHooks:aE,rawcolliderset_coSetCollisionGroups:sE,rawcolliderset_coSetContactForceEventThreshold:dE,rawcolliderset_coSetContactSkin:C1,rawcolliderset_coSetDensity:uE,rawcolliderset_coSetEnabled:A1,rawcolliderset_coSetFriction:eE,rawcolliderset_coSetFrictionCombineRule:nE,rawcolliderset_coSetHalfExtents:o1,rawcolliderset_coSetHalfHeight:h1,rawcolliderset_coSetMass:fE,rawcolliderset_coSetMassProperties:pE,rawcolliderset_coSetRadius:c1,rawcolliderset_coSetRestitution:Q1,rawcolliderset_coSetRestitutionCombineRule:rE,rawcolliderset_coSetRotation:e1,rawcolliderset_coSetRotationWrtParent:t1,rawcolliderset_coSetRoundRadius:u1,rawcolliderset_coSetSensor:$1,rawcolliderset_coSetShape:hE,rawcolliderset_coSetSolverGroups:oE,rawcolliderset_coSetTranslation:$M,rawcolliderset_coSetTranslationWrtParent:QM,rawcolliderset_coSetVoxel:_1,rawcolliderset_coShapeType:i1,rawcolliderset_coSolverGroups:O1,rawcolliderset_coTranslation:YM,rawcolliderset_coTranslationWrtParent:JM,rawcolliderset_coTriMeshFlags:b1,rawcolliderset_coVertices:w1,rawcolliderset_coVolume:F1,rawcolliderset_coVoxelData:f1,rawcolliderset_coVoxelSize:p1,rawcolliderset_contains:wE,rawcolliderset_createCollider:vE,rawcolliderset_forEachColliderHandle:yE,rawcolliderset_isHandleValid:sR,rawcolliderset_len:gE,rawcolliderset_new:mE,rawcolliderset_remove:bE,rawcollidershapecasthit_colliderHandle:PR,rawcollidershapecasthit_normal1:wR,rawcollidershapecasthit_normal2:vR,rawcollidershapecasthit_time_of_impact:XT,rawcollidershapecasthit_witness1:qT,rawcollidershapecasthit_witness2:YT,rawcontactforceevent_collider1:kR,rawcontactforceevent_collider2:mA,rawcontactforceevent_max_force_direction:vA,rawcontactforceevent_max_force_magnitude:bA,rawcontactforceevent_total_force:gA,rawcontactforceevent_total_force_magnitude:wA,rawcontactmanifold_contact_dist:HE,rawcontactmanifold_contact_fid1:VE,rawcontactmanifold_contact_fid2:WE,rawcontactmanifold_contact_impulse:jE,rawcontactmanifold_contact_local_p1:BE,rawcontactmanifold_contact_local_p2:GE,rawcontactmanifold_contact_tangent_impulse_x:XE,rawcontactmanifold_contact_tangent_impulse_y:qE,rawcontactmanifold_local_n1:FE,rawcontactmanifold_local_n2:NE,rawcontactmanifold_normal:LE,rawcontactmanifold_num_contacts:zE,rawcontactmanifold_num_solver_contacts:YE,rawcontactmanifold_solver_contact_dist:JE,rawcontactmanifold_solver_contact_friction:ZE,rawcontactmanifold_solver_contact_point:KE,rawcontactmanifold_solver_contact_restitution:$E,rawcontactmanifold_solver_contact_tangent_velocity:QE,rawcontactmanifold_subshape1:OE,rawcontactmanifold_subshape2:kE,rawcontactpair_collider1:PE,rawcontactpair_collider2:DE,rawcontactpair_contactManifold:UE,rawcontactpair_numContactManifolds:IE,rawdebugrenderpipeline_colors:uA,rawdebugrenderpipeline_new:hA,rawdebugrenderpipeline_render:fA,rawdebugrenderpipeline_vertices:dA,rawdeserializedworld_takeBodies:QA,rawdeserializedworld_takeBroadPhase:ZA,rawdeserializedworld_takeColliders:eR,rawdeserializedworld_takeGravity:YA,rawdeserializedworld_takeImpulseJoints:tR,rawdeserializedworld_takeIntegrationParameters:KA,rawdeserializedworld_takeIslandManager:JA,rawdeserializedworld_takeMultibodyJoints:nR,rawdeserializedworld_takeNarrowPhase:$A,rawdynamicraycastvehiclecontroller_add_wheel:sy,rawdynamicraycastvehiclecontroller_chassis:ey,rawdynamicraycastvehiclecontroller_current_vehicle_speed:Qb,rawdynamicraycastvehiclecontroller_index_forward_axis:iy,rawdynamicraycastvehiclecontroller_index_up_axis:ty,rawdynamicraycastvehiclecontroller_new:$b,rawdynamicraycastvehiclecontroller_num_wheels:oy,rawdynamicraycastvehiclecontroller_set_index_forward_axis:ry,rawdynamicraycastvehiclecontroller_set_index_up_axis:ny,rawdynamicraycastvehiclecontroller_set_wheel_axle_cs:Uy,rawdynamicraycastvehiclecontroller_set_wheel_brake:Ey,rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs:ly,rawdynamicraycastvehiclecontroller_set_wheel_direction_cs:Dy,rawdynamicraycastvehiclecontroller_set_wheel_engine_force:Cy,rawdynamicraycastvehiclecontroller_set_wheel_friction_slip:Fy,rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force:Sy,rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel:fy,rawdynamicraycastvehiclecontroller_set_wheel_radius:_y,rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness:Oy,rawdynamicraycastvehiclecontroller_set_wheel_steering:Ay,rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression:vy,rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation:yy,rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length:dy,rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness:gy,rawdynamicraycastvehiclecontroller_update_vehicle:ay,rawdynamicraycastvehiclecontroller_wheel_axle_cs:Iy,rawdynamicraycastvehiclecontroller_wheel_brake:My,rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs:cy,rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws:Hy,rawdynamicraycastvehiclecontroller_wheel_contact_point_ws:Vy,rawdynamicraycastvehiclecontroller_wheel_direction_cs:Py,rawdynamicraycastvehiclecontroller_wheel_engine_force:Ry,rawdynamicraycastvehiclecontroller_wheel_forward_impulse:zy,rawdynamicraycastvehiclecontroller_wheel_friction_slip:Ly,rawdynamicraycastvehiclecontroller_wheel_ground_object:qy,rawdynamicraycastvehiclecontroller_wheel_hard_point_ws:jy,rawdynamicraycastvehiclecontroller_wheel_is_in_contact:Xy,rawdynamicraycastvehiclecontroller_wheel_max_suspension_force:xy,rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel:uy,rawdynamicraycastvehiclecontroller_wheel_radius:py,rawdynamicraycastvehiclecontroller_wheel_rotation:ky,rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness:Ny,rawdynamicraycastvehiclecontroller_wheel_side_impulse:By,rawdynamicraycastvehiclecontroller_wheel_steering:Ty,rawdynamicraycastvehiclecontroller_wheel_suspension_compression:wy,rawdynamicraycastvehiclecontroller_wheel_suspension_force:Gy,rawdynamicraycastvehiclecontroller_wheel_suspension_length:Wy,rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation:by,rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length:hy,rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness:my,raweventqueue_clear:MA,raweventqueue_drainCollisionEvents:xA,raweventqueue_drainContactForceEvents:SA,raweventqueue_new:yA,rawgenericjoint_fixed:Yx,rawgenericjoint_generic:Vx,rawgenericjoint_prismatic:qx,rawgenericjoint_revolute:Kx,rawgenericjoint_rope:jx,rawgenericjoint_spherical:Xx,rawgenericjoint_spring:Wx,rawimpulsejointset_contains:vx,rawimpulsejointset_createJoint:mx,rawimpulsejointset_forEachJointAttachedToRigidBody:yx,rawimpulsejointset_forEachJointHandle:bx,rawimpulsejointset_jointAnchor1:ex,rawimpulsejointset_jointAnchor2:tx,rawimpulsejointset_jointBodyHandle1:Jy,rawimpulsejointset_jointBodyHandle2:Zy,rawimpulsejointset_jointConfigureMotor:fx,rawimpulsejointset_jointConfigureMotorModel:hx,rawimpulsejointset_jointConfigureMotorPosition:ux,rawimpulsejointset_jointConfigureMotorVelocity:dx,rawimpulsejointset_jointContactsEnabled:rx,rawimpulsejointset_jointFrameX1:$y,rawimpulsejointset_jointFrameX2:Qy,rawimpulsejointset_jointLimitsEnabled:ox,rawimpulsejointset_jointLimitsMax:cx,rawimpulsejointset_jointLimitsMin:ax,rawimpulsejointset_jointSetAnchor1:nx,rawimpulsejointset_jointSetAnchor2:ix,rawimpulsejointset_jointSetContactsEnabled:sx,rawimpulsejointset_jointSetLimits:lx,rawimpulsejointset_jointType:Ky,rawimpulsejointset_len:wx,rawimpulsejointset_new:_x,rawimpulsejointset_remove:gx,rawintegrationparameters_contact_erp:Ex,rawintegrationparameters_dt:Mx,rawintegrationparameters_lengthUnit:zR,rawintegrationparameters_maxCcdSubsteps:Px,rawintegrationparameters_minIslandSize:Cx,rawintegrationparameters_new:Sx,rawintegrationparameters_normalizedAllowedLinearError:Tx,rawintegrationparameters_normalizedPredictionDistance:Ax,rawintegrationparameters_numInternalPgsIterations:yR,rawintegrationparameters_numSolverIterations:Rx,rawintegrationparameters_set_contact_natural_frequency:Ix,rawintegrationparameters_set_dt:Dx,rawintegrationparameters_set_lengthUnit:kx,rawintegrationparameters_set_maxCcdSubsteps:Ox,rawintegrationparameters_set_minIslandSize:Nx,rawintegrationparameters_set_normalizedAllowedLinearError:Ux,rawintegrationparameters_set_normalizedPredictionDistance:Lx,rawintegrationparameters_set_numInternalPgsIterations:cR,rawintegrationparameters_set_numSolverIterations:Fx,rawislandmanager_forEachActiveRigidBodyHandle:Gx,rawislandmanager_new:Bx,rawkinematiccharactercontroller_autostepEnabled:pb,rawkinematiccharactercontroller_autostepIncludesDynamicBodies:fb,rawkinematiccharactercontroller_autostepMaxHeight:db,rawkinematiccharactercontroller_autostepMinWidth:ub,rawkinematiccharactercontroller_computeColliderMovement:Eb,rawkinematiccharactercontroller_computedCollision:Cb,rawkinematiccharactercontroller_computedGrounded:Ab,rawkinematiccharactercontroller_computedMovement:Tb,rawkinematiccharactercontroller_disableAutostep:mb,rawkinematiccharactercontroller_disableSnapToGround:Sb,rawkinematiccharactercontroller_enableAutostep:_b,rawkinematiccharactercontroller_enableSnapToGround:xb,rawkinematiccharactercontroller_maxSlopeClimbAngle:gb,rawkinematiccharactercontroller_minSlopeSlideAngle:vb,rawkinematiccharactercontroller_new:ib,rawkinematiccharactercontroller_normalNudgeFactor:sb,rawkinematiccharactercontroller_numComputedCollisions:Rb,rawkinematiccharactercontroller_offset:ab,rawkinematiccharactercontroller_setMaxSlopeClimbAngle:wb,rawkinematiccharactercontroller_setMinSlopeSlideAngle:bb,rawkinematiccharactercontroller_setNormalNudgeFactor:ob,rawkinematiccharactercontroller_setOffset:cb,rawkinematiccharactercontroller_setSlideEnabled:hb,rawkinematiccharactercontroller_setUp:rb,rawkinematiccharactercontroller_slideEnabled:lb,rawkinematiccharactercontroller_snapToGroundDistance:yb,rawkinematiccharactercontroller_snapToGroundEnabled:Mb,rawkinematiccharactercontroller_up:dR,rawmultibodyjointset_contains:hS,rawmultibodyjointset_createJoint:cS,rawmultibodyjointset_forEachJointAttachedToRigidBody:uS,rawmultibodyjointset_forEachJointHandle:dS,rawmultibodyjointset_jointAnchor1:Qx,rawmultibodyjointset_jointAnchor2:eS,rawmultibodyjointset_jointContactsEnabled:tS,rawmultibodyjointset_jointFrameX1:Zx,rawmultibodyjointset_jointFrameX2:$x,rawmultibodyjointset_jointLimitsEnabled:iS,rawmultibodyjointset_jointLimitsMax:sS,rawmultibodyjointset_jointLimitsMin:rS,rawmultibodyjointset_jointSetContactsEnabled:nS,rawmultibodyjointset_jointType:Jx,rawmultibodyjointset_new:aS,rawmultibodyjointset_remove:lS,rawnarrowphase_contact_pair:TE,rawnarrowphase_contact_pairs_with:EE,rawnarrowphase_intersection_pair:RE,rawnarrowphase_intersection_pairs_with:AE,rawnarrowphase_new:ME,rawphysicspipeline_is_profiler_enabled:RA,rawphysicspipeline_new:TA,rawphysicspipeline_set_profiler_enabled:AA,rawphysicspipeline_step:jA,rawphysicspipeline_stepWithEvents:XA,rawphysicspipeline_timing_broad_phase:DA,rawphysicspipeline_timing_ccd:kA,rawphysicspipeline_timing_ccd_broad_phase:BA,rawphysicspipeline_timing_ccd_narrow_phase:GA,rawphysicspipeline_timing_ccd_solver:HA,rawphysicspipeline_timing_ccd_toi_computation:zA,rawphysicspipeline_timing_collision_detection:PA,rawphysicspipeline_timing_island_construction:VA,rawphysicspipeline_timing_narrow_phase:IA,rawphysicspipeline_timing_solver:UA,rawphysicspipeline_timing_step:CA,rawphysicspipeline_timing_user_changes:WA,rawphysicspipeline_timing_velocity_assembly:LA,rawphysicspipeline_timing_velocity_resolution:FA,rawphysicspipeline_timing_velocity_update:NA,rawphysicspipeline_timing_velocity_writeback:OA,rawpidcontroller_angular_correction:Jb,rawpidcontroller_apply_angular_correction:Yb,rawpidcontroller_apply_linear_correction:qb,rawpidcontroller_linear_correction:Kb,rawpidcontroller_new:Gb,rawpidcontroller_reset_integrals:Xb,rawpidcontroller_set_axes_mask:jb,rawpidcontroller_set_kd:Wb,rawpidcontroller_set_ki:Vb,rawpidcontroller_set_kp:Hb,rawpointcolliderprojection_colliderHandle:rT,rawpointcolliderprojection_featureId:cT,rawpointcolliderprojection_featureType:aT,rawpointcolliderprojection_isInside:oT,rawpointcolliderprojection_point:sT,rawpointprojection_isInside:nT,rawpointprojection_point:tT,rawraycolliderhit_colliderHandle:AR,rawraycolliderhit_timeOfImpact:DR,rawraycolliderintersection_colliderHandle:MR,rawraycolliderintersection_featureId:aR,rawraycolliderintersection_featureType:TR,rawraycolliderintersection_normal:mR,rawraycolliderintersection_time_of_impact:RR,rawrayintersection_featureId:oR,rawrayintersection_featureType:SR,rawrayintersection_normal:_R,rawrayintersection_time_of_impact:ER,rawrigidbodyset_contains:UM,rawrigidbodyset_createRigidBody:PM,rawrigidbodyset_forEachRigidBodyHandle:LM,rawrigidbodyset_len:IM,rawrigidbodyset_new:CM,rawrigidbodyset_propagateModifiedBodyPositionsToColliders:FM,rawrigidbodyset_rbAddForce:mM,rawrigidbodyset_rbAddForceAtPoint:bM,rawrigidbodyset_rbAddTorque:wM,rawrigidbodyset_rbAdditionalSolverIterations:xM,rawrigidbodyset_rbAngularDamping:aM,rawrigidbodyset_rbAngvel:PS,rawrigidbodyset_rbApplyImpulse:gM,rawrigidbodyset_rbApplyImpulseAtPoint:yM,rawrigidbodyset_rbApplyTorqueImpulse:vM,rawrigidbodyset_rbBodyType:tM,rawrigidbodyset_rbCollider:eM,rawrigidbodyset_rbDominanceGroup:NS,rawrigidbodyset_rbEffectiveAngularInertia:KS,rawrigidbodyset_rbEffectiveInvMass:HS,rawrigidbodyset_rbEffectiveWorldInvInertia:YS,rawrigidbodyset_rbEnableCcd:kS,rawrigidbodyset_rbGravityScale:uM,rawrigidbodyset_rbInvMass:GS,rawrigidbodyset_rbInvPrincipalInertia:jS,rawrigidbodyset_rbIsCcdEnabled:ZS,rawrigidbodyset_rbIsDynamic:sM,rawrigidbodyset_rbIsEnabled:dM,rawrigidbodyset_rbIsFixed:iM,rawrigidbodyset_rbIsKinematic:rM,rawrigidbodyset_rbIsMoving:gS,rawrigidbodyset_rbIsSleeping:mS,rawrigidbodyset_rbLinearDamping:oM,rawrigidbodyset_rbLinvel:CS,rawrigidbodyset_rbLocalCom:VS,rawrigidbodyset_rbLockRotations:LS,rawrigidbodyset_rbLockTranslations:IS,rawrigidbodyset_rbMass:BS,rawrigidbodyset_rbNextRotation:vS,rawrigidbodyset_rbNextTranslation:wS,rawrigidbodyset_rbNumColliders:QS,rawrigidbodyset_rbPrincipalInertia:qS,rawrigidbodyset_rbPrincipalInertiaLocalFrame:XS,rawrigidbodyset_rbRecomputeMassPropertiesFromColliders:TS,rawrigidbodyset_rbResetForces:pM,rawrigidbodyset_rbResetTorques:_M,rawrigidbodyset_rbRotation:pS,rawrigidbodyset_rbSetAdditionalMass:AS,rawrigidbodyset_rbSetAdditionalMassProperties:RS,rawrigidbodyset_rbSetAdditionalSolverIterations:SM,rawrigidbodyset_rbSetAngularDamping:lM,rawrigidbodyset_rbSetAngvel:SS,rawrigidbodyset_rbSetBodyType:nM,rawrigidbodyset_rbSetDominanceGroup:OS,rawrigidbodyset_rbSetEnabled:hM,rawrigidbodyset_rbSetEnabledRotations:FS,rawrigidbodyset_rbSetEnabledTranslations:US,rawrigidbodyset_rbSetGravityScale:fM,rawrigidbodyset_rbSetLinearDamping:cM,rawrigidbodyset_rbSetLinvel:xS,rawrigidbodyset_rbSetNextKinematicRotation:ES,rawrigidbodyset_rbSetNextKinematicTranslation:MS,rawrigidbodyset_rbSetRotation:yS,rawrigidbodyset_rbSetSoftCcdPrediction:zS,rawrigidbodyset_rbSetTranslation:bS,rawrigidbodyset_rbSetUserData:EM,rawrigidbodyset_rbSleep:_S,rawrigidbodyset_rbSoftCcdPrediction:$S,rawrigidbodyset_rbTranslation:fS,rawrigidbodyset_rbUserData:MM,rawrigidbodyset_rbUserForce:TM,rawrigidbodyset_rbUserTorque:AM,rawrigidbodyset_rbVelocityAtPoint:DS,rawrigidbodyset_rbWakeUp:JS,rawrigidbodyset_rbWorldCom:WS,rawrigidbodyset_remove:DM,rawrotation_identity:JT,rawrotation_new:KT,rawrotation_w:ZT,rawrotation_x:IR,rawrotation_y:UR,rawrotation_z:LR,rawsdpmatrix3_elements:cA,rawserializationpipeline_deserializeAll:rR,rawserializationpipeline_new:qR,rawserializationpipeline_serializeAll:iR,rawshape_ball:pT,rawshape_capsule:mT,rawshape_castRay:zT,rawshape_castRayAndGetNormal:BT,rawshape_castShape:UT,rawshape_cone:vT,rawshape_contactShape:FT,rawshape_containsPoint:NT,rawshape_convexHull:CT,rawshape_convexMesh:DT,rawshape_cuboid:uT,rawshape_cylinder:gT,rawshape_halfspace:_T,rawshape_heightfield:ET,rawshape_intersectsRay:kT,rawshape_intersectsShape:LT,rawshape_polyline:ST,rawshape_projectPoint:OT,rawshape_roundCone:bT,rawshape_roundConvexHull:PT,rawshape_roundConvexMesh:IT,rawshape_roundCuboid:fT,rawshape_roundCylinder:wT,rawshape_roundTriangle:RT,rawshape_segment:TT,rawshape_triangle:AT,rawshape_trimesh:MT,rawshape_voxels:yT,rawshape_voxelsFromPoints:xT,rawshapecasthit_normal1:VT,rawshapecasthit_normal2:WT,rawshapecasthit_time_of_impact:CR,rawshapecasthit_witness1:HT,rawshapecasthit_witness2:bR,rawshapecontact_distance:xR,rawshapecontact_normal1:gR,rawshapecontact_normal2:uR,rawshapecontact_point1:fR,rawshapecontact_point2:pR,rawvector_new:QT,rawvector_set_x:lR,rawvector_set_y:eA,rawvector_set_z:tA,rawvector_x:FR,rawvector_xyz:nA,rawvector_xzy:sA,rawvector_y:NR,rawvector_yxz:iA,rawvector_yzx:oA,rawvector_z:OR,rawvector_zero:$T,rawvector_zxy:rA,rawvector_zyx:aA,reserve_memory:hR,version:tb},Symbol.toStringTag,{value:"Module"}));f0($R);class QR{constructor(e,t,n){this.x=e,this.y=t,this.z=n}}class We{static new(e,t,n){return new QR(e,t,n)}static intoRaw(e){return new j(e.x,e.y,e.z)}static zeros(){return We.new(0,0,0)}static fromRaw(e){if(!e)return null;let t=We.new(e.x,e.y,e.z);return e.free(),t}static copy(e,t){e.x=t.x,e.y=t.y,e.z=t.z}}class Pd{constructor(e,t,n,i){this.x=e,this.y=t,this.z=n,this.w=i}}class Un{static identity(){return new Pd(0,0,0,1)}static fromRaw(e){if(!e)return null;let t=new Pd(e.x,e.y,e.z,e.w);return e.free(),t}static intoRaw(e){return new st(e.x,e.y,e.z,e.w)}static copy(e,t){e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w}}class eC{get m11(){return this.elements[0]}get m12(){return this.elements[1]}get m21(){return this.m12}get m13(){return this.elements[2]}get m31(){return this.m13}get m22(){return this.elements[3]}get m23(){return this.elements[4]}get m32(){return this.m23}get m33(){return this.elements[5]}constructor(e){this.elements=e}}class yP{static fromRaw(e){const t=new eC(e.elements());return e.free(),t}}var As;(function(s){s[s.Vertex=0]="Vertex",s[s.Edge=1]="Edge",s[s.Face=2]="Face",s[s.Unknown=3]="Unknown"})(As||(As={}));class xP{constructor(e,t){this.origin=e,this.dir=t}pointAt(e){return{x:this.origin.x+this.dir.x*e,y:this.origin.y+this.dir.y*e,z:this.origin.z+this.dir.z*e}}}class Al{constructor(e,t,n,i){this.featureType=As.Unknown,this.featureId=void 0,this.timeOfImpact=e,this.normal=t,i!==void 0&&(this.featureId=i),n!==void 0&&(this.featureType=n)}static fromRaw(e){if(!e)return null;const t=new Al(e.time_of_impact(),We.fromRaw(e.normal()),e.featureType(),e.featureId());return e.free(),t}}class Vu{constructor(e,t,n,i,r){this.featureType=As.Unknown,this.featureId=void 0,this.collider=e,this.timeOfImpact=t,this.normal=n,r!==void 0&&(this.featureId=r),i!==void 0&&(this.featureType=i)}static fromRaw(e,t){if(!t)return null;const n=new Vu(e.get(t.colliderHandle()),t.time_of_impact(),We.fromRaw(t.normal()),t.featureType(),t.featureId());return t.free(),n}}class Wu{constructor(e,t){this.collider=e,this.timeOfImpact=t}static fromRaw(e,t){if(!t)return null;const n=new Wu(e.get(t.colliderHandle()),t.timeOfImpact());return t.free(),n}}class Rl{constructor(e,t){this.point=e,this.isInside=t}static fromRaw(e){if(!e)return null;const t=new Rl(We.fromRaw(e.point()),e.isInside());return e.free(),t}}class ju{constructor(e,t,n,i,r){this.featureType=As.Unknown,this.featureId=void 0,this.collider=e,this.point=t,this.isInside=n,r!==void 0&&(this.featureId=r),i!==void 0&&(this.featureType=i)}static fromRaw(e,t){if(!t)return null;const n=new ju(e.get(t.colliderHandle()),We.fromRaw(t.point()),t.isInside(),t.featureType(),t.featureId());return t.free(),n}}class $o{constructor(e,t,n,i,r){this.time_of_impact=e,this.witness1=t,this.witness2=n,this.normal1=i,this.normal2=r}static fromRaw(e,t){if(!t)return null;const n=new $o(t.time_of_impact(),We.fromRaw(t.witness1()),We.fromRaw(t.witness2()),We.fromRaw(t.normal1()),We.fromRaw(t.normal2()));return t.free(),n}}class Xu extends $o{constructor(e,t,n,i,r,o){super(t,n,i,r,o),this.collider=e}static fromRaw(e,t){if(!t)return null;const n=new Xu(e.get(t.colliderHandle()),t.time_of_impact(),We.fromRaw(t.witness1()),We.fromRaw(t.witness2()),We.fromRaw(t.normal1()),We.fromRaw(t.normal2()));return t.free(),n}}class Cl{constructor(e,t,n,i,r){this.distance=e,this.point1=t,this.point2=n,this.normal1=i,this.normal2=r}static fromRaw(e){if(!e)return null;const t=new Cl(e.distance(),We.fromRaw(e.point1()),We.fromRaw(e.point2()),We.fromRaw(e.normal1()),We.fromRaw(e.normal2()));return e.free(),t}}class jt{static fromRaw(e,t){const n=e.coShapeType(t);let i,r,o,a,c,l,h;switch(n){case Vt.Ball:return new tC(e.coRadius(t));case Vt.Cuboid:return i=e.coHalfExtents(t),new iC(i.x,i.y,i.z);case Vt.RoundCuboid:return i=e.coHalfExtents(t),r=e.coRoundRadius(t),new rC(i.x,i.y,i.z,r);case Vt.Capsule:return c=e.coHalfHeight(t),l=e.coRadius(t),new sC(c,l);case Vt.Segment:return o=e.coVertices(t),new oC(We.new(o[0],o[1],o[2]),We.new(o[3],o[4],o[5]));case Vt.Polyline:return o=e.coVertices(t),a=e.coIndices(t),new lC(o,a);case Vt.Triangle:return o=e.coVertices(t),new aC(We.new(o[0],o[1],o[2]),We.new(o[3],o[4],o[5]),We.new(o[6],o[7],o[8]));case Vt.RoundTriangle:return o=e.coVertices(t),r=e.coRoundRadius(t),new cC(We.new(o[0],o[1],o[2]),We.new(o[3],o[4],o[5]),We.new(o[6],o[7],o[8]),r);case Vt.HalfSpace:return h=We.fromRaw(e.coHalfspaceNormal(t)),new nC(h);case Vt.Voxels:const d=e.coVoxelData(t),u=e.coVoxelSize(t);return new hC(d,u);case Vt.TriMesh:o=e.coVertices(t),a=e.coIndices(t);const f=e.coTriMeshFlags(t);return new dC(o,a,f);case Vt.HeightField:const g=e.coHeightfieldScale(t),v=e.coHeightfieldHeights(t),_=e.coHeightfieldNRows(t),p=e.coHeightfieldNCols(t),M=e.coHeightFieldFlags(t);return new pC(_,p,v,g,M);case Vt.ConvexPolyhedron:return o=e.coVertices(t),a=e.coIndices(t),new uC(o,a);case Vt.RoundConvexPolyhedron:return o=e.coVertices(t),a=e.coIndices(t),r=e.coRoundRadius(t),new fC(o,a,r);case Vt.Cylinder:return c=e.coHalfHeight(t),l=e.coRadius(t),new _C(c,l);case Vt.RoundCylinder:return c=e.coHalfHeight(t),l=e.coRadius(t),r=e.coRoundRadius(t),new mC(c,l,r);case Vt.Cone:return c=e.coHalfHeight(t),l=e.coRadius(t),new gC(c,l);case Vt.RoundCone:return c=e.coHalfHeight(t),l=e.coRadius(t),r=e.coRoundRadius(t),new wC(c,l,r);default:throw new Error("unknown shape type: "+n)}}castShape(e,t,n,i,r,o,a,c,l,h){let d=We.intoRaw(e),u=Un.intoRaw(t),f=We.intoRaw(n),g=We.intoRaw(r),v=Un.intoRaw(o),_=We.intoRaw(a),p=this.intoRaw(),M=i.intoRaw(),E=$o.fromRaw(null,p.castShape(d,u,f,M,g,v,_,c,l,h));return d.free(),u.free(),f.free(),g.free(),v.free(),_.free(),p.free(),M.free(),E}intersectsShape(e,t,n,i,r){let o=We.intoRaw(e),a=Un.intoRaw(t),c=We.intoRaw(i),l=Un.intoRaw(r),h=this.intoRaw(),d=n.intoRaw(),u=h.intersectsShape(o,a,d,c,l);return o.free(),a.free(),c.free(),l.free(),h.free(),d.free(),u}contactShape(e,t,n,i,r,o){let a=We.intoRaw(e),c=Un.intoRaw(t),l=We.intoRaw(i),h=Un.intoRaw(r),d=this.intoRaw(),u=n.intoRaw(),f=Cl.fromRaw(d.contactShape(a,c,u,l,h,o));return a.free(),c.free(),l.free(),h.free(),d.free(),u.free(),f}containsPoint(e,t,n){let i=We.intoRaw(e),r=Un.intoRaw(t),o=We.intoRaw(n),a=this.intoRaw(),c=a.containsPoint(i,r,o);return i.free(),r.free(),o.free(),a.free(),c}projectPoint(e,t,n,i){let r=We.intoRaw(e),o=Un.intoRaw(t),a=We.intoRaw(n),c=this.intoRaw(),l=Rl.fromRaw(c.projectPoint(r,o,a,i));return r.free(),o.free(),a.free(),c.free(),l}intersectsRay(e,t,n,i){let r=We.intoRaw(t),o=Un.intoRaw(n),a=We.intoRaw(e.origin),c=We.intoRaw(e.dir),l=this.intoRaw(),h=l.intersectsRay(r,o,a,c,i);return r.free(),o.free(),a.free(),c.free(),l.free(),h}castRay(e,t,n,i,r){let o=We.intoRaw(t),a=Un.intoRaw(n),c=We.intoRaw(e.origin),l=We.intoRaw(e.dir),h=this.intoRaw(),d=h.castRay(o,a,c,l,i,r);return o.free(),a.free(),c.free(),l.free(),h.free(),d}castRayAndGetNormal(e,t,n,i,r){let o=We.intoRaw(t),a=Un.intoRaw(n),c=We.intoRaw(e.origin),l=We.intoRaw(e.dir),h=this.intoRaw(),d=Al.fromRaw(h.castRayAndGetNormal(o,a,c,l,i,r));return o.free(),a.free(),c.free(),l.free(),h.free(),d}}var Rt;(function(s){s[s.Ball=0]="Ball",s[s.Cuboid=1]="Cuboid",s[s.Capsule=2]="Capsule",s[s.Segment=3]="Segment",s[s.Polyline=4]="Polyline",s[s.Triangle=5]="Triangle",s[s.TriMesh=6]="TriMesh",s[s.HeightField=7]="HeightField",s[s.ConvexPolyhedron=9]="ConvexPolyhedron",s[s.Cylinder=10]="Cylinder",s[s.Cone=11]="Cone",s[s.RoundCuboid=12]="RoundCuboid",s[s.RoundTriangle=13]="RoundTriangle",s[s.RoundCylinder=14]="RoundCylinder",s[s.RoundCone=15]="RoundCone",s[s.RoundConvexPolyhedron=16]="RoundConvexPolyhedron",s[s.HalfSpace=17]="HalfSpace",s[s.Voxels=18]="Voxels"})(Rt||(Rt={}));var Dd;(function(s){s[s.FIX_INTERNAL_EDGES=1]="FIX_INTERNAL_EDGES"})(Dd||(Dd={}));var Id;(function(s){s[s.DELETE_BAD_TOPOLOGY_TRIANGLES=4]="DELETE_BAD_TOPOLOGY_TRIANGLES",s[s.ORIENTED=8]="ORIENTED",s[s.MERGE_DUPLICATE_VERTICES=16]="MERGE_DUPLICATE_VERTICES",s[s.DELETE_DEGENERATE_TRIANGLES=32]="DELETE_DEGENERATE_TRIANGLES",s[s.DELETE_DUPLICATE_TRIANGLES=64]="DELETE_DUPLICATE_TRIANGLES",s[s.FIX_INTERNAL_EDGES=144]="FIX_INTERNAL_EDGES"})(Id||(Id={}));class tC extends jt{constructor(e){super(),this.type=Rt.Ball,this.radius=e}intoRaw(){return Ye.ball(this.radius)}}class nC extends jt{constructor(e){super(),this.type=Rt.HalfSpace,this.normal=e}intoRaw(){let e=We.intoRaw(this.normal),t=Ye.halfspace(e);return e.free(),t}}class iC extends jt{constructor(e,t,n){super(),this.type=Rt.Cuboid,this.halfExtents=We.new(e,t,n)}intoRaw(){return Ye.cuboid(this.halfExtents.x,this.halfExtents.y,this.halfExtents.z)}}class rC extends jt{constructor(e,t,n,i){super(),this.type=Rt.RoundCuboid,this.halfExtents=We.new(e,t,n),this.borderRadius=i}intoRaw(){return Ye.roundCuboid(this.halfExtents.x,this.halfExtents.y,this.halfExtents.z,this.borderRadius)}}class sC extends jt{constructor(e,t){super(),this.type=Rt.Capsule,this.halfHeight=e,this.radius=t}intoRaw(){return Ye.capsule(this.halfHeight,this.radius)}}class oC extends jt{constructor(e,t){super(),this.type=Rt.Segment,this.a=e,this.b=t}intoRaw(){let e=We.intoRaw(this.a),t=We.intoRaw(this.b),n=Ye.segment(e,t);return e.free(),t.free(),n}}class aC extends jt{constructor(e,t,n){super(),this.type=Rt.Triangle,this.a=e,this.b=t,this.c=n}intoRaw(){let e=We.intoRaw(this.a),t=We.intoRaw(this.b),n=We.intoRaw(this.c),i=Ye.triangle(e,t,n);return e.free(),t.free(),n.free(),i}}class cC extends jt{constructor(e,t,n,i){super(),this.type=Rt.RoundTriangle,this.a=e,this.b=t,this.c=n,this.borderRadius=i}intoRaw(){let e=We.intoRaw(this.a),t=We.intoRaw(this.b),n=We.intoRaw(this.c),i=Ye.roundTriangle(e,t,n,this.borderRadius);return e.free(),t.free(),n.free(),i}}class lC extends jt{constructor(e,t){super(),this.type=Rt.Polyline,this.vertices=e,this.indices=t??new Uint32Array(0)}intoRaw(){return Ye.polyline(this.vertices,this.indices)}}class hC extends jt{constructor(e,t){super(),this.type=Rt.Voxels,this.data=e,this.voxelSize=t}intoRaw(){let e=We.intoRaw(this.voxelSize),t;return this.data instanceof Int32Array?t=Ye.voxels(e,this.data):t=Ye.voxelsFromPoints(e,this.data),e.free(),t}}class dC extends jt{constructor(e,t,n){super(),this.type=Rt.TriMesh,this.vertices=e,this.indices=t,this.flags=n}intoRaw(){return Ye.trimesh(this.vertices,this.indices,this.flags)}}class uC extends jt{constructor(e,t){super(),this.type=Rt.ConvexPolyhedron,this.vertices=e,this.indices=t}intoRaw(){return this.indices?Ye.convexMesh(this.vertices,this.indices):Ye.convexHull(this.vertices)}}class fC extends jt{constructor(e,t,n){super(),this.type=Rt.RoundConvexPolyhedron,this.vertices=e,this.indices=t,this.borderRadius=n}intoRaw(){return this.indices?Ye.roundConvexMesh(this.vertices,this.indices,this.borderRadius):Ye.roundConvexHull(this.vertices,this.borderRadius)}}class pC extends jt{constructor(e,t,n,i,r){super(),this.type=Rt.HeightField,this.nrows=e,this.ncols=t,this.heights=n,this.scale=i,this.flags=r}intoRaw(){let e=We.intoRaw(this.scale),t=Ye.heightfield(this.nrows,this.ncols,this.heights,e,this.flags);return e.free(),t}}class _C extends jt{constructor(e,t){super(),this.type=Rt.Cylinder,this.halfHeight=e,this.radius=t}intoRaw(){return Ye.cylinder(this.halfHeight,this.radius)}}class mC extends jt{constructor(e,t,n){super(),this.type=Rt.RoundCylinder,this.borderRadius=n,this.halfHeight=e,this.radius=t}intoRaw(){return Ye.roundCylinder(this.halfHeight,this.radius,this.borderRadius)}}class gC extends jt{constructor(e,t){super(),this.type=Rt.Cone,this.halfHeight=e,this.radius=t}intoRaw(){return Ye.cone(this.halfHeight,this.radius)}}class wC extends jt{constructor(e,t,n){super(),this.type=Rt.RoundCone,this.halfHeight=e,this.radius=t,this.borderRadius=n}intoRaw(){return Ye.roundCone(this.halfHeight,this.radius,this.borderRadius)}}const vC=ol(()=>import("./rapier.mvSWxE-0.js"),__vite__mapDeps([0,1,2,3])),as={CONTROLLER_OFFSET:.01,DEFAULT_STEP_HEIGHT:.5,DEFAULT_STEP_WIDTH:.2,DEFAULT_SNAP_DISTANCE:.5,PLANE_THICKNESS:.1};class bC extends jo{world;RAPIER;isInitialized=!1;bodies=new Map;colliders=new Map;kinematicControllers=new Map;debugWireframes=new Map;debugMaterial=new vl({color:65280,linewidth:2});async init(e){this.RAPIER=await vC;const t={x:0,y:-9.81,z:0};this.world=new this.RAPIER.World(t),this.isInitialized=!0,e.cleanupRegistry.registerDisposable(this.debugMaterial),this.addEventListeners(e),console.log("✅ [PhysicsService] Initialized")}addEventListeners(e){const t=tn(),n=gs(()=>t.debug.showPhysicsDebug,i=>{this.setDebugWireframesVisible(i),console.log(`[PhysicsService] Debug wireframes ${i?"shown":"hidden"}`)},{immediate:!0});e.cleanupRegistry.registerWatcher(n)}update(e){this.isInitialized&&(this.world.step(),this.debugWireframes.size>0&&this.updateDebugWireframes())}async destroy(){this.kinematicControllers.forEach(e=>this.world.removeCharacterController(e)),this.colliders.clear(),this.bodies.clear(),this.kinematicControllers.clear(),this.world&&this.world.free(),this.isInitialized=!1,console.log("🧹 [PhysicsService] Destroyed")}isReady(){return this.isInitialized}registerStatic(e,t,n){this.assertReady();const i=this.toVector3(t.position??[0,0,0]),r=this.toVector3(t.rotation??[0,0,0]),o=this.RAPIER.RigidBodyDesc.fixed().setTranslation(i.x,i.y,i.z).setRotation(this.eulerToQuaternion(r)),a=this.createColliderDesc(t),c=this.shouldShowDebug(n?.showDebug);this.createAndRegisterBody(e,o,a,null,c)}registerKinematic(e,t){this.assertReady();const n=this.toVector3(t.position??[0,0,0]),i=this.toVector3(t.rotation??[0,0,0]),r=this.RAPIER.RigidBodyDesc.kinematicPositionBased().setTranslation(n.x,n.y,n.z).setRotation(this.eulerToQuaternion(i)),o=this.world.createRigidBody(r),a=this.createColliderDesc(t),c=this.world.createCollider(a,o);t.controller&&this.createKinematicController(t,e,o,c)}createKinematicController(e,t,n,i){const r=this.createController(e);this.bodies.set(t,n),this.colliders.set(t,i),this.kinematicControllers.set(t,r)}registerStaticFromMesh(e,t,n){this.assertReady();const{position:i,rotation:r,geometry:o,scale:a}=this.extractMeshProperties(t),c=this.createColliderFromGeometry(o,a),l=this.createStaticBodyDesc(i,r,o),h=this.shouldShowDebug(n?.showDebug);this.createAndRegisterBody(e,l,c,null,h)}registerKinematicFromMesh(e,t,n,i){this.assertReady();const{geometry:r,scale:o}=this.extractMeshProperties(t),a=this.toVector3(n),c=this.createColliderFromGeometry(r,o),l=this.RAPIER.RigidBodyDesc.kinematicPositionBased().setTranslation(a.x,a.y,a.z),h=this.createController(i),d=this.shouldShowDebug(i?.showDebug);this.createAndRegisterBody(e,l,c,h,d)}registerInstancedStatic(e,t,n){this.assertReady();const i=[],{geometry:r}=this.extractMeshProperties(t),o=new ft,a=new q,c=new yi,l=new q,h=this.shouldShowDebug(n?.showDebug);for(let d=0;d<t.count;d++){t.getMatrixAt(d,o),o.decompose(a,c,l);const u=this.createColliderFromGeometry(r,{x:l.x,y:l.y,z:l.z}),f=this.RAPIER.RigidBodyDesc.fixed().setTranslation(a.x,a.y,a.z).setRotation({x:c.x,y:c.y,z:c.z,w:c.w}),g=`${e}-${d}`;this.createAndRegisterBody(g,f,u,null,h),i.push(g)}return i}remove(e){const t=this.kinematicControllers.get(e);t&&(this.world.removeCharacterController(t),this.kinematicControllers.delete(e));const n=this.bodies.get(e);n&&(this.world.removeRigidBody(n),this.bodies.delete(e));const i=this.debugWireframes.get(e);i&&(this.context?.scene.remove(i),this.debugWireframes.delete(e)),this.colliders.delete(e),console.log(`[PhysicsService] Removed body: ${e}`)}moveKinematic(e,t){const n=this.bodies.get(e),i=this.kinematicControllers.get(e),r=this.colliders.get(e);if(!n||!i||!r)return console.warn(`[PhysicsService] Kinematic body not found: ${e}`),{x:0,y:0,z:0,isGrounded:!1};const o=n.translation(),a=this.toVector3(t),c=new this.RAPIER.Vector3(a.x,a.y,a.z);i.computeColliderMovement(r,c);const l=i.computedMovement(),h=i.computedGrounded(),d={x:o.x+l.x,y:o.y+l.y,z:o.z+l.z};return n.setNextKinematicTranslation(d),{x:d.x,y:d.y,z:d.z,isGrounded:h}}getPosition(e){const t=this.bodies.get(e);if(!t)return null;const n=t.translation();return{x:n.x,y:n.y,z:n.z}}isGrounded(e){return this.kinematicControllers.get(e)?.computedGrounded()??!1}setPosition(e,t){const n=this.bodies.get(e);if(!n){console.warn(`[PhysicsService] Body not found: ${e}`);return}const i=this.toVector3(t);n.setTranslation({x:i.x,y:i.y,z:i.z},!0)}setRotation(e,t){const n=this.bodies.get(e);if(!n){console.warn(`[PhysicsService] Body not found: ${e}`);return}const i=this.toVector3(t);n.setRotation(this.eulerToQuaternion(i),!0)}updateStaticBodyPosition(e,t){this.setPosition(e,t)}assertReady(){if(!this.isInitialized)throw new Error("[PhysicsService] Physics not initialized. Call start() first.")}shouldShowDebug(e){return e!==!1}toVector3(e){return Array.isArray(e)?{x:e[0],y:e[1],z:e[2]}:e}createColliderDesc(e){switch(e.shape){case"cuboid":{const t=this.toVector3(e.size??[1,1,1]);return this.RAPIER.ColliderDesc.cuboid(t.x/2,t.y/2,t.z/2)}case"sphere":{const t=e.radius??1;return this.RAPIER.ColliderDesc.ball(t)}case"capsule":{const t=e.radius??.5,i=((e.height??2)-t*2)/2;return this.RAPIER.ColliderDesc.capsule(i,t)}case"cylinder":{const t=e.radius??.5,n=e.height??2;return this.RAPIER.ColliderDesc.cylinder(n/2,t)}default:throw new Error(`[PhysicsService] Unsupported shape: ${e.shape}`)}}createColliderFromGeometry(e,t){if(!e)return console.warn("[PhysicsService] No geometry found, using default box"),this.RAPIER.ColliderDesc.cuboid(.5,.5,.5);if(!this.isValidScale(t))return console.warn("[PhysicsService] Invalid scale detected:",t),this.RAPIER.ColliderDesc.cuboid(.5,.5,.5);if(e instanceof jn){const n=e.parameters;return this.RAPIER.ColliderDesc.cuboid(n.width*t.x/2,n.height*t.y/2,n.depth*t.z/2)}if(e instanceof Ms){const n=e.parameters,i=(t.x+t.y+t.z)/3;return this.RAPIER.ColliderDesc.ball(n.radius*i)}if(e instanceof Ur){const n=e.parameters,i=n.radius*t.x,o=((n.height+n.radius*2)*t.y-i*2)/2;return this.RAPIER.ColliderDesc.capsule(o,i)}if(e instanceof Lr){const n=e.parameters;let i,r;if(typeof n.radiusTop=="number"&&typeof n.radiusBottom=="number")i=n.radiusTop,r=n.radiusBottom;else if(typeof n.radius=="number")i=r=n.radius;else return console.error("[PhysicsService] CylinderGeometry missing radius parameters:",n),this.RAPIER.ColliderDesc.cuboid(.5,.5,.5);if(typeof n.height!="number")return console.error("[PhysicsService] CylinderGeometry missing height:",n),this.RAPIER.ColliderDesc.cuboid(.5,.5,.5);const o=(i+r)/2*t.x,a=n.height*t.y/2;return o<=0||a<=0||!isFinite(o)||!isFinite(a)?(console.error("[PhysicsService] Invalid cylinder dimensions after computation:",{avgRadius:o,halfHeight:a,scale:t}),this.RAPIER.ColliderDesc.cuboid(.5,.5,.5)):this.RAPIER.ColliderDesc.cylinder(a,o)}if(e instanceof Cs){const n=e.parameters;if(!n||typeof n.radius!="number"||typeof n.height!="number")return console.error("[PhysicsService] ConeGeometry missing valid parameters:",{params:n,hasParams:!!n,radius:n?.radius,height:n?.height}),this.RAPIER.ColliderDesc.cuboid(.5,.5,.5);const i=n.radius*t.x/2,r=n.height*t.y/2;return i<=0||r<=0||!isFinite(i)||!isFinite(r)?(console.error("[PhysicsService] Invalid cone dimensions after computation:",{radius:i,halfHeight:r,scale:t}),this.RAPIER.ColliderDesc.cuboid(.5,.5,.5)):this.RAPIER.ColliderDesc.cylinder(r,i)}if(e instanceof On){const n=e.parameters;return this.RAPIER.ColliderDesc.cuboid(n.width*t.x/2,as.PLANE_THICKNESS*t.y,n.height*t.z/2)}return console.warn("[PhysicsService] Unsupported geometry type, using default box"),this.RAPIER.ColliderDesc.cuboid(.5,.5,.5)}isValidScale(e){return isFinite(e.x)&&isFinite(e.y)&&isFinite(e.z)&&e.x>0&&e.y>0&&e.z>0}extractMeshProperties(e){const t=e.getWorldPosition(new q),n=e.rotation,i=e.scale;let r=null;return"geometry"in e&&(r=e.geometry),{position:{x:t.x,y:t.y,z:t.z},rotation:{x:n.x,y:n.y,z:n.z},scale:{x:i.x,y:i.y,z:i.z},geometry:r}}createStaticBodyDesc(e,t,n){const i=this.RAPIER.RigidBodyDesc.fixed().setTranslation(e.x,e.y,e.z);return!(n instanceof On)&&i.setRotation(this.eulerToQuaternion(t)),i}createController(e){const t=this.world.createCharacterController(e?.controllerOffset??as.CONTROLLER_OFFSET);if(e?.enableAutostep){const n=e.maxStepHeight??as.DEFAULT_STEP_HEIGHT,i=e.minStepWidth??as.DEFAULT_STEP_WIDTH;t.enableAutostep(n,i,!0)}if(e?.enableSnapToGround){const n=e.snapToGroundDistance??as.DEFAULT_SNAP_DISTANCE;t.enableSnapToGround(n)}return t.setApplyImpulsesToDynamicBodies(!0),t}createAndRegisterBody(e,t,n,i,r){const o=this.world.createRigidBody(t),a=this.world.createCollider(n,o);this.bodies.set(e,o),this.colliders.set(e,a),i&&this.kinematicControllers.set(e,i),r&&this.context&&this.createDebugWireframe(e,a,o)}createDebugWireframe(e,t,n){const i=t.shapeType();let r;if(i===Rt.Cuboid){const u=t.shape.halfExtents;r=new jn(u.x*2,u.y*2,u.z*2)}else if(i===Rt.Ball){const u=t.shape.radius;r=new Ms(u,16,12)}else if(i===Rt.Capsule){const d=t.shape,u=d.radius,f=d.halfHeight;r=new Ur(u,f*2,8,16)}else if(i===Rt.Cylinder){const d=t.shape,u=d.radius,f=d.halfHeight;r=new Lr(u,u,f*2,16)}else console.warn(`[PhysicsService] Unknown shape type ${i} for ${e}, using default box`),r=new jn(1,1,1);const o=new n_(r),a=new Su(o,this.debugMaterial),c=n.translation(),l=n.rotation();a.position.set(c.x,c.y,c.z),a.quaternion.set(l.x,l.y,l.z,l.w);const h=tn();a.visible=h.debug.showPhysicsDebug,this.context.cleanupRegistry.registerDisposable(r),this.context.cleanupRegistry.registerDisposable(o),this.context.cleanupRegistry.registerObject(a),this.context.scene.add(a),this.debugWireframes.set(e,a)}setDebugWireframesVisible(e){this.debugWireframes.forEach(t=>{t.visible=e})}updateDebugWireframes(){this.debugWireframes.forEach((e,t)=>{const n=this.bodies.get(t);if(n){const i=n.translation(),r=n.rotation();e.position.set(i.x,i.y,i.z),e.quaternion.set(r.x,r.y,r.z,r.w)}})}eulerToQuaternion(e){const{x:t,y:n,z:i}=e,r=Math.cos(t/2),o=Math.cos(n/2),a=Math.cos(i/2),c=Math.sin(t/2),l=Math.sin(n/2),h=Math.sin(i/2);return{x:c*o*a+r*l*h,y:r*l*a-c*o*h,z:r*o*h+c*l*a,w:r*o*a-c*l*h}}}function yC(){var s=Object.create(null);function e(i,r){var o=i.id,a=i.name,c=i.dependencies;c===void 0&&(c=[]);var l=i.init;l===void 0&&(l=function(){});var h=i.getTransferables;if(h===void 0&&(h=null),!s[o])try{c=c.map(function(u){return u&&u.isWorkerModule&&(e(u,function(f){if(f instanceof Error)throw f}),u=s[u.id].value),u}),l=n("<"+a+">.init",l),h&&(h=n("<"+a+">.getTransferables",h));var d=null;typeof l=="function"?d=l.apply(void 0,c):console.error("worker module init function failed to rehydrate"),s[o]={id:o,value:d,getTransferables:h},r(d)}catch(u){u&&u.noLog||console.error(u),r(u)}}function t(i,r){var o,a=i.id,c=i.args;(!s[a]||typeof s[a].value!="function")&&r(new Error("Worker module "+a+": not found or its 'init' did not return a function"));try{var l=(o=s[a]).value.apply(o,c);l&&typeof l.then=="function"?l.then(h,function(d){return r(d instanceof Error?d:new Error(""+d))}):h(l)}catch(d){r(d)}function h(d){try{var u=s[a].getTransferables&&s[a].getTransferables(d);(!u||!Array.isArray(u)||!u.length)&&(u=void 0),r(d,u)}catch(f){console.error(f),r(f)}}}function n(i,r){var o=void 0;self.troikaDefine=function(c){return o=c};var a=URL.createObjectURL(new Blob(["/** "+i.replace(/\*/g,"")+` **/

troikaDefine(
`+r+`
)`],{type:"application/javascript"}));try{importScripts(a)}catch(c){console.error(c)}return URL.revokeObjectURL(a),delete self.troikaDefine,o}self.addEventListener("message",function(i){var r=i.data,o=r.messageId,a=r.action,c=r.data;try{a==="registerModule"&&e(c,function(l){l instanceof Error?postMessage({messageId:o,success:!1,error:l.message}):postMessage({messageId:o,success:!0,result:{isCallable:typeof l=="function"}})}),a==="callModule"&&t(c,function(l,h){l instanceof Error?postMessage({messageId:o,success:!1,error:l.message}):postMessage({messageId:o,success:!0,result:l},h||void 0)})}catch(l){postMessage({messageId:o,success:!1,error:l.stack})}})}function xC(s){var e=function(){for(var t=[],n=arguments.length;n--;)t[n]=arguments[n];return e._getInitResult().then(function(i){if(typeof i=="function")return i.apply(void 0,t);throw new Error("Worker module function was called but `init` did not return a callable function")})};return e._getInitResult=function(){var t=s.dependencies,n=s.init;t=Array.isArray(t)?t.map(function(r){return r&&(r=r.onMainThread||r,r._getInitResult&&(r=r._getInitResult())),r}):[];var i=Promise.all(t).then(function(r){return n.apply(null,r)});return e._getInitResult=function(){return i},i},e}var qu=function(){var s=!1;if(typeof window<"u"&&typeof window.document<"u")try{var e=new Worker(URL.createObjectURL(new Blob([""],{type:"application/javascript"})));e.terminate(),s=!0}catch(t){console.log("Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: ["+t.message+"]")}return qu=function(){return s},s},SC=0,MC=0,nc=!1,fs=Object.create(null),ps=Object.create(null),tl=Object.create(null);function zr(s){if((!s||typeof s.init!="function")&&!nc)throw new Error("requires `options.init` function");var e=s.dependencies,t=s.init,n=s.getTransferables,i=s.workerId,r=xC(s);i==null&&(i="#default");var o="workerModule"+ ++SC,a=s.name||o,c=null;e=e&&e.map(function(h){return typeof h=="function"&&!h.workerModuleData&&(nc=!0,h=zr({workerId:i,name:"<"+a+"> function dependency: "+h.name,init:`function(){return (
`+Co(h)+`
)}`}),nc=!1),h&&h.workerModuleData&&(h=h.workerModuleData),h});function l(){for(var h=[],d=arguments.length;d--;)h[d]=arguments[d];if(!qu())return r.apply(void 0,h);if(!c){c=Ud(i,"registerModule",l.workerModuleData);var u=function(){c=null,ps[i].delete(u)};(ps[i]||(ps[i]=new Set)).add(u)}return c.then(function(f){var g=f.isCallable;if(g)return Ud(i,"callModule",{id:o,args:h});throw new Error("Worker module function was called but `init` did not return a callable function")})}return l.workerModuleData={isWorkerModule:!0,id:o,name:a,dependencies:e,init:Co(t),getTransferables:n&&Co(n)},l.onMainThread=r,l}function EC(s){ps[s]&&ps[s].forEach(function(e){e()}),fs[s]&&(fs[s].terminate(),delete fs[s])}function Co(s){var e=s.toString();return!/^function/.test(e)&&/^\w+\s*\(/.test(e)&&(e="function "+e),e}function TC(s){var e=fs[s];if(!e){var t=Co(yC);e=fs[s]=new Worker(URL.createObjectURL(new Blob(["/** Worker Module Bootstrap: "+s.replace(/\*/g,"")+` **/

;(`+t+")()"],{type:"application/javascript"}))),e.onmessage=function(n){var i=n.data,r=i.messageId,o=tl[r];if(!o)throw new Error("WorkerModule response with empty or unknown messageId");delete tl[r],o(i)}}return e}function Ud(s,e,t){return new Promise(function(n,i){var r=++MC;tl[r]=function(o){o.success?n(o.result):i(new Error("Error in worker "+e+" call: "+o.error))},TC(s).postMessage({messageId:r,action:e,data:t})})}function Yu(){var s=function(e){function t(Q,$,k,Y,ie,se,ee,W){var V=1-ee;W.x=V*V*Q+2*V*ee*k+ee*ee*ie,W.y=V*V*$+2*V*ee*Y+ee*ee*se}function n(Q,$,k,Y,ie,se,ee,W,V,te){var ge=1-V;te.x=ge*ge*ge*Q+3*ge*ge*V*k+3*ge*V*V*ie+V*V*V*ee,te.y=ge*ge*ge*$+3*ge*ge*V*Y+3*ge*V*V*se+V*V*V*W}function i(Q,$){for(var k=/([MLQCZ])([^MLQCZ]*)/g,Y,ie,se,ee,W;Y=k.exec(Q);){var V=Y[2].replace(/^\s*|\s*$/g,"").split(/[,\s]+/).map(function(te){return parseFloat(te)});switch(Y[1]){case"M":ee=ie=V[0],W=se=V[1];break;case"L":(V[0]!==ee||V[1]!==W)&&$("L",ee,W,ee=V[0],W=V[1]);break;case"Q":{$("Q",ee,W,ee=V[2],W=V[3],V[0],V[1]);break}case"C":{$("C",ee,W,ee=V[4],W=V[5],V[0],V[1],V[2],V[3]);break}case"Z":(ee!==ie||W!==se)&&$("L",ee,W,ie,se);break}}}function r(Q,$,k){k===void 0&&(k=16);var Y={x:0,y:0};i(Q,function(ie,se,ee,W,V,te,ge,we,me){switch(ie){case"L":$(se,ee,W,V);break;case"Q":{for(var be=se,L=ee,Oe=1;Oe<k;Oe++)t(se,ee,te,ge,W,V,Oe/(k-1),Y),$(be,L,Y.x,Y.y),be=Y.x,L=Y.y;break}case"C":{for(var Ee=se,Te=ee,ve=1;ve<k;ve++)n(se,ee,te,ge,we,me,W,V,ve/(k-1),Y),$(Ee,Te,Y.x,Y.y),Ee=Y.x,Te=Y.y;break}}})}var o="precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",a="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",c=new WeakMap,l={premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!1,depth:!1};function h(Q,$){var k=Q.getContext?Q.getContext("webgl",l):Q,Y=c.get(k);if(!Y){let ge=function(Ee){var Te=se[Ee];if(!Te&&(Te=se[Ee]=k.getExtension(Ee),!Te))throw new Error(Ee+" not supported");return Te},we=function(Ee,Te){var ve=k.createShader(Te);return k.shaderSource(ve,Ee),k.compileShader(ve),ve},me=function(Ee,Te,ve,Se){if(!ee[Ee]){var _e={},Re={},fe=k.createProgram();k.attachShader(fe,we(Te,k.VERTEX_SHADER)),k.attachShader(fe,we(ve,k.FRAGMENT_SHADER)),k.linkProgram(fe),ee[Ee]={program:fe,transaction:function(P){k.useProgram(fe),P({setUniform:function(B,re){for(var ne=[],J=arguments.length-2;J-- >0;)ne[J]=arguments[J+2];var Me=Re[re]||(Re[re]=k.getUniformLocation(fe,re));k["uniform"+B].apply(k,[Me].concat(ne))},setAttribute:function(B,re,ne,J,Me){var ue=_e[B];ue||(ue=_e[B]={buf:k.createBuffer(),loc:k.getAttribLocation(fe,B),data:null}),k.bindBuffer(k.ARRAY_BUFFER,ue.buf),k.vertexAttribPointer(ue.loc,re,k.FLOAT,!1,0,0),k.enableVertexAttribArray(ue.loc),ie?k.vertexAttribDivisor(ue.loc,J):ge("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(ue.loc,J),Me!==ue.data&&(k.bufferData(k.ARRAY_BUFFER,Me,ne),ue.data=Me)}})}}}ee[Ee].transaction(Se)},be=function(Ee,Te){V++;try{k.activeTexture(k.TEXTURE0+V);var ve=W[Ee];ve||(ve=W[Ee]=k.createTexture(),k.bindTexture(k.TEXTURE_2D,ve),k.texParameteri(k.TEXTURE_2D,k.TEXTURE_MIN_FILTER,k.NEAREST),k.texParameteri(k.TEXTURE_2D,k.TEXTURE_MAG_FILTER,k.NEAREST)),k.bindTexture(k.TEXTURE_2D,ve),Te(ve,V)}finally{V--}},L=function(Ee,Te,ve){var Se=k.createFramebuffer();te.push(Se),k.bindFramebuffer(k.FRAMEBUFFER,Se),k.activeTexture(k.TEXTURE0+Te),k.bindTexture(k.TEXTURE_2D,Ee),k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_2D,Ee,0);try{ve(Se)}finally{k.deleteFramebuffer(Se),k.bindFramebuffer(k.FRAMEBUFFER,te[--te.length-1]||null)}},Oe=function(){se={},ee={},W={},V=-1,te.length=0};var ie=typeof WebGL2RenderingContext<"u"&&k instanceof WebGL2RenderingContext,se={},ee={},W={},V=-1,te=[];k.canvas.addEventListener("webglcontextlost",function(Ee){Oe(),Ee.preventDefault()},!1),c.set(k,Y={gl:k,isWebGL2:ie,getExtension:ge,withProgram:me,withTexture:be,withTextureFramebuffer:L,handleContextLoss:Oe})}$(Y)}function d(Q,$,k,Y,ie,se,ee,W){ee===void 0&&(ee=15),W===void 0&&(W=null),h(Q,function(V){var te=V.gl,ge=V.withProgram,we=V.withTexture;we("copy",function(me,be){te.texImage2D(te.TEXTURE_2D,0,te.RGBA,ie,se,0,te.RGBA,te.UNSIGNED_BYTE,$),ge("copy",o,a,function(L){var Oe=L.setUniform,Ee=L.setAttribute;Ee("aUV",2,te.STATIC_DRAW,0,new Float32Array([0,0,2,0,0,2])),Oe("1i","image",be),te.bindFramebuffer(te.FRAMEBUFFER,W||null),te.disable(te.BLEND),te.colorMask(ee&8,ee&4,ee&2,ee&1),te.viewport(k,Y,ie,se),te.scissor(k,Y,ie,se),te.drawArrays(te.TRIANGLES,0,3)})})})}function u(Q,$,k){var Y=Q.width,ie=Q.height;h(Q,function(se){var ee=se.gl,W=new Uint8Array(Y*ie*4);ee.readPixels(0,0,Y,ie,ee.RGBA,ee.UNSIGNED_BYTE,W),Q.width=$,Q.height=k,d(ee,W,0,0,Y,ie)})}var f=Object.freeze({__proto__:null,withWebGLContext:h,renderImageData:d,resizeWebGLCanvasWithoutClearing:u});function g(Q,$,k,Y,ie,se){se===void 0&&(se=1);var ee=new Uint8Array(Q*$),W=Y[2]-Y[0],V=Y[3]-Y[1],te=[];r(k,function(Ee,Te,ve,Se){te.push({x1:Ee,y1:Te,x2:ve,y2:Se,minX:Math.min(Ee,ve),minY:Math.min(Te,Se),maxX:Math.max(Ee,ve),maxY:Math.max(Te,Se)})}),te.sort(function(Ee,Te){return Ee.maxX-Te.maxX});for(var ge=0;ge<Q;ge++)for(var we=0;we<$;we++){var me=L(Y[0]+W*(ge+.5)/Q,Y[1]+V*(we+.5)/$),be=Math.pow(1-Math.abs(me)/ie,se)/2;me<0&&(be=1-be),be=Math.max(0,Math.min(255,Math.round(be*255))),ee[we*Q+ge]=be}return ee;function L(Ee,Te){for(var ve=1/0,Se=1/0,_e=te.length;_e--;){var Re=te[_e];if(Re.maxX+Se<=Ee)break;if(Ee+Se>Re.minX&&Te-Se<Re.maxY&&Te+Se>Re.minY){var fe=p(Ee,Te,Re.x1,Re.y1,Re.x2,Re.y2);fe<ve&&(ve=fe,Se=Math.sqrt(ve))}}return Oe(Ee,Te)&&(Se=-Se),Se}function Oe(Ee,Te){for(var ve=0,Se=te.length;Se--;){var _e=te[Se];if(_e.maxX<=Ee)break;var Re=_e.y1>Te!=_e.y2>Te&&Ee<(_e.x2-_e.x1)*(Te-_e.y1)/(_e.y2-_e.y1)+_e.x1;Re&&(ve+=_e.y1<_e.y2?1:-1)}return ve!==0}}function v(Q,$,k,Y,ie,se,ee,W,V,te){se===void 0&&(se=1),W===void 0&&(W=0),V===void 0&&(V=0),te===void 0&&(te=0),_(Q,$,k,Y,ie,se,ee,null,W,V,te)}function _(Q,$,k,Y,ie,se,ee,W,V,te,ge){se===void 0&&(se=1),V===void 0&&(V=0),te===void 0&&(te=0),ge===void 0&&(ge=0);for(var we=g(Q,$,k,Y,ie,se),me=new Uint8Array(we.length*4),be=0;be<we.length;be++)me[be*4+ge]=we[be];d(ee,me,V,te,Q,$,1<<3-ge,W)}function p(Q,$,k,Y,ie,se){var ee=ie-k,W=se-Y,V=ee*ee+W*W,te=V?Math.max(0,Math.min(1,((Q-k)*ee+($-Y)*W)/V)):0,ge=Q-(k+te*ee),we=$-(Y+te*W);return ge*ge+we*we}var M=Object.freeze({__proto__:null,generate:g,generateIntoCanvas:v,generateIntoFramebuffer:_}),E="precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",b="precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",R="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",T=new Float32Array([0,0,2,0,0,2]),A=null,I=!1,x={},y=new WeakMap;function U(Q){if(!I&&!X(Q))throw new Error("WebGL generation not supported")}function D(Q,$,k,Y,ie,se,ee){if(se===void 0&&(se=1),ee===void 0&&(ee=null),!ee&&(ee=A,!ee)){var W=typeof OffscreenCanvas=="function"?new OffscreenCanvas(1,1):typeof document<"u"?document.createElement("canvas"):null;if(!W)throw new Error("OffscreenCanvas or DOM canvas not supported");ee=A=W.getContext("webgl",{depth:!1})}U(ee);var V=new Uint8Array(Q*$*4);h(ee,function(me){var be=me.gl,L=me.withTexture,Oe=me.withTextureFramebuffer;L("readable",function(Ee,Te){be.texImage2D(be.TEXTURE_2D,0,be.RGBA,Q,$,0,be.RGBA,be.UNSIGNED_BYTE,null),Oe(Ee,Te,function(ve){N(Q,$,k,Y,ie,se,be,ve,0,0,0),be.readPixels(0,0,Q,$,be.RGBA,be.UNSIGNED_BYTE,V)})})});for(var te=new Uint8Array(Q*$),ge=0,we=0;ge<V.length;ge+=4)te[we++]=V[ge];return te}function F(Q,$,k,Y,ie,se,ee,W,V,te){se===void 0&&(se=1),W===void 0&&(W=0),V===void 0&&(V=0),te===void 0&&(te=0),N(Q,$,k,Y,ie,se,ee,null,W,V,te)}function N(Q,$,k,Y,ie,se,ee,W,V,te,ge){se===void 0&&(se=1),V===void 0&&(V=0),te===void 0&&(te=0),ge===void 0&&(ge=0),U(ee);var we=[];r(k,function(me,be,L,Oe){we.push(me,be,L,Oe)}),we=new Float32Array(we),h(ee,function(me){var be=me.gl,L=me.isWebGL2,Oe=me.getExtension,Ee=me.withProgram,Te=me.withTexture,ve=me.withTextureFramebuffer,Se=me.handleContextLoss;if(Te("rawDistances",function(_e,Re){(Q!==_e._lastWidth||$!==_e._lastHeight)&&be.texImage2D(be.TEXTURE_2D,0,be.RGBA,_e._lastWidth=Q,_e._lastHeight=$,0,be.RGBA,be.UNSIGNED_BYTE,null),Ee("main",E,b,function(fe){var Ve=fe.setAttribute,P=fe.setUniform,S=!L&&Oe("ANGLE_instanced_arrays"),B=!L&&Oe("EXT_blend_minmax");Ve("aUV",2,be.STATIC_DRAW,0,T),Ve("aLineSegment",4,be.DYNAMIC_DRAW,1,we),P.apply(void 0,["4f","uGlyphBounds"].concat(Y)),P("1f","uMaxDistance",ie),P("1f","uExponent",se),ve(_e,Re,function(re){be.enable(be.BLEND),be.colorMask(!0,!0,!0,!0),be.viewport(0,0,Q,$),be.scissor(0,0,Q,$),be.blendFunc(be.ONE,be.ONE),be.blendEquationSeparate(be.FUNC_ADD,L?be.MAX:B.MAX_EXT),be.clear(be.COLOR_BUFFER_BIT),L?be.drawArraysInstanced(be.TRIANGLES,0,3,we.length/4):S.drawArraysInstancedANGLE(be.TRIANGLES,0,3,we.length/4)})}),Ee("post",o,R,function(fe){fe.setAttribute("aUV",2,be.STATIC_DRAW,0,T),fe.setUniform("1i","tex",Re),be.bindFramebuffer(be.FRAMEBUFFER,W),be.disable(be.BLEND),be.colorMask(ge===0,ge===1,ge===2,ge===3),be.viewport(V,te,Q,$),be.scissor(V,te,Q,$),be.drawArrays(be.TRIANGLES,0,3)})}),be.isContextLost())throw Se(),new Error("webgl context lost")})}function X(Q){var $=!Q||Q===A?x:Q.canvas||Q,k=y.get($);if(k===void 0){I=!0;var Y=null;try{var ie=[97,106,97,61,99,137,118,80,80,118,137,99,61,97,106,97],se=D(4,4,"M8,8L16,8L24,24L16,24Z",[0,0,32,32],24,1,Q);k=se&&ie.length===se.length&&se.every(function(ee,W){return ee===ie[W]}),k||(Y="bad trial run results",console.info(ie,se))}catch(ee){k=!1,Y=ee.message}Y&&console.warn("WebGL SDF generation not supported:",Y),I=!1,y.set($,k)}return k}var H=Object.freeze({__proto__:null,generate:D,generateIntoCanvas:F,generateIntoFramebuffer:N,isSupported:X});function oe(Q,$,k,Y,ie,se){ie===void 0&&(ie=Math.max(Y[2]-Y[0],Y[3]-Y[1])/2),se===void 0&&(se=1);try{return D.apply(H,arguments)}catch(ee){return console.info("WebGL SDF generation failed, falling back to JS",ee),g.apply(M,arguments)}}function K(Q,$,k,Y,ie,se,ee,W,V,te){ie===void 0&&(ie=Math.max(Y[2]-Y[0],Y[3]-Y[1])/2),se===void 0&&(se=1),W===void 0&&(W=0),V===void 0&&(V=0),te===void 0&&(te=0);try{return F.apply(H,arguments)}catch(ge){return console.info("WebGL SDF generation failed, falling back to JS",ge),v.apply(M,arguments)}}return e.forEachPathCommand=i,e.generate=oe,e.generateIntoCanvas=K,e.javascript=M,e.pathToLineSegments=r,e.webgl=H,e.webglUtils=f,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return s}function AC(){var s=function(e){var t={R:"13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",EN:"1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",ES:"17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",ET:"z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",AN:"16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",CS:"18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",B:"a,3,f+2,2v,690",S:"9,2,k",WS:"c,k,4f4,1vk+a,u,1j,335",ON:"x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",BN:"0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",NSM:"lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",AL:"16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",LRO:"6ct",RLO:"6cu",LRE:"6cq",RLE:"6cr",PDF:"6cs",LRI:"6ee",RLI:"6ef",FSI:"6eg",PDI:"6eh"},n={},i={};n.L=1,i[1]="L",Object.keys(t).forEach(function(Se,_e){n[Se]=1<<_e+1,i[n[Se]]=Se}),Object.freeze(n);var r=n.LRI|n.RLI|n.FSI,o=n.L|n.R|n.AL,a=n.B|n.S|n.WS|n.ON|n.FSI|n.LRI|n.RLI|n.PDI,c=n.BN|n.RLE|n.LRE|n.RLO|n.LRO|n.PDF,l=n.S|n.WS|n.B|r|n.PDI|c,h=null;function d(){if(!h){h=new Map;var Se=function(Re){if(t.hasOwnProperty(Re)){var fe=0;t[Re].split(",").forEach(function(Ve){var P=Ve.split("+"),S=P[0],B=P[1];S=parseInt(S,36),B=B?parseInt(B,36):0,h.set(fe+=S,n[Re]);for(var re=0;re<B;re++)h.set(++fe,n[Re])})}};for(var _e in t)Se(_e)}}function u(Se){return d(),h.get(Se.codePointAt(0))||n.L}function f(Se){return i[u(Se)]}var g={pairs:"14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",canonical:"6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye"};function v(Se,_e){var Re=36,fe=0,Ve=new Map,P=_e&&new Map,S;return Se.split(",").forEach(function B(re){if(re.indexOf("+")!==-1)for(var ne=+re;ne--;)B(S);else{S=re;var J=re.split(">"),Me=J[0],ue=J[1];Me=String.fromCodePoint(fe+=parseInt(Me,Re)),ue=String.fromCodePoint(fe+=parseInt(ue,Re)),Ve.set(Me,ue),_e&&P.set(ue,Me)}}),{map:Ve,reverseMap:P}}var _,p,M;function E(){if(!_){var Se=v(g.pairs,!0),_e=Se.map,Re=Se.reverseMap;_=_e,p=Re,M=v(g.canonical,!1).map}}function b(Se){return E(),_.get(Se)||null}function R(Se){return E(),p.get(Se)||null}function T(Se){return E(),M.get(Se)||null}var A=n.L,I=n.R,x=n.EN,y=n.ES,U=n.ET,D=n.AN,F=n.CS,N=n.B,X=n.S,H=n.ON,oe=n.BN,K=n.NSM,Q=n.AL,$=n.LRO,k=n.RLO,Y=n.LRE,ie=n.RLE,se=n.PDF,ee=n.LRI,W=n.RLI,V=n.FSI,te=n.PDI;function ge(Se,_e){for(var Re=125,fe=new Uint32Array(Se.length),Ve=0;Ve<Se.length;Ve++)fe[Ve]=u(Se[Ve]);var P=new Map;function S(cn,Cn){var ln=fe[cn];fe[cn]=Cn,P.set(ln,P.get(ln)-1),ln&a&&P.set(a,P.get(a)-1),P.set(Cn,(P.get(Cn)||0)+1),Cn&a&&P.set(a,(P.get(a)||0)+1)}for(var B=new Uint8Array(Se.length),re=new Map,ne=[],J=null,Me=0;Me<Se.length;Me++)J||ne.push(J={start:Me,end:Se.length-1,level:_e==="rtl"?1:_e==="ltr"?0:Wl(Me,!1)}),fe[Me]&N&&(J.end=Me,J=null);for(var ue=ie|Y|k|$|r|te|se|N,De=function(cn){return cn+(cn&1?1:2)},Ie=function(cn){return cn+(cn&1?2:1)},de=0;de<ne.length;de++){J=ne[de];var ye=[{_level:J.level,_override:0,_isolate:0}],Ae=void 0,Le=0,Ce=0,Xe=0;P.clear();for(var G=J.start;G<=J.end;G++){var he=fe[G];if(Ae=ye[ye.length-1],P.set(he,(P.get(he)||0)+1),he&a&&P.set(a,(P.get(a)||0)+1),he&ue)if(he&(ie|Y)){B[G]=Ae._level;var xe=(he===ie?Ie:De)(Ae._level);xe<=Re&&!Le&&!Ce?ye.push({_level:xe,_override:0,_isolate:0}):Le||Ce++}else if(he&(k|$)){B[G]=Ae._level;var ke=(he===k?Ie:De)(Ae._level);ke<=Re&&!Le&&!Ce?ye.push({_level:ke,_override:he&k?I:A,_isolate:0}):Le||Ce++}else if(he&r){he&V&&(he=Wl(G+1,!0)===1?W:ee),B[G]=Ae._level,Ae._override&&S(G,Ae._override);var pe=(he===W?Ie:De)(Ae._level);pe<=Re&&Le===0&&Ce===0?(Xe++,ye.push({_level:pe,_override:0,_isolate:1,_isolInitIndex:G})):Le++}else if(he&te){if(Le>0)Le--;else if(Xe>0){for(Ce=0;!ye[ye.length-1]._isolate;)ye.pop();var ae=ye[ye.length-1]._isolInitIndex;ae!=null&&(re.set(ae,G),re.set(G,ae)),ye.pop(),Xe--}Ae=ye[ye.length-1],B[G]=Ae._level,Ae._override&&S(G,Ae._override)}else he&se?(Le===0&&(Ce>0?Ce--:!Ae._isolate&&ye.length>1&&(ye.pop(),Ae=ye[ye.length-1])),B[G]=Ae._level):he&N&&(B[G]=J.level);else B[G]=Ae._level,Ae._override&&he!==oe&&S(G,Ae._override)}for(var Ue=[],Be=null,Ge=J.start;Ge<=J.end;Ge++){var qe=fe[Ge];if(!(qe&c)){var Mt=B[Ge],xt=qe&r,Ct=qe===te;Be&&Mt===Be._level?(Be._end=Ge,Be._endsWithIsolInit=xt):Ue.push(Be={_start:Ge,_end:Ge,_level:Mt,_startsWithPDI:Ct,_endsWithIsolInit:xt})}}for(var Ot=[],gn=0;gn<Ue.length;gn++){var wn=Ue[gn];if(!wn._startsWithPDI||wn._startsWithPDI&&!re.has(wn._start)){for(var An=[Be=wn],vn=void 0;Be&&Be._endsWithIsolInit&&(vn=re.get(Be._end))!=null;)for(var bn=gn+1;bn<Ue.length;bn++)if(Ue[bn]._start===vn){An.push(Be=Ue[bn]);break}for(var Ut=[],kn=0;kn<An.length;kn++)for(var Br=An[kn],Gr=Br._start;Gr<=Br._end;Gr++)Ut.push(Gr);for(var ea=B[Ut[0]],Ds=J.level,Zi=Ut[0]-1;Zi>=0;Zi--)if(!(fe[Zi]&c)){Ds=B[Zi];break}var Hr=Ut[Ut.length-1],ta=B[Hr],C=J.level;if(!(fe[Hr]&r)){for(var Z=Hr+1;Z<=J.end;Z++)if(!(fe[Z]&c)){C=B[Z];break}}Ot.push({_seqIndices:Ut,_sosType:Math.max(Ds,ea)%2?I:A,_eosType:Math.max(C,ta)%2?I:A})}}for(var ce=0;ce<Ot.length;ce++){var le=Ot[ce],z=le._seqIndices,Pe=le._sosType,Ne=le._eosType,He=B[z[0]]&1?I:A;if(P.get(K))for(var ze=0;ze<z.length;ze++){var Ze=z[ze];if(fe[Ze]&K){for(var $e=Pe,je=ze-1;je>=0;je--)if(!(fe[z[je]]&c)){$e=fe[z[je]];break}S(Ze,$e&(r|te)?H:$e)}}if(P.get(x))for(var tt=0;tt<z.length;tt++){var pt=z[tt];if(fe[pt]&x)for(var St=tt-1;St>=-1;St--){var gt=St===-1?Pe:fe[z[St]];if(gt&o){gt===Q&&S(pt,D);break}}}if(P.get(Q))for(var _t=0;_t<z.length;_t++){var Ke=z[_t];fe[Ke]&Q&&S(Ke,I)}if(P.get(y)||P.get(F))for(var mt=1;mt<z.length-1;mt++){var at=z[mt];if(fe[at]&(y|F)){for(var Lt=0,zn=0,Xt=mt-1;Xt>=0&&(Lt=fe[z[Xt]],!!(Lt&c));Xt--);for(var qn=mt+1;qn<z.length&&(zn=fe[z[qn]],!!(zn&c));qn++);Lt===zn&&(fe[at]===y?Lt===x:Lt&(x|D))&&S(at,Lt)}}if(P.get(x))for(var dt=0;dt<z.length;dt++){var an=z[dt];if(fe[an]&x){for(var qt=dt-1;qt>=0&&fe[z[qt]]&(U|c);qt--)S(z[qt],x);for(dt++;dt<z.length&&fe[z[dt]]&(U|c|x);dt++)fe[z[dt]]!==x&&S(z[dt],x)}}if(P.get(U)||P.get(y)||P.get(F))for(var It=0;It<z.length;It++){var Yt=z[It];if(fe[Yt]&(U|y|F)){S(Yt,H);for(var ri=It-1;ri>=0&&fe[z[ri]]&c;ri--)S(z[ri],H);for(var yn=It+1;yn<z.length&&fe[z[yn]]&c;yn++)S(z[yn],H)}}if(P.get(x))for(var na=0,Il=Pe;na<z.length;na++){var Ul=z[na],ia=fe[Ul];ia&x?Il===A&&S(Ul,A):ia&o&&(Il=ia)}if(P.get(a)){var Vr=I|x|D,Ll=Vr|A,Is=[];{for(var $i=[],Qi=0;Qi<z.length;Qi++)if(fe[z[Qi]]&a){var Wr=Se[z[Qi]],Fl=void 0;if(b(Wr)!==null)if($i.length<63)$i.push({char:Wr,seqIndex:Qi});else break;else if((Fl=R(Wr))!==null)for(var jr=$i.length-1;jr>=0;jr--){var ra=$i[jr].char;if(ra===Fl||ra===R(T(Wr))||b(T(ra))===Wr){Is.push([$i[jr].seqIndex,Qi]),$i.length=jr;break}}}Is.sort(function(cn,Cn){return cn[0]-Cn[0]})}for(var sa=0;sa<Is.length;sa++){for(var Nl=Is[sa],Us=Nl[0],oa=Nl[1],Ol=!1,Rn=0,aa=Us+1;aa<oa;aa++){var kl=z[aa];if(fe[kl]&Ll){Ol=!0;var zl=fe[kl]&Vr?I:A;if(zl===He){Rn=zl;break}}}if(Ol&&!Rn){Rn=Pe;for(var ca=Us-1;ca>=0;ca--){var Bl=z[ca];if(fe[Bl]&Ll){var Gl=fe[Bl]&Vr?I:A;Gl!==He?Rn=Gl:Rn=He;break}}}if(Rn){if(fe[z[Us]]=fe[z[oa]]=Rn,Rn!==He){for(var Xr=Us+1;Xr<z.length;Xr++)if(!(fe[z[Xr]]&c)){u(Se[z[Xr]])&K&&(fe[z[Xr]]=Rn);break}}if(Rn!==He){for(var qr=oa+1;qr<z.length;qr++)if(!(fe[z[qr]]&c)){u(Se[z[qr]])&K&&(fe[z[qr]]=Rn);break}}}}for(var si=0;si<z.length;si++)if(fe[z[si]]&a){for(var Hl=si,la=si,ha=Pe,Yr=si-1;Yr>=0;Yr--)if(fe[z[Yr]]&c)Hl=Yr;else{ha=fe[z[Yr]]&Vr?I:A;break}for(var Vl=Ne,Kr=si+1;Kr<z.length;Kr++)if(fe[z[Kr]]&(a|c))la=Kr;else{Vl=fe[z[Kr]]&Vr?I:A;break}for(var da=Hl;da<=la;da++)fe[z[da]]=ha===Vl?ha:He;si=la}}}for(var fn=J.start;fn<=J.end;fn++){var lf=B[fn],Ls=fe[fn];if(lf&1?Ls&(A|x|D)&&B[fn]++:Ls&I?B[fn]++:Ls&(D|x)&&(B[fn]+=2),Ls&c&&(B[fn]=fn===0?J.level:B[fn-1]),fn===J.end||u(Se[fn])&(X|N))for(var Fs=fn;Fs>=0&&u(Se[Fs])&l;Fs--)B[Fs]=J.level}}return{levels:B,paragraphs:ne};function Wl(cn,Cn){for(var ln=cn;ln<Se.length;ln++){var oi=fe[ln];if(oi&(I|Q))return 1;if(oi&(N|A)||Cn&&oi===te)return 0;if(oi&r){var jl=hf(ln);ln=jl===-1?Se.length:jl}}return 0}function hf(cn){for(var Cn=1,ln=cn+1;ln<Se.length;ln++){var oi=fe[ln];if(oi&N)break;if(oi&te){if(--Cn===0)return ln}else oi&r&&Cn++}return-1}}var we="14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1",me;function be(){if(!me){var Se=v(we,!0),_e=Se.map,Re=Se.reverseMap;Re.forEach(function(fe,Ve){_e.set(Ve,fe)}),me=_e}}function L(Se){return be(),me.get(Se)||null}function Oe(Se,_e,Re,fe){var Ve=Se.length;Re=Math.max(0,Re==null?0:+Re),fe=Math.min(Ve-1,fe==null?Ve-1:+fe);for(var P=new Map,S=Re;S<=fe;S++)if(_e[S]&1){var B=L(Se[S]);B!==null&&P.set(S,B)}return P}function Ee(Se,_e,Re,fe){var Ve=Se.length;Re=Math.max(0,Re==null?0:+Re),fe=Math.min(Ve-1,fe==null?Ve-1:+fe);var P=[];return _e.paragraphs.forEach(function(S){var B=Math.max(Re,S.start),re=Math.min(fe,S.end);if(B<re){for(var ne=_e.levels.slice(B,re+1),J=re;J>=B&&u(Se[J])&l;J--)ne[J]=S.level;for(var Me=S.level,ue=1/0,De=0;De<ne.length;De++){var Ie=ne[De];Ie>Me&&(Me=Ie),Ie<ue&&(ue=Ie|1)}for(var de=Me;de>=ue;de--)for(var ye=0;ye<ne.length;ye++)if(ne[ye]>=de){for(var Ae=ye;ye+1<ne.length&&ne[ye+1]>=de;)ye++;ye>Ae&&P.push([Ae+B,ye+B])}}}),P}function Te(Se,_e,Re,fe){var Ve=ve(Se,_e,Re,fe),P=[].concat(Se);return Ve.forEach(function(S,B){P[B]=(_e.levels[S]&1?L(Se[S]):null)||Se[S]}),P.join("")}function ve(Se,_e,Re,fe){for(var Ve=Ee(Se,_e,Re,fe),P=[],S=0;S<Se.length;S++)P[S]=S;return Ve.forEach(function(B){for(var re=B[0],ne=B[1],J=P.slice(re,ne+1),Me=J.length;Me--;)P[ne-Me]=J[Me]}),P}return e.closingToOpeningBracket=R,e.getBidiCharType=u,e.getBidiCharTypeName=f,e.getCanonicalBracket=T,e.getEmbeddingLevels=ge,e.getMirroredCharacter=L,e.getMirroredCharactersMap=Oe,e.getReorderSegments=Ee,e.getReorderedIndices=ve,e.getReorderedString=Te,e.openingToClosingBracket=b,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return s}const Ku=/\bvoid\s+main\s*\(\s*\)\s*{/g;function nl(s){const e=/^[ \t]*#include +<([\w\d./]+)>/gm;function t(n,i){let r=nt[i];return r?nl(r):n}return s.replace(e,t)}const Kt=[];for(let s=0;s<256;s++)Kt[s]=(s<16?"0":"")+s.toString(16);function RC(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Kt[s&255]+Kt[s>>8&255]+Kt[s>>16&255]+Kt[s>>24&255]+"-"+Kt[e&255]+Kt[e>>8&255]+"-"+Kt[e>>16&15|64]+Kt[e>>24&255]+"-"+Kt[t&63|128]+Kt[t>>8&255]+"-"+Kt[t>>16&255]+Kt[t>>24&255]+Kt[n&255]+Kt[n>>8&255]+Kt[n>>16&255]+Kt[n>>24&255]).toUpperCase()}const Fi=Object.assign||function(){let s=arguments[0];for(let e=1,t=arguments.length;e<t;e++){let n=arguments[e];if(n)for(let i in n)Object.prototype.hasOwnProperty.call(n,i)&&(s[i]=n[i])}return s},CC=Date.now(),Ld=new WeakMap,Fd=new Map;let PC=1e10;function il(s,e){const t=LC(e);let n=Ld.get(s);if(n||Ld.set(s,n=Object.create(null)),n[t])return new n[t];const i=`_onBeforeCompile${t}`,r=function(l,h){s.onBeforeCompile.call(this,l,h);const d=this.customProgramCacheKey()+"|"+l.vertexShader+"|"+l.fragmentShader;let u=Fd[d];if(!u){const f=DC(this,l,e,t);u=Fd[d]=f}l.vertexShader=u.vertexShader,l.fragmentShader=u.fragmentShader,Fi(l.uniforms,this.uniforms),e.timeUniform&&(l.uniforms[e.timeUniform]={get value(){return Date.now()-CC}}),this[i]&&this[i](l)},o=function(){return a(e.chained?s:s.clone())},a=function(l){const h=Object.create(l,c);return Object.defineProperty(h,"baseMaterial",{value:s}),Object.defineProperty(h,"id",{value:PC++}),h.uuid=RC(),h.uniforms=Fi({},l.uniforms,e.uniforms),h.defines=Fi({},l.defines,e.defines),h.defines[`TROIKA_DERIVED_MATERIAL_${t}`]="",h.extensions=Fi({},l.extensions,e.extensions),h._listeners=void 0,h},c={constructor:{value:o},isDerivedMaterial:{value:!0},type:{get:()=>s.type,set:l=>{s.type=l}},isDerivedFrom:{writable:!0,configurable:!0,value:function(l){const h=this.baseMaterial;return l===h||h.isDerivedMaterial&&h.isDerivedFrom(l)||!1}},customProgramCacheKey:{writable:!0,configurable:!0,value:function(){return s.customProgramCacheKey()+"|"+t}},onBeforeCompile:{get(){return r},set(l){this[i]=l}},copy:{writable:!0,configurable:!0,value:function(l){return s.copy.call(this,l),!s.isShaderMaterial&&!s.isDerivedMaterial&&(Fi(this.extensions,l.extensions),Fi(this.defines,l.defines),Fi(this.uniforms,wu.clone(l.uniforms))),this}},clone:{writable:!0,configurable:!0,value:function(){const l=new s.constructor;return a(l).copy(this)}},getDepthMaterial:{writable:!0,configurable:!0,value:function(){let l=this._depthMaterial;return l||(l=this._depthMaterial=il(s.isDerivedMaterial?s.getDepthMaterial():new Ru({depthPacking:cu}),e),l.defines.IS_DEPTH_MATERIAL="",l.uniforms=this.uniforms),l}},getDistanceMaterial:{writable:!0,configurable:!0,value:function(){let l=this._distanceMaterial;return l||(l=this._distanceMaterial=il(s.isDerivedMaterial?s.getDistanceMaterial():new Cu,e),l.defines.IS_DISTANCE_MATERIAL="",l.uniforms=this.uniforms),l}},dispose:{writable:!0,configurable:!0,value(){const{_depthMaterial:l,_distanceMaterial:h}=this;l&&l.dispose(),h&&h.dispose(),s.dispose.call(this)}}};return n[t]=o,new o}function DC(s,{vertexShader:e,fragmentShader:t},n,i){let{vertexDefs:r,vertexMainIntro:o,vertexMainOutro:a,vertexTransform:c,fragmentDefs:l,fragmentMainIntro:h,fragmentMainOutro:d,fragmentColorTransform:u,customRewriter:f,timeUniform:g}=n;if(r=r||"",o=o||"",a=a||"",l=l||"",h=h||"",d=d||"",(c||f)&&(e=nl(e)),(u||f)&&(t=t.replace(/^[ \t]*#include <((?:tonemapping|encodings|colorspace|fog|premultiplied_alpha|dithering)_fragment)>/gm,`
//!BEGIN_POST_CHUNK $1
$&
//!END_POST_CHUNK
`),t=nl(t)),f){let v=f({vertexShader:e,fragmentShader:t});e=v.vertexShader,t=v.fragmentShader}if(u){let v=[];t=t.replace(/^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,_=>(v.push(_),"")),d=`${u}
${v.join(`
`)}
${d}`}if(g){const v=`
uniform float ${g};
`;r=v+r,l=v+l}return c&&(e=`vec3 troika_position_${i};
vec3 troika_normal_${i};
vec2 troika_uv_${i};
${e}
`,r=`${r}
void troikaVertexTransform${i}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
  ${c}
}
`,o=`
troika_position_${i} = vec3(position);
troika_normal_${i} = vec3(normal);
troika_uv_${i} = vec2(uv);
troikaVertexTransform${i}(troika_position_${i}, troika_normal_${i}, troika_uv_${i});
${o}
`,e=e.replace(/\b(position|normal|uv)\b/g,(v,_,p,M)=>/\battribute\s+vec[23]\s+$/.test(M.substr(0,p))?_:`troika_${_}_${i}`),s.map&&s.map.channel>0||(e=e.replace(/\bMAP_UV\b/g,`troika_uv_${i}`))),e=Nd(e,i,r,o,a),t=Nd(t,i,l,h,d),{vertexShader:e,fragmentShader:t}}function Nd(s,e,t,n,i){return(n||i||t)&&(s=s.replace(Ku,`
${t}
void troikaOrigMain${e}() {`),s+=`
void main() {
  ${n}
  troikaOrigMain${e}();
  ${i}
}`),s}function IC(s,e){return s==="uniforms"?void 0:typeof e=="function"?e.toString():e}let UC=0;const Od=new Map;function LC(s){const e=JSON.stringify(s,IC);let t=Od.get(e);return t==null&&Od.set(e,t=++UC),t}/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/function FC(){return typeof window>"u"&&(self.window=self),function(s){var e={parse:function(i){var r=e._bin,o=new Uint8Array(i);if(r.readASCII(o,0,4)=="ttcf"){var a=4;r.readUshort(o,a),a+=2,r.readUshort(o,a),a+=2;var c=r.readUint(o,a);a+=4;for(var l=[],h=0;h<c;h++){var d=r.readUint(o,a);a+=4,l.push(e._readFont(o,d))}return l}return[e._readFont(o,0)]},_readFont:function(i,r){var o=e._bin,a=r;o.readFixed(i,r),r+=4;var c=o.readUshort(i,r);r+=2,o.readUshort(i,r),r+=2,o.readUshort(i,r),r+=2,o.readUshort(i,r),r+=2;for(var l=["cmap","head","hhea","maxp","hmtx","name","OS/2","post","loca","glyf","kern","CFF ","GDEF","GPOS","GSUB","SVG "],h={_data:i,_offset:a},d={},u=0;u<c;u++){var f=o.readASCII(i,r,4);r+=4,o.readUint(i,r),r+=4;var g=o.readUint(i,r);r+=4;var v=o.readUint(i,r);r+=4,d[f]={offset:g,length:v}}for(u=0;u<l.length;u++){var _=l[u];d[_]&&(h[_.trim()]=e[_.trim()].parse(i,d[_].offset,d[_].length,h))}return h},_tabOffset:function(i,r,o){for(var a=e._bin,c=a.readUshort(i,o+4),l=o+12,h=0;h<c;h++){var d=a.readASCII(i,l,4);l+=4,a.readUint(i,l),l+=4;var u=a.readUint(i,l);if(l+=4,a.readUint(i,l),l+=4,d==r)return u}return 0}};e._bin={readFixed:function(i,r){return(i[r]<<8|i[r+1])+(i[r+2]<<8|i[r+3])/65540},readF2dot14:function(i,r){return e._bin.readShort(i,r)/16384},readInt:function(i,r){return e._bin._view(i).getInt32(r)},readInt8:function(i,r){return e._bin._view(i).getInt8(r)},readShort:function(i,r){return e._bin._view(i).getInt16(r)},readUshort:function(i,r){return e._bin._view(i).getUint16(r)},readUshorts:function(i,r,o){for(var a=[],c=0;c<o;c++)a.push(e._bin.readUshort(i,r+2*c));return a},readUint:function(i,r){return e._bin._view(i).getUint32(r)},readUint64:function(i,r){return 4294967296*e._bin.readUint(i,r)+e._bin.readUint(i,r+4)},readASCII:function(i,r,o){for(var a="",c=0;c<o;c++)a+=String.fromCharCode(i[r+c]);return a},readUnicode:function(i,r,o){for(var a="",c=0;c<o;c++){var l=i[r++]<<8|i[r++];a+=String.fromCharCode(l)}return a},_tdec:typeof window<"u"&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(i,r,o){var a=e._bin._tdec;return a&&r==0&&o==i.length?a.decode(i):e._bin.readASCII(i,r,o)},readBytes:function(i,r,o){for(var a=[],c=0;c<o;c++)a.push(i[r+c]);return a},readASCIIArray:function(i,r,o){for(var a=[],c=0;c<o;c++)a.push(String.fromCharCode(i[r+c]));return a},_view:function(i){return i._dataView||(i._dataView=i.buffer?new DataView(i.buffer,i.byteOffset,i.byteLength):new DataView(new Uint8Array(i).buffer))}},e._lctf={},e._lctf.parse=function(i,r,o,a,c){var l=e._bin,h={},d=r;l.readFixed(i,r),r+=4;var u=l.readUshort(i,r);r+=2;var f=l.readUshort(i,r);r+=2;var g=l.readUshort(i,r);return r+=2,h.scriptList=e._lctf.readScriptList(i,d+u),h.featureList=e._lctf.readFeatureList(i,d+f),h.lookupList=e._lctf.readLookupList(i,d+g,c),h},e._lctf.readLookupList=function(i,r,o){var a=e._bin,c=r,l=[],h=a.readUshort(i,r);r+=2;for(var d=0;d<h;d++){var u=a.readUshort(i,r);r+=2;var f=e._lctf.readLookupTable(i,c+u,o);l.push(f)}return l},e._lctf.readLookupTable=function(i,r,o){var a=e._bin,c=r,l={tabs:[]};l.ltype=a.readUshort(i,r),r+=2,l.flag=a.readUshort(i,r),r+=2;var h=a.readUshort(i,r);r+=2;for(var d=l.ltype,u=0;u<h;u++){var f=a.readUshort(i,r);r+=2;var g=o(i,d,c+f,l);l.tabs.push(g)}return l},e._lctf.numOfOnes=function(i){for(var r=0,o=0;o<32;o++)(i>>>o&1)!=0&&r++;return r},e._lctf.readClassDef=function(i,r){var o=e._bin,a=[],c=o.readUshort(i,r);if(r+=2,c==1){var l=o.readUshort(i,r);r+=2;var h=o.readUshort(i,r);r+=2;for(var d=0;d<h;d++)a.push(l+d),a.push(l+d),a.push(o.readUshort(i,r)),r+=2}if(c==2){var u=o.readUshort(i,r);for(r+=2,d=0;d<u;d++)a.push(o.readUshort(i,r)),r+=2,a.push(o.readUshort(i,r)),r+=2,a.push(o.readUshort(i,r)),r+=2}return a},e._lctf.getInterval=function(i,r){for(var o=0;o<i.length;o+=3){var a=i[o],c=i[o+1];if(i[o+2],a<=r&&r<=c)return o}return-1},e._lctf.readCoverage=function(i,r){var o=e._bin,a={};a.fmt=o.readUshort(i,r),r+=2;var c=o.readUshort(i,r);return r+=2,a.fmt==1&&(a.tab=o.readUshorts(i,r,c)),a.fmt==2&&(a.tab=o.readUshorts(i,r,3*c)),a},e._lctf.coverageIndex=function(i,r){var o=i.tab;if(i.fmt==1)return o.indexOf(r);if(i.fmt==2){var a=e._lctf.getInterval(o,r);if(a!=-1)return o[a+2]+(r-o[a])}return-1},e._lctf.readFeatureList=function(i,r){var o=e._bin,a=r,c=[],l=o.readUshort(i,r);r+=2;for(var h=0;h<l;h++){var d=o.readASCII(i,r,4);r+=4;var u=o.readUshort(i,r);r+=2;var f=e._lctf.readFeatureTable(i,a+u);f.tag=d.trim(),c.push(f)}return c},e._lctf.readFeatureTable=function(i,r){var o=e._bin,a=r,c={},l=o.readUshort(i,r);r+=2,l>0&&(c.featureParams=a+l);var h=o.readUshort(i,r);r+=2,c.tab=[];for(var d=0;d<h;d++)c.tab.push(o.readUshort(i,r+2*d));return c},e._lctf.readScriptList=function(i,r){var o=e._bin,a=r,c={},l=o.readUshort(i,r);r+=2;for(var h=0;h<l;h++){var d=o.readASCII(i,r,4);r+=4;var u=o.readUshort(i,r);r+=2,c[d.trim()]=e._lctf.readScriptTable(i,a+u)}return c},e._lctf.readScriptTable=function(i,r){var o=e._bin,a=r,c={},l=o.readUshort(i,r);r+=2,l>0&&(c.default=e._lctf.readLangSysTable(i,a+l));var h=o.readUshort(i,r);r+=2;for(var d=0;d<h;d++){var u=o.readASCII(i,r,4);r+=4;var f=o.readUshort(i,r);r+=2,c[u.trim()]=e._lctf.readLangSysTable(i,a+f)}return c},e._lctf.readLangSysTable=function(i,r){var o=e._bin,a={};o.readUshort(i,r),r+=2,a.reqFeature=o.readUshort(i,r),r+=2;var c=o.readUshort(i,r);return r+=2,a.features=o.readUshorts(i,r,c),a},e.CFF={},e.CFF.parse=function(i,r,o){var a=e._bin;(i=new Uint8Array(i.buffer,r,o))[r=0],i[++r],i[++r],i[++r],r++;var c=[];r=e.CFF.readIndex(i,r,c);for(var l=[],h=0;h<c.length-1;h++)l.push(a.readASCII(i,r+c[h],c[h+1]-c[h]));r+=c[c.length-1];var d=[];r=e.CFF.readIndex(i,r,d);var u=[];for(h=0;h<d.length-1;h++)u.push(e.CFF.readDict(i,r+d[h],r+d[h+1]));r+=d[d.length-1];var f=u[0],g=[];r=e.CFF.readIndex(i,r,g);var v=[];for(h=0;h<g.length-1;h++)v.push(a.readASCII(i,r+g[h],g[h+1]-g[h]));if(r+=g[g.length-1],e.CFF.readSubrs(i,r,f),f.CharStrings){r=f.CharStrings,g=[],r=e.CFF.readIndex(i,r,g);var _=[];for(h=0;h<g.length-1;h++)_.push(a.readBytes(i,r+g[h],g[h+1]-g[h]));f.CharStrings=_}if(f.ROS){r=f.FDArray;var p=[];for(r=e.CFF.readIndex(i,r,p),f.FDArray=[],h=0;h<p.length-1;h++){var M=e.CFF.readDict(i,r+p[h],r+p[h+1]);e.CFF._readFDict(i,M,v),f.FDArray.push(M)}r+=p[p.length-1],r=f.FDSelect,f.FDSelect=[];var E=i[r];if(r++,E!=3)throw E;var b=a.readUshort(i,r);for(r+=2,h=0;h<b+1;h++)f.FDSelect.push(a.readUshort(i,r),i[r+2]),r+=3}return f.Encoding&&(f.Encoding=e.CFF.readEncoding(i,f.Encoding,f.CharStrings.length)),f.charset&&(f.charset=e.CFF.readCharset(i,f.charset,f.CharStrings.length)),e.CFF._readFDict(i,f,v),f},e.CFF._readFDict=function(i,r,o){var a;for(var c in r.Private&&(a=r.Private[1],r.Private=e.CFF.readDict(i,a,a+r.Private[0]),r.Private.Subrs&&e.CFF.readSubrs(i,a+r.Private.Subrs,r.Private)),r)["FamilyName","FontName","FullName","Notice","version","Copyright"].indexOf(c)!=-1&&(r[c]=o[r[c]-426+35])},e.CFF.readSubrs=function(i,r,o){var a=e._bin,c=[];r=e.CFF.readIndex(i,r,c);var l,h=c.length;l=h<1240?107:h<33900?1131:32768,o.Bias=l,o.Subrs=[];for(var d=0;d<c.length-1;d++)o.Subrs.push(a.readBytes(i,r+c[d],c[d+1]-c[d]))},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(i,r){for(var o=0;o<i.charset.length;o++)if(i.charset[o]==r)return o;return-1},e.CFF.glyphBySE=function(i,r){return r<0||r>255?-1:e.CFF.glyphByUnicode(i,e.CFF.tableSE[r])},e.CFF.readEncoding=function(i,r,o){e._bin;var a=[".notdef"],c=i[r];if(r++,c!=0)throw"error: unknown encoding format: "+c;var l=i[r];r++;for(var h=0;h<l;h++)a.push(i[r+h]);return a},e.CFF.readCharset=function(i,r,o){var a=e._bin,c=[".notdef"],l=i[r];if(r++,l==0)for(var h=0;h<o;h++){var d=a.readUshort(i,r);r+=2,c.push(d)}else{if(l!=1&&l!=2)throw"error: format: "+l;for(;c.length<o;){d=a.readUshort(i,r),r+=2;var u=0;for(l==1?(u=i[r],r++):(u=a.readUshort(i,r),r+=2),h=0;h<=u;h++)c.push(d),d++}}return c},e.CFF.readIndex=function(i,r,o){var a=e._bin,c=a.readUshort(i,r)+1,l=i[r+=2];if(r++,l==1)for(var h=0;h<c;h++)o.push(i[r+h]);else if(l==2)for(h=0;h<c;h++)o.push(a.readUshort(i,r+2*h));else if(l==3)for(h=0;h<c;h++)o.push(16777215&a.readUint(i,r+3*h-1));else if(c!=1)throw"unsupported offset size: "+l+", count: "+c;return(r+=c*l)-1},e.CFF.getCharString=function(i,r,o){var a=e._bin,c=i[r],l=i[r+1];i[r+2],i[r+3],i[r+4];var h=1,d=null,u=null;c<=20&&(d=c,h=1),c==12&&(d=100*c+l,h=2),21<=c&&c<=27&&(d=c,h=1),c==28&&(u=a.readShort(i,r+1),h=3),29<=c&&c<=31&&(d=c,h=1),32<=c&&c<=246&&(u=c-139,h=1),247<=c&&c<=250&&(u=256*(c-247)+l+108,h=2),251<=c&&c<=254&&(u=256*-(c-251)-l-108,h=2),c==255&&(u=a.readInt(i,r+1)/65535,h=5),o.val=u??"o"+d,o.size=h},e.CFF.readCharString=function(i,r,o){for(var a=r+o,c=e._bin,l=[];r<a;){var h=i[r],d=i[r+1];i[r+2],i[r+3],i[r+4];var u=1,f=null,g=null;h<=20&&(f=h,u=1),h==12&&(f=100*h+d,u=2),h!=19&&h!=20||(f=h,u=2),21<=h&&h<=27&&(f=h,u=1),h==28&&(g=c.readShort(i,r+1),u=3),29<=h&&h<=31&&(f=h,u=1),32<=h&&h<=246&&(g=h-139,u=1),247<=h&&h<=250&&(g=256*(h-247)+d+108,u=2),251<=h&&h<=254&&(g=256*-(h-251)-d-108,u=2),h==255&&(g=c.readInt(i,r+1)/65535,u=5),l.push(g??"o"+f),r+=u}return l},e.CFF.readDict=function(i,r,o){for(var a=e._bin,c={},l=[];r<o;){var h=i[r],d=i[r+1];i[r+2],i[r+3],i[r+4];var u=1,f=null,g=null;if(h==28&&(g=a.readShort(i,r+1),u=3),h==29&&(g=a.readInt(i,r+1),u=5),32<=h&&h<=246&&(g=h-139,u=1),247<=h&&h<=250&&(g=256*(h-247)+d+108,u=2),251<=h&&h<=254&&(g=256*-(h-251)-d-108,u=2),h==255)throw g=a.readInt(i,r+1)/65535,u=5,"unknown number";if(h==30){var v=[];for(u=1;;){var _=i[r+u];u++;var p=_>>4,M=15&_;if(p!=15&&v.push(p),M!=15&&v.push(M),M==15)break}for(var E="",b=[0,1,2,3,4,5,6,7,8,9,".","e","e-","reserved","-","endOfNumber"],R=0;R<v.length;R++)E+=b[v[R]];g=parseFloat(E)}h<=21&&(f=["version","Notice","FullName","FamilyName","Weight","FontBBox","BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StdHW","StdVW","escape","UniqueID","XUID","charset","Encoding","CharStrings","Private","Subrs","defaultWidthX","nominalWidthX"][h],u=1,h==12&&(f=["Copyright","isFixedPitch","ItalicAngle","UnderlinePosition","UnderlineThickness","PaintType","CharstringType","FontMatrix","StrokeWidth","BlueScale","BlueShift","BlueFuzz","StemSnapH","StemSnapV","ForceBold",0,0,"LanguageGroup","ExpansionFactor","initialRandomSeed","SyntheticBase","PostScript","BaseFontName","BaseFontBlend",0,0,0,0,0,0,"ROS","CIDFontVersion","CIDFontRevision","CIDFontType","CIDCount","UIDBase","FDArray","FDSelect","FontName"][d],u=2)),f!=null?(c[f]=l.length==1?l[0]:l,l=[]):l.push(g),r+=u}return c},e.cmap={},e.cmap.parse=function(i,r,o){i=new Uint8Array(i.buffer,r,o),r=0;var a=e._bin,c={};a.readUshort(i,r),r+=2;var l=a.readUshort(i,r);r+=2;var h=[];c.tables=[];for(var d=0;d<l;d++){var u=a.readUshort(i,r);r+=2;var f=a.readUshort(i,r);r+=2;var g=a.readUint(i,r);r+=4;var v="p"+u+"e"+f,_=h.indexOf(g);if(_==-1){var p;_=c.tables.length,h.push(g);var M=a.readUshort(i,g);M==0?p=e.cmap.parse0(i,g):M==4?p=e.cmap.parse4(i,g):M==6?p=e.cmap.parse6(i,g):M==12?p=e.cmap.parse12(i,g):console.debug("unknown format: "+M,u,f,g),c.tables.push(p)}if(c[v]!=null)throw"multiple tables for one platform+encoding";c[v]=_}return c},e.cmap.parse0=function(i,r){var o=e._bin,a={};a.format=o.readUshort(i,r),r+=2;var c=o.readUshort(i,r);r+=2,o.readUshort(i,r),r+=2,a.map=[];for(var l=0;l<c-6;l++)a.map.push(i[r+l]);return a},e.cmap.parse4=function(i,r){var o=e._bin,a=r,c={};c.format=o.readUshort(i,r),r+=2;var l=o.readUshort(i,r);r+=2,o.readUshort(i,r),r+=2;var h=o.readUshort(i,r);r+=2;var d=h/2;c.searchRange=o.readUshort(i,r),r+=2,c.entrySelector=o.readUshort(i,r),r+=2,c.rangeShift=o.readUshort(i,r),r+=2,c.endCount=o.readUshorts(i,r,d),r+=2*d,r+=2,c.startCount=o.readUshorts(i,r,d),r+=2*d,c.idDelta=[];for(var u=0;u<d;u++)c.idDelta.push(o.readShort(i,r)),r+=2;for(c.idRangeOffset=o.readUshorts(i,r,d),r+=2*d,c.glyphIdArray=[];r<a+l;)c.glyphIdArray.push(o.readUshort(i,r)),r+=2;return c},e.cmap.parse6=function(i,r){var o=e._bin,a={};a.format=o.readUshort(i,r),r+=2,o.readUshort(i,r),r+=2,o.readUshort(i,r),r+=2,a.firstCode=o.readUshort(i,r),r+=2;var c=o.readUshort(i,r);r+=2,a.glyphIdArray=[];for(var l=0;l<c;l++)a.glyphIdArray.push(o.readUshort(i,r)),r+=2;return a},e.cmap.parse12=function(i,r){var o=e._bin,a={};a.format=o.readUshort(i,r),r+=2,r+=2,o.readUint(i,r),r+=4,o.readUint(i,r),r+=4;var c=o.readUint(i,r);r+=4,a.groups=[];for(var l=0;l<c;l++){var h=r+12*l,d=o.readUint(i,h+0),u=o.readUint(i,h+4),f=o.readUint(i,h+8);a.groups.push([d,u,f])}return a},e.glyf={},e.glyf.parse=function(i,r,o,a){for(var c=[],l=0;l<a.maxp.numGlyphs;l++)c.push(null);return c},e.glyf._parseGlyf=function(i,r){var o=e._bin,a=i._data,c=e._tabOffset(a,"glyf",i._offset)+i.loca[r];if(i.loca[r]==i.loca[r+1])return null;var l={};if(l.noc=o.readShort(a,c),c+=2,l.xMin=o.readShort(a,c),c+=2,l.yMin=o.readShort(a,c),c+=2,l.xMax=o.readShort(a,c),c+=2,l.yMax=o.readShort(a,c),c+=2,l.xMin>=l.xMax||l.yMin>=l.yMax)return null;if(l.noc>0){l.endPts=[];for(var h=0;h<l.noc;h++)l.endPts.push(o.readUshort(a,c)),c+=2;var d=o.readUshort(a,c);if(c+=2,a.length-c<d)return null;l.instructions=o.readBytes(a,c,d),c+=d;var u=l.endPts[l.noc-1]+1;for(l.flags=[],h=0;h<u;h++){var f=a[c];if(c++,l.flags.push(f),(8&f)!=0){var g=a[c];c++;for(var v=0;v<g;v++)l.flags.push(f),h++}}for(l.xs=[],h=0;h<u;h++){var _=(2&l.flags[h])!=0,p=(16&l.flags[h])!=0;_?(l.xs.push(p?a[c]:-a[c]),c++):p?l.xs.push(0):(l.xs.push(o.readShort(a,c)),c+=2)}for(l.ys=[],h=0;h<u;h++)_=(4&l.flags[h])!=0,p=(32&l.flags[h])!=0,_?(l.ys.push(p?a[c]:-a[c]),c++):p?l.ys.push(0):(l.ys.push(o.readShort(a,c)),c+=2);var M=0,E=0;for(h=0;h<u;h++)M+=l.xs[h],E+=l.ys[h],l.xs[h]=M,l.ys[h]=E}else{var b;l.parts=[];do{b=o.readUshort(a,c),c+=2;var R={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(l.parts.push(R),R.glyphIndex=o.readUshort(a,c),c+=2,1&b){var T=o.readShort(a,c);c+=2;var A=o.readShort(a,c);c+=2}else T=o.readInt8(a,c),c++,A=o.readInt8(a,c),c++;2&b?(R.m.tx=T,R.m.ty=A):(R.p1=T,R.p2=A),8&b?(R.m.a=R.m.d=o.readF2dot14(a,c),c+=2):64&b?(R.m.a=o.readF2dot14(a,c),c+=2,R.m.d=o.readF2dot14(a,c),c+=2):128&b&&(R.m.a=o.readF2dot14(a,c),c+=2,R.m.b=o.readF2dot14(a,c),c+=2,R.m.c=o.readF2dot14(a,c),c+=2,R.m.d=o.readF2dot14(a,c),c+=2)}while(32&b);if(256&b){var I=o.readUshort(a,c);for(c+=2,l.instr=[],h=0;h<I;h++)l.instr.push(a[c]),c++}}return l},e.GDEF={},e.GDEF.parse=function(i,r,o,a){var c=r;r+=4;var l=e._bin.readUshort(i,r);return{glyphClassDef:l===0?null:e._lctf.readClassDef(i,c+l)}},e.GPOS={},e.GPOS.parse=function(i,r,o,a){return e._lctf.parse(i,r,o,a,e.GPOS.subt)},e.GPOS.subt=function(i,r,o,a){var c=e._bin,l=o,h={};if(h.fmt=c.readUshort(i,o),o+=2,r==1||r==2||r==3||r==7||r==8&&h.fmt<=2){var d=c.readUshort(i,o);o+=2,h.coverage=e._lctf.readCoverage(i,d+l)}if(r==1&&h.fmt==1){var u=c.readUshort(i,o);o+=2,u!=0&&(h.pos=e.GPOS.readValueRecord(i,o,u))}else if(r==2&&h.fmt>=1&&h.fmt<=2){u=c.readUshort(i,o),o+=2;var f=c.readUshort(i,o);o+=2;var g=e._lctf.numOfOnes(u),v=e._lctf.numOfOnes(f);if(h.fmt==1){h.pairsets=[];var _=c.readUshort(i,o);o+=2;for(var p=0;p<_;p++){var M=l+c.readUshort(i,o);o+=2;var E=c.readUshort(i,M);M+=2;for(var b=[],R=0;R<E;R++){var T=c.readUshort(i,M);M+=2,u!=0&&(D=e.GPOS.readValueRecord(i,M,u),M+=2*g),f!=0&&(F=e.GPOS.readValueRecord(i,M,f),M+=2*v),b.push({gid2:T,val1:D,val2:F})}h.pairsets.push(b)}}if(h.fmt==2){var A=c.readUshort(i,o);o+=2;var I=c.readUshort(i,o);o+=2;var x=c.readUshort(i,o);o+=2;var y=c.readUshort(i,o);for(o+=2,h.classDef1=e._lctf.readClassDef(i,l+A),h.classDef2=e._lctf.readClassDef(i,l+I),h.matrix=[],p=0;p<x;p++){var U=[];for(R=0;R<y;R++){var D=null,F=null;u!=0&&(D=e.GPOS.readValueRecord(i,o,u),o+=2*g),f!=0&&(F=e.GPOS.readValueRecord(i,o,f),o+=2*v),U.push({val1:D,val2:F})}h.matrix.push(U)}}}else if(r==4&&h.fmt==1)h.markCoverage=e._lctf.readCoverage(i,c.readUshort(i,o)+l),h.baseCoverage=e._lctf.readCoverage(i,c.readUshort(i,o+2)+l),h.markClassCount=c.readUshort(i,o+4),h.markArray=e.GPOS.readMarkArray(i,c.readUshort(i,o+6)+l),h.baseArray=e.GPOS.readBaseArray(i,c.readUshort(i,o+8)+l,h.markClassCount);else if(r==6&&h.fmt==1)h.mark1Coverage=e._lctf.readCoverage(i,c.readUshort(i,o)+l),h.mark2Coverage=e._lctf.readCoverage(i,c.readUshort(i,o+2)+l),h.markClassCount=c.readUshort(i,o+4),h.mark1Array=e.GPOS.readMarkArray(i,c.readUshort(i,o+6)+l),h.mark2Array=e.GPOS.readBaseArray(i,c.readUshort(i,o+8)+l,h.markClassCount);else{if(r==9&&h.fmt==1){var N=c.readUshort(i,o);o+=2;var X=c.readUint(i,o);if(o+=4,a.ltype==9)a.ltype=N;else if(a.ltype!=N)throw"invalid extension substitution";return e.GPOS.subt(i,a.ltype,l+X)}console.debug("unsupported GPOS table LookupType",r,"format",h.fmt)}return h},e.GPOS.readValueRecord=function(i,r,o){var a=e._bin,c=[];return c.push(1&o?a.readShort(i,r):0),r+=1&o?2:0,c.push(2&o?a.readShort(i,r):0),r+=2&o?2:0,c.push(4&o?a.readShort(i,r):0),r+=4&o?2:0,c.push(8&o?a.readShort(i,r):0),r+=8&o?2:0,c},e.GPOS.readBaseArray=function(i,r,o){var a=e._bin,c=[],l=r,h=a.readUshort(i,r);r+=2;for(var d=0;d<h;d++){for(var u=[],f=0;f<o;f++)u.push(e.GPOS.readAnchorRecord(i,l+a.readUshort(i,r))),r+=2;c.push(u)}return c},e.GPOS.readMarkArray=function(i,r){var o=e._bin,a=[],c=r,l=o.readUshort(i,r);r+=2;for(var h=0;h<l;h++){var d=e.GPOS.readAnchorRecord(i,o.readUshort(i,r+2)+c);d.markClass=o.readUshort(i,r),a.push(d),r+=4}return a},e.GPOS.readAnchorRecord=function(i,r){var o=e._bin,a={};return a.fmt=o.readUshort(i,r),a.x=o.readShort(i,r+2),a.y=o.readShort(i,r+4),a},e.GSUB={},e.GSUB.parse=function(i,r,o,a){return e._lctf.parse(i,r,o,a,e.GSUB.subt)},e.GSUB.subt=function(i,r,o,a){var c=e._bin,l=o,h={};if(h.fmt=c.readUshort(i,o),o+=2,r!=1&&r!=2&&r!=4&&r!=5&&r!=6)return null;if(r==1||r==2||r==4||r==5&&h.fmt<=2||r==6&&h.fmt<=2){var d=c.readUshort(i,o);o+=2,h.coverage=e._lctf.readCoverage(i,l+d)}if(r==1&&h.fmt>=1&&h.fmt<=2){if(h.fmt==1)h.delta=c.readShort(i,o),o+=2;else if(h.fmt==2){var u=c.readUshort(i,o);o+=2,h.newg=c.readUshorts(i,o,u),o+=2*h.newg.length}}else if(r==2&&h.fmt==1){u=c.readUshort(i,o),o+=2,h.seqs=[];for(var f=0;f<u;f++){var g=c.readUshort(i,o)+l;o+=2;var v=c.readUshort(i,g);h.seqs.push(c.readUshorts(i,g+2,v))}}else if(r==4)for(h.vals=[],u=c.readUshort(i,o),o+=2,f=0;f<u;f++){var _=c.readUshort(i,o);o+=2,h.vals.push(e.GSUB.readLigatureSet(i,l+_))}else if(r==5&&h.fmt==2){if(h.fmt==2){var p=c.readUshort(i,o);o+=2,h.cDef=e._lctf.readClassDef(i,l+p),h.scset=[];var M=c.readUshort(i,o);for(o+=2,f=0;f<M;f++){var E=c.readUshort(i,o);o+=2,h.scset.push(E==0?null:e.GSUB.readSubClassSet(i,l+E))}}}else if(r==6&&h.fmt==3){if(h.fmt==3){for(f=0;f<3;f++){u=c.readUshort(i,o),o+=2;for(var b=[],R=0;R<u;R++)b.push(e._lctf.readCoverage(i,l+c.readUshort(i,o+2*R)));o+=2*u,f==0&&(h.backCvg=b),f==1&&(h.inptCvg=b),f==2&&(h.ahedCvg=b)}u=c.readUshort(i,o),o+=2,h.lookupRec=e.GSUB.readSubstLookupRecords(i,o,u)}}else{if(r==7&&h.fmt==1){var T=c.readUshort(i,o);o+=2;var A=c.readUint(i,o);if(o+=4,a.ltype==9)a.ltype=T;else if(a.ltype!=T)throw"invalid extension substitution";return e.GSUB.subt(i,a.ltype,l+A)}console.debug("unsupported GSUB table LookupType",r,"format",h.fmt)}return h},e.GSUB.readSubClassSet=function(i,r){var o=e._bin.readUshort,a=r,c=[],l=o(i,r);r+=2;for(var h=0;h<l;h++){var d=o(i,r);r+=2,c.push(e.GSUB.readSubClassRule(i,a+d))}return c},e.GSUB.readSubClassRule=function(i,r){var o=e._bin.readUshort,a={},c=o(i,r),l=o(i,r+=2);r+=2,a.input=[];for(var h=0;h<c-1;h++)a.input.push(o(i,r)),r+=2;return a.substLookupRecords=e.GSUB.readSubstLookupRecords(i,r,l),a},e.GSUB.readSubstLookupRecords=function(i,r,o){for(var a=e._bin.readUshort,c=[],l=0;l<o;l++)c.push(a(i,r),a(i,r+2)),r+=4;return c},e.GSUB.readChainSubClassSet=function(i,r){var o=e._bin,a=r,c=[],l=o.readUshort(i,r);r+=2;for(var h=0;h<l;h++){var d=o.readUshort(i,r);r+=2,c.push(e.GSUB.readChainSubClassRule(i,a+d))}return c},e.GSUB.readChainSubClassRule=function(i,r){for(var o=e._bin,a={},c=["backtrack","input","lookahead"],l=0;l<c.length;l++){var h=o.readUshort(i,r);r+=2,l==1&&h--,a[c[l]]=o.readUshorts(i,r,h),r+=2*a[c[l]].length}return h=o.readUshort(i,r),r+=2,a.subst=o.readUshorts(i,r,2*h),r+=2*a.subst.length,a},e.GSUB.readLigatureSet=function(i,r){var o=e._bin,a=r,c=[],l=o.readUshort(i,r);r+=2;for(var h=0;h<l;h++){var d=o.readUshort(i,r);r+=2,c.push(e.GSUB.readLigature(i,a+d))}return c},e.GSUB.readLigature=function(i,r){var o=e._bin,a={chain:[]};a.nglyph=o.readUshort(i,r),r+=2;var c=o.readUshort(i,r);r+=2;for(var l=0;l<c-1;l++)a.chain.push(o.readUshort(i,r)),r+=2;return a},e.head={},e.head.parse=function(i,r,o){var a=e._bin,c={};return a.readFixed(i,r),r+=4,c.fontRevision=a.readFixed(i,r),r+=4,a.readUint(i,r),r+=4,a.readUint(i,r),r+=4,c.flags=a.readUshort(i,r),r+=2,c.unitsPerEm=a.readUshort(i,r),r+=2,c.created=a.readUint64(i,r),r+=8,c.modified=a.readUint64(i,r),r+=8,c.xMin=a.readShort(i,r),r+=2,c.yMin=a.readShort(i,r),r+=2,c.xMax=a.readShort(i,r),r+=2,c.yMax=a.readShort(i,r),r+=2,c.macStyle=a.readUshort(i,r),r+=2,c.lowestRecPPEM=a.readUshort(i,r),r+=2,c.fontDirectionHint=a.readShort(i,r),r+=2,c.indexToLocFormat=a.readShort(i,r),r+=2,c.glyphDataFormat=a.readShort(i,r),r+=2,c},e.hhea={},e.hhea.parse=function(i,r,o){var a=e._bin,c={};return a.readFixed(i,r),r+=4,c.ascender=a.readShort(i,r),r+=2,c.descender=a.readShort(i,r),r+=2,c.lineGap=a.readShort(i,r),r+=2,c.advanceWidthMax=a.readUshort(i,r),r+=2,c.minLeftSideBearing=a.readShort(i,r),r+=2,c.minRightSideBearing=a.readShort(i,r),r+=2,c.xMaxExtent=a.readShort(i,r),r+=2,c.caretSlopeRise=a.readShort(i,r),r+=2,c.caretSlopeRun=a.readShort(i,r),r+=2,c.caretOffset=a.readShort(i,r),r+=2,r+=8,c.metricDataFormat=a.readShort(i,r),r+=2,c.numberOfHMetrics=a.readUshort(i,r),r+=2,c},e.hmtx={},e.hmtx.parse=function(i,r,o,a){for(var c=e._bin,l={aWidth:[],lsBearing:[]},h=0,d=0,u=0;u<a.maxp.numGlyphs;u++)u<a.hhea.numberOfHMetrics&&(h=c.readUshort(i,r),r+=2,d=c.readShort(i,r),r+=2),l.aWidth.push(h),l.lsBearing.push(d);return l},e.kern={},e.kern.parse=function(i,r,o,a){var c=e._bin,l=c.readUshort(i,r);if(r+=2,l==1)return e.kern.parseV1(i,r-2,o,a);var h=c.readUshort(i,r);r+=2;for(var d={glyph1:[],rval:[]},u=0;u<h;u++){r+=2,o=c.readUshort(i,r),r+=2;var f=c.readUshort(i,r);r+=2;var g=f>>>8;if((g&=15)!=0)throw"unknown kern table format: "+g;r=e.kern.readFormat0(i,r,d)}return d},e.kern.parseV1=function(i,r,o,a){var c=e._bin;c.readFixed(i,r),r+=4;var l=c.readUint(i,r);r+=4;for(var h={glyph1:[],rval:[]},d=0;d<l;d++){c.readUint(i,r),r+=4;var u=c.readUshort(i,r);r+=2,c.readUshort(i,r),r+=2;var f=u>>>8;if((f&=15)!=0)throw"unknown kern table format: "+f;r=e.kern.readFormat0(i,r,h)}return h},e.kern.readFormat0=function(i,r,o){var a=e._bin,c=-1,l=a.readUshort(i,r);r+=2,a.readUshort(i,r),r+=2,a.readUshort(i,r),r+=2,a.readUshort(i,r),r+=2;for(var h=0;h<l;h++){var d=a.readUshort(i,r);r+=2;var u=a.readUshort(i,r);r+=2;var f=a.readShort(i,r);r+=2,d!=c&&(o.glyph1.push(d),o.rval.push({glyph2:[],vals:[]}));var g=o.rval[o.rval.length-1];g.glyph2.push(u),g.vals.push(f),c=d}return r},e.loca={},e.loca.parse=function(i,r,o,a){var c=e._bin,l=[],h=a.head.indexToLocFormat,d=a.maxp.numGlyphs+1;if(h==0)for(var u=0;u<d;u++)l.push(c.readUshort(i,r+(u<<1))<<1);if(h==1)for(u=0;u<d;u++)l.push(c.readUint(i,r+(u<<2)));return l},e.maxp={},e.maxp.parse=function(i,r,o){var a=e._bin,c={},l=a.readUint(i,r);return r+=4,c.numGlyphs=a.readUshort(i,r),r+=2,l==65536&&(c.maxPoints=a.readUshort(i,r),r+=2,c.maxContours=a.readUshort(i,r),r+=2,c.maxCompositePoints=a.readUshort(i,r),r+=2,c.maxCompositeContours=a.readUshort(i,r),r+=2,c.maxZones=a.readUshort(i,r),r+=2,c.maxTwilightPoints=a.readUshort(i,r),r+=2,c.maxStorage=a.readUshort(i,r),r+=2,c.maxFunctionDefs=a.readUshort(i,r),r+=2,c.maxInstructionDefs=a.readUshort(i,r),r+=2,c.maxStackElements=a.readUshort(i,r),r+=2,c.maxSizeOfInstructions=a.readUshort(i,r),r+=2,c.maxComponentElements=a.readUshort(i,r),r+=2,c.maxComponentDepth=a.readUshort(i,r),r+=2),c},e.name={},e.name.parse=function(i,r,o){var a=e._bin,c={};a.readUshort(i,r),r+=2;var l=a.readUshort(i,r);r+=2,a.readUshort(i,r);for(var h,d=["copyright","fontFamily","fontSubfamily","ID","fullName","version","postScriptName","trademark","manufacturer","designer","description","urlVendor","urlDesigner","licence","licenceURL","---","typoFamilyName","typoSubfamilyName","compatibleFull","sampleText","postScriptCID","wwsFamilyName","wwsSubfamilyName","lightPalette","darkPalette"],u=r+=2,f=0;f<l;f++){var g=a.readUshort(i,r);r+=2;var v=a.readUshort(i,r);r+=2;var _=a.readUshort(i,r);r+=2;var p=a.readUshort(i,r);r+=2;var M=a.readUshort(i,r);r+=2;var E=a.readUshort(i,r);r+=2;var b,R=d[p],T=u+12*l+E;if(g==0)b=a.readUnicode(i,T,M/2);else if(g==3&&v==0)b=a.readUnicode(i,T,M/2);else if(v==0)b=a.readASCII(i,T,M);else if(v==1)b=a.readUnicode(i,T,M/2);else if(v==3)b=a.readUnicode(i,T,M/2);else{if(g!=1)throw"unknown encoding "+v+", platformID: "+g;b=a.readASCII(i,T,M),console.debug("reading unknown MAC encoding "+v+" as ASCII")}var A="p"+g+","+_.toString(16);c[A]==null&&(c[A]={}),c[A][R!==void 0?R:p]=b,c[A]._lang=_}for(var I in c)if(c[I].postScriptName!=null&&c[I]._lang==1033)return c[I];for(var I in c)if(c[I].postScriptName!=null&&c[I]._lang==0)return c[I];for(var I in c)if(c[I].postScriptName!=null&&c[I]._lang==3084)return c[I];for(var I in c)if(c[I].postScriptName!=null)return c[I];for(var I in c){h=I;break}return console.debug("returning name table with languageID "+c[h]._lang),c[h]},e["OS/2"]={},e["OS/2"].parse=function(i,r,o){var a=e._bin.readUshort(i,r);r+=2;var c={};if(a==0)e["OS/2"].version0(i,r,c);else if(a==1)e["OS/2"].version1(i,r,c);else if(a==2||a==3||a==4)e["OS/2"].version2(i,r,c);else{if(a!=5)throw"unknown OS/2 table version: "+a;e["OS/2"].version5(i,r,c)}return c},e["OS/2"].version0=function(i,r,o){var a=e._bin;return o.xAvgCharWidth=a.readShort(i,r),r+=2,o.usWeightClass=a.readUshort(i,r),r+=2,o.usWidthClass=a.readUshort(i,r),r+=2,o.fsType=a.readUshort(i,r),r+=2,o.ySubscriptXSize=a.readShort(i,r),r+=2,o.ySubscriptYSize=a.readShort(i,r),r+=2,o.ySubscriptXOffset=a.readShort(i,r),r+=2,o.ySubscriptYOffset=a.readShort(i,r),r+=2,o.ySuperscriptXSize=a.readShort(i,r),r+=2,o.ySuperscriptYSize=a.readShort(i,r),r+=2,o.ySuperscriptXOffset=a.readShort(i,r),r+=2,o.ySuperscriptYOffset=a.readShort(i,r),r+=2,o.yStrikeoutSize=a.readShort(i,r),r+=2,o.yStrikeoutPosition=a.readShort(i,r),r+=2,o.sFamilyClass=a.readShort(i,r),r+=2,o.panose=a.readBytes(i,r,10),r+=10,o.ulUnicodeRange1=a.readUint(i,r),r+=4,o.ulUnicodeRange2=a.readUint(i,r),r+=4,o.ulUnicodeRange3=a.readUint(i,r),r+=4,o.ulUnicodeRange4=a.readUint(i,r),r+=4,o.achVendID=[a.readInt8(i,r),a.readInt8(i,r+1),a.readInt8(i,r+2),a.readInt8(i,r+3)],r+=4,o.fsSelection=a.readUshort(i,r),r+=2,o.usFirstCharIndex=a.readUshort(i,r),r+=2,o.usLastCharIndex=a.readUshort(i,r),r+=2,o.sTypoAscender=a.readShort(i,r),r+=2,o.sTypoDescender=a.readShort(i,r),r+=2,o.sTypoLineGap=a.readShort(i,r),r+=2,o.usWinAscent=a.readUshort(i,r),r+=2,o.usWinDescent=a.readUshort(i,r),r+=2},e["OS/2"].version1=function(i,r,o){var a=e._bin;return r=e["OS/2"].version0(i,r,o),o.ulCodePageRange1=a.readUint(i,r),r+=4,o.ulCodePageRange2=a.readUint(i,r),r+=4},e["OS/2"].version2=function(i,r,o){var a=e._bin;return r=e["OS/2"].version1(i,r,o),o.sxHeight=a.readShort(i,r),r+=2,o.sCapHeight=a.readShort(i,r),r+=2,o.usDefault=a.readUshort(i,r),r+=2,o.usBreak=a.readUshort(i,r),r+=2,o.usMaxContext=a.readUshort(i,r),r+=2},e["OS/2"].version5=function(i,r,o){var a=e._bin;return r=e["OS/2"].version2(i,r,o),o.usLowerOpticalPointSize=a.readUshort(i,r),r+=2,o.usUpperOpticalPointSize=a.readUshort(i,r),r+=2},e.post={},e.post.parse=function(i,r,o){var a=e._bin,c={};return c.version=a.readFixed(i,r),r+=4,c.italicAngle=a.readFixed(i,r),r+=4,c.underlinePosition=a.readShort(i,r),r+=2,c.underlineThickness=a.readShort(i,r),r+=2,c},e==null&&(e={}),e.U==null&&(e.U={}),e.U.codeToGlyph=function(i,r){var o=i.cmap,a=-1;if(o.p0e4!=null?a=o.p0e4:o.p3e1!=null?a=o.p3e1:o.p1e0!=null?a=o.p1e0:o.p0e3!=null&&(a=o.p0e3),a==-1)throw"no familiar platform and encoding!";var c=o.tables[a];if(c.format==0)return r>=c.map.length?0:c.map[r];if(c.format==4){for(var l=-1,h=0;h<c.endCount.length;h++)if(r<=c.endCount[h]){l=h;break}return l==-1||c.startCount[l]>r?0:65535&(c.idRangeOffset[l]!=0?c.glyphIdArray[r-c.startCount[l]+(c.idRangeOffset[l]>>1)-(c.idRangeOffset.length-l)]:r+c.idDelta[l])}if(c.format==12){if(r>c.groups[c.groups.length-1][1])return 0;for(h=0;h<c.groups.length;h++){var d=c.groups[h];if(d[0]<=r&&r<=d[1])return d[2]+(r-d[0])}return 0}throw"unknown cmap table format "+c.format},e.U.glyphToPath=function(i,r){var o={cmds:[],crds:[]};if(i.SVG&&i.SVG.entries[r]){var a=i.SVG.entries[r];return a==null?o:(typeof a=="string"&&(a=e.SVG.toPath(a),i.SVG.entries[r]=a),a)}if(i.CFF){var c={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:i.CFF.Private?i.CFF.Private.defaultWidthX:0,open:!1},l=i.CFF,h=i.CFF.Private;if(l.ROS){for(var d=0;l.FDSelect[d+2]<=r;)d+=2;h=l.FDArray[l.FDSelect[d+1]].Private}e.U._drawCFF(i.CFF.CharStrings[r],c,l,h,o)}else i.glyf&&e.U._drawGlyf(r,i,o);return o},e.U._drawGlyf=function(i,r,o){var a=r.glyf[i];a==null&&(a=r.glyf[i]=e.glyf._parseGlyf(r,i)),a!=null&&(a.noc>-1?e.U._simpleGlyph(a,o):e.U._compoGlyph(a,r,o))},e.U._simpleGlyph=function(i,r){for(var o=0;o<i.noc;o++){for(var a=o==0?0:i.endPts[o-1]+1,c=i.endPts[o],l=a;l<=c;l++){var h=l==a?c:l-1,d=l==c?a:l+1,u=1&i.flags[l],f=1&i.flags[h],g=1&i.flags[d],v=i.xs[l],_=i.ys[l];if(l==a)if(u){if(!f){e.U.P.moveTo(r,v,_);continue}e.U.P.moveTo(r,i.xs[h],i.ys[h])}else f?e.U.P.moveTo(r,i.xs[h],i.ys[h]):e.U.P.moveTo(r,(i.xs[h]+v)/2,(i.ys[h]+_)/2);u?f&&e.U.P.lineTo(r,v,_):g?e.U.P.qcurveTo(r,v,_,i.xs[d],i.ys[d]):e.U.P.qcurveTo(r,v,_,(v+i.xs[d])/2,(_+i.ys[d])/2)}e.U.P.closePath(r)}},e.U._compoGlyph=function(i,r,o){for(var a=0;a<i.parts.length;a++){var c={cmds:[],crds:[]},l=i.parts[a];e.U._drawGlyf(l.glyphIndex,r,c);for(var h=l.m,d=0;d<c.crds.length;d+=2){var u=c.crds[d],f=c.crds[d+1];o.crds.push(u*h.a+f*h.b+h.tx),o.crds.push(u*h.c+f*h.d+h.ty)}for(d=0;d<c.cmds.length;d++)o.cmds.push(c.cmds[d])}},e.U._getGlyphClass=function(i,r){var o=e._lctf.getInterval(r,i);return o==-1?0:r[o+2]},e.U._applySubs=function(i,r,o,a){for(var c=i.length-r-1,l=0;l<o.tabs.length;l++)if(o.tabs[l]!=null){var h,d=o.tabs[l];if(!d.coverage||(h=e._lctf.coverageIndex(d.coverage,i[r]))!=-1){if(o.ltype==1)i[r],d.fmt==1?i[r]=i[r]+d.delta:i[r]=d.newg[h];else if(o.ltype==4)for(var u=d.vals[h],f=0;f<u.length;f++){var g=u[f],v=g.chain.length;if(!(v>c)){for(var _=!0,p=0,M=0;M<v;M++){for(;i[r+p+(1+M)]==-1;)p++;g.chain[M]!=i[r+p+(1+M)]&&(_=!1)}if(_){for(i[r]=g.nglyph,M=0;M<v+p;M++)i[r+M+1]=-1;break}}}else if(o.ltype==5&&d.fmt==2)for(var E=e._lctf.getInterval(d.cDef,i[r]),b=d.cDef[E+2],R=d.scset[b],T=0;T<R.length;T++){var A=R[T],I=A.input;if(!(I.length>c)){for(_=!0,M=0;M<I.length;M++){var x=e._lctf.getInterval(d.cDef,i[r+1+M]);if(E==-1&&d.cDef[x+2]!=I[M]){_=!1;break}}if(_){var y=A.substLookupRecords;for(f=0;f<y.length;f+=2)y[f],y[f+1]}}}else if(o.ltype==6&&d.fmt==3){if(!e.U._glsCovered(i,d.backCvg,r-d.backCvg.length)||!e.U._glsCovered(i,d.inptCvg,r)||!e.U._glsCovered(i,d.ahedCvg,r+d.inptCvg.length))continue;var U=d.lookupRec;for(T=0;T<U.length;T+=2){E=U[T];var D=a[U[T+1]];e.U._applySubs(i,r+E,D,a)}}}}},e.U._glsCovered=function(i,r,o){for(var a=0;a<r.length;a++)if(e._lctf.coverageIndex(r[a],i[o+a])==-1)return!1;return!0},e.U.glyphsToPath=function(i,r,o){for(var a={cmds:[],crds:[]},c=0,l=0;l<r.length;l++){var h=r[l];if(h!=-1){for(var d=l<r.length-1&&r[l+1]!=-1?r[l+1]:0,u=e.U.glyphToPath(i,h),f=0;f<u.crds.length;f+=2)a.crds.push(u.crds[f]+c),a.crds.push(u.crds[f+1]);for(o&&a.cmds.push(o),f=0;f<u.cmds.length;f++)a.cmds.push(u.cmds[f]);o&&a.cmds.push("X"),c+=i.hmtx.aWidth[h],l<r.length-1&&(c+=e.U.getPairAdjustment(i,h,d))}}return a},e.U.P={},e.U.P.moveTo=function(i,r,o){i.cmds.push("M"),i.crds.push(r,o)},e.U.P.lineTo=function(i,r,o){i.cmds.push("L"),i.crds.push(r,o)},e.U.P.curveTo=function(i,r,o,a,c,l,h){i.cmds.push("C"),i.crds.push(r,o,a,c,l,h)},e.U.P.qcurveTo=function(i,r,o,a,c){i.cmds.push("Q"),i.crds.push(r,o,a,c)},e.U.P.closePath=function(i){i.cmds.push("Z")},e.U._drawCFF=function(i,r,o,a,c){for(var l=r.stack,h=r.nStems,d=r.haveWidth,u=r.width,f=r.open,g=0,v=r.x,_=r.y,p=0,M=0,E=0,b=0,R=0,T=0,A=0,I=0,x=0,y=0,U={val:0,size:0};g<i.length;){e.CFF.getCharString(i,g,U);var D=U.val;if(g+=U.size,D=="o1"||D=="o18")l.length%2!=0&&!d&&(u=l.shift()+a.nominalWidthX),h+=l.length>>1,l.length=0,d=!0;else if(D=="o3"||D=="o23")l.length%2!=0&&!d&&(u=l.shift()+a.nominalWidthX),h+=l.length>>1,l.length=0,d=!0;else if(D=="o4")l.length>1&&!d&&(u=l.shift()+a.nominalWidthX,d=!0),f&&e.U.P.closePath(c),_+=l.pop(),e.U.P.moveTo(c,v,_),f=!0;else if(D=="o5")for(;l.length>0;)v+=l.shift(),_+=l.shift(),e.U.P.lineTo(c,v,_);else if(D=="o6"||D=="o7")for(var F=l.length,N=D=="o6",X=0;X<F;X++){var H=l.shift();N?v+=H:_+=H,N=!N,e.U.P.lineTo(c,v,_)}else if(D=="o8"||D=="o24"){F=l.length;for(var oe=0;oe+6<=F;)p=v+l.shift(),M=_+l.shift(),E=p+l.shift(),b=M+l.shift(),v=E+l.shift(),_=b+l.shift(),e.U.P.curveTo(c,p,M,E,b,v,_),oe+=6;D=="o24"&&(v+=l.shift(),_+=l.shift(),e.U.P.lineTo(c,v,_))}else{if(D=="o11")break;if(D=="o1234"||D=="o1235"||D=="o1236"||D=="o1237")D=="o1234"&&(M=_,E=(p=v+l.shift())+l.shift(),y=b=M+l.shift(),T=b,I=_,v=(A=(R=(x=E+l.shift())+l.shift())+l.shift())+l.shift(),e.U.P.curveTo(c,p,M,E,b,x,y),e.U.P.curveTo(c,R,T,A,I,v,_)),D=="o1235"&&(p=v+l.shift(),M=_+l.shift(),E=p+l.shift(),b=M+l.shift(),x=E+l.shift(),y=b+l.shift(),R=x+l.shift(),T=y+l.shift(),A=R+l.shift(),I=T+l.shift(),v=A+l.shift(),_=I+l.shift(),l.shift(),e.U.P.curveTo(c,p,M,E,b,x,y),e.U.P.curveTo(c,R,T,A,I,v,_)),D=="o1236"&&(p=v+l.shift(),M=_+l.shift(),E=p+l.shift(),y=b=M+l.shift(),T=b,A=(R=(x=E+l.shift())+l.shift())+l.shift(),I=T+l.shift(),v=A+l.shift(),e.U.P.curveTo(c,p,M,E,b,x,y),e.U.P.curveTo(c,R,T,A,I,v,_)),D=="o1237"&&(p=v+l.shift(),M=_+l.shift(),E=p+l.shift(),b=M+l.shift(),x=E+l.shift(),y=b+l.shift(),R=x+l.shift(),T=y+l.shift(),A=R+l.shift(),I=T+l.shift(),Math.abs(A-v)>Math.abs(I-_)?v=A+l.shift():_=I+l.shift(),e.U.P.curveTo(c,p,M,E,b,x,y),e.U.P.curveTo(c,R,T,A,I,v,_));else if(D=="o14"){if(l.length>0&&!d&&(u=l.shift()+o.nominalWidthX,d=!0),l.length==4){var K=l.shift(),Q=l.shift(),$=l.shift(),k=l.shift(),Y=e.CFF.glyphBySE(o,$),ie=e.CFF.glyphBySE(o,k);e.U._drawCFF(o.CharStrings[Y],r,o,a,c),r.x=K,r.y=Q,e.U._drawCFF(o.CharStrings[ie],r,o,a,c)}f&&(e.U.P.closePath(c),f=!1)}else if(D=="o19"||D=="o20")l.length%2!=0&&!d&&(u=l.shift()+a.nominalWidthX),h+=l.length>>1,l.length=0,d=!0,g+=h+7>>3;else if(D=="o21")l.length>2&&!d&&(u=l.shift()+a.nominalWidthX,d=!0),_+=l.pop(),v+=l.pop(),f&&e.U.P.closePath(c),e.U.P.moveTo(c,v,_),f=!0;else if(D=="o22")l.length>1&&!d&&(u=l.shift()+a.nominalWidthX,d=!0),v+=l.pop(),f&&e.U.P.closePath(c),e.U.P.moveTo(c,v,_),f=!0;else if(D=="o25"){for(;l.length>6;)v+=l.shift(),_+=l.shift(),e.U.P.lineTo(c,v,_);p=v+l.shift(),M=_+l.shift(),E=p+l.shift(),b=M+l.shift(),v=E+l.shift(),_=b+l.shift(),e.U.P.curveTo(c,p,M,E,b,v,_)}else if(D=="o26")for(l.length%2&&(v+=l.shift());l.length>0;)p=v,M=_+l.shift(),v=E=p+l.shift(),_=(b=M+l.shift())+l.shift(),e.U.P.curveTo(c,p,M,E,b,v,_);else if(D=="o27")for(l.length%2&&(_+=l.shift());l.length>0;)M=_,E=(p=v+l.shift())+l.shift(),b=M+l.shift(),v=E+l.shift(),_=b,e.U.P.curveTo(c,p,M,E,b,v,_);else if(D=="o10"||D=="o29"){var se=D=="o10"?a:o;if(l.length==0)console.debug("error: empty stack");else{var ee=l.pop(),W=se.Subrs[ee+se.Bias];r.x=v,r.y=_,r.nStems=h,r.haveWidth=d,r.width=u,r.open=f,e.U._drawCFF(W,r,o,a,c),v=r.x,_=r.y,h=r.nStems,d=r.haveWidth,u=r.width,f=r.open}}else if(D=="o30"||D=="o31"){var V=l.length,te=(oe=0,D=="o31");for(oe+=V-(F=-3&V);oe<F;)te?(M=_,E=(p=v+l.shift())+l.shift(),_=(b=M+l.shift())+l.shift(),F-oe==5?(v=E+l.shift(),oe++):v=E,te=!1):(p=v,M=_+l.shift(),E=p+l.shift(),b=M+l.shift(),v=E+l.shift(),F-oe==5?(_=b+l.shift(),oe++):_=b,te=!0),e.U.P.curveTo(c,p,M,E,b,v,_),oe+=4}else{if((D+"").charAt(0)=="o")throw console.debug("Unknown operation: "+D,i),D;l.push(D)}}}r.x=v,r.y=_,r.nStems=h,r.haveWidth=d,r.width=u,r.open=f};var t=e,n={Typr:t};return s.Typr=t,s.default=n,Object.defineProperty(s,"__esModule",{value:!0}),s}({}).Typr}/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/function NC(){return function(s){var e=Uint8Array,t=Uint16Array,n=Uint32Array,i=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),r=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),o=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),a=function(D,F){for(var N=new t(31),X=0;X<31;++X)N[X]=F+=1<<D[X-1];var H=new n(N[30]);for(X=1;X<30;++X)for(var oe=N[X];oe<N[X+1];++oe)H[oe]=oe-N[X]<<5|X;return[N,H]},c=a(i,2),l=c[0],h=c[1];l[28]=258,h[258]=28;for(var d=a(r,0)[0],u=new t(32768),f=0;f<32768;++f){var g=(43690&f)>>>1|(21845&f)<<1;g=(61680&(g=(52428&g)>>>2|(13107&g)<<2))>>>4|(3855&g)<<4,u[f]=((65280&g)>>>8|(255&g)<<8)>>>1}var v=function(D,F,N){for(var X=D.length,H=0,oe=new t(F);H<X;++H)++oe[D[H]-1];var K,Q=new t(F);for(H=0;H<F;++H)Q[H]=Q[H-1]+oe[H-1]<<1;{K=new t(1<<F);var $=15-F;for(H=0;H<X;++H)if(D[H])for(var k=H<<4|D[H],Y=F-D[H],ie=Q[D[H]-1]++<<Y,se=ie|(1<<Y)-1;ie<=se;++ie)K[u[ie]>>>$]=k}return K},_=new e(288);for(f=0;f<144;++f)_[f]=8;for(f=144;f<256;++f)_[f]=9;for(f=256;f<280;++f)_[f]=7;for(f=280;f<288;++f)_[f]=8;var p=new e(32);for(f=0;f<32;++f)p[f]=5;var M=v(_,9),E=v(p,5),b=function(D){for(var F=D[0],N=1;N<D.length;++N)D[N]>F&&(F=D[N]);return F},R=function(D,F,N){var X=F/8|0;return(D[X]|D[X+1]<<8)>>(7&F)&N},T=function(D,F){var N=F/8|0;return(D[N]|D[N+1]<<8|D[N+2]<<16)>>(7&F)},A=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],I=function(D,F,N){var X=new Error(F||A[D]);if(X.code=D,Error.captureStackTrace&&Error.captureStackTrace(X,I),!N)throw X;return X},x=function(D,F,N){var X=D.length;if(!X||N&&!N.l&&X<5)return F||new e(0);var H=!F||N,oe=!N||N.i;N||(N={}),F||(F=new e(3*X));var K,Q=function(Ae){var Le=F.length;if(Ae>Le){var Ce=new e(Math.max(2*Le,Ae));Ce.set(F),F=Ce}},$=N.f||0,k=N.p||0,Y=N.b||0,ie=N.l,se=N.d,ee=N.m,W=N.n,V=8*X;do{if(!ie){N.f=$=R(D,k,1);var te=R(D,k+1,3);if(k+=3,!te){var ge=D[(Re=((K=k)/8|0)+(7&K&&1)+4)-4]|D[Re-3]<<8,we=Re+ge;if(we>X){oe&&I(0);break}H&&Q(Y+ge),F.set(D.subarray(Re,we),Y),N.b=Y+=ge,N.p=k=8*we;continue}if(te==1)ie=M,se=E,ee=9,W=5;else if(te==2){var me=R(D,k,31)+257,be=R(D,k+10,15)+4,L=me+R(D,k+5,31)+1;k+=14;for(var Oe=new e(L),Ee=new e(19),Te=0;Te<be;++Te)Ee[o[Te]]=R(D,k+3*Te,7);k+=3*be;var ve=b(Ee),Se=(1<<ve)-1,_e=v(Ee,ve);for(Te=0;Te<L;){var Re,fe=_e[R(D,k,Se)];if(k+=15&fe,(Re=fe>>>4)<16)Oe[Te++]=Re;else{var Ve=0,P=0;for(Re==16?(P=3+R(D,k,3),k+=2,Ve=Oe[Te-1]):Re==17?(P=3+R(D,k,7),k+=3):Re==18&&(P=11+R(D,k,127),k+=7);P--;)Oe[Te++]=Ve}}var S=Oe.subarray(0,me),B=Oe.subarray(me);ee=b(S),W=b(B),ie=v(S,ee),se=v(B,W)}else I(1);if(k>V){oe&&I(0);break}}H&&Q(Y+131072);for(var re=(1<<ee)-1,ne=(1<<W)-1,J=k;;J=k){var Me=(Ve=ie[T(D,k)&re])>>>4;if((k+=15&Ve)>V){oe&&I(0);break}if(Ve||I(2),Me<256)F[Y++]=Me;else{if(Me==256){J=k,ie=null;break}var ue=Me-254;if(Me>264){var De=i[Te=Me-257];ue=R(D,k,(1<<De)-1)+l[Te],k+=De}var Ie=se[T(D,k)&ne],de=Ie>>>4;if(Ie||I(3),k+=15&Ie,B=d[de],de>3&&(De=r[de],B+=T(D,k)&(1<<De)-1,k+=De),k>V){oe&&I(0);break}H&&Q(Y+131072);for(var ye=Y+ue;Y<ye;Y+=4)F[Y]=F[Y-B],F[Y+1]=F[Y+1-B],F[Y+2]=F[Y+2-B],F[Y+3]=F[Y+3-B];Y=ye}}N.l=ie,N.p=J,N.b=Y,ie&&($=1,N.m=ee,N.d=se,N.n=W)}while(!$);return Y==F.length?F:function(Ae,Le,Ce){(Ce==null||Ce>Ae.length)&&(Ce=Ae.length);var Xe=new(Ae instanceof t?t:Ae instanceof n?n:e)(Ce-Le);return Xe.set(Ae.subarray(Le,Ce)),Xe}(F,0,Y)},y=new e(0),U=typeof TextDecoder<"u"&&new TextDecoder;try{U.decode(y,{stream:!0})}catch{}return s.convert_streams=function(D){var F=new DataView(D),N=0;function X(){var me=F.getUint16(N);return N+=2,me}function H(){var me=F.getUint32(N);return N+=4,me}function oe(me){ge.setUint16(we,me),we+=2}function K(me){ge.setUint32(we,me),we+=4}for(var Q={signature:H(),flavor:H(),length:H(),numTables:X(),reserved:X(),totalSfntSize:H(),majorVersion:X(),minorVersion:X(),metaOffset:H(),metaLength:H(),metaOrigLength:H(),privOffset:H(),privLength:H()},$=0;Math.pow(2,$)<=Q.numTables;)$++;$--;for(var k=16*Math.pow(2,$),Y=16*Q.numTables-k,ie=12,se=[],ee=0;ee<Q.numTables;ee++)se.push({tag:H(),offset:H(),compLength:H(),origLength:H(),origChecksum:H()}),ie+=16;var W,V=new Uint8Array(12+16*se.length+se.reduce(function(me,be){return me+be.origLength+4},0)),te=V.buffer,ge=new DataView(te),we=0;return K(Q.flavor),oe(Q.numTables),oe(k),oe($),oe(Y),se.forEach(function(me){K(me.tag),K(me.origChecksum),K(ie),K(me.origLength),me.outOffset=ie,(ie+=me.origLength)%4!=0&&(ie+=4-ie%4)}),se.forEach(function(me){var be,L=D.slice(me.offset,me.offset+me.compLength);if(me.compLength!=me.origLength){var Oe=new Uint8Array(me.origLength);be=new Uint8Array(L,2),x(be,Oe)}else Oe=new Uint8Array(L);V.set(Oe,me.outOffset);var Ee=0;(ie=me.outOffset+me.origLength)%4!=0&&(Ee=4-ie%4),V.set(new Uint8Array(Ee).buffer,me.outOffset+me.origLength),W=ie+Ee}),te.slice(0,W)},Object.defineProperty(s,"__esModule",{value:!0}),s}({}).convert_streams}function OC(s,e){const t={M:2,L:2,Q:4,C:6,Z:0},n={C:"18g,ca,368,1kz",D:"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",R:"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",L:"x9u,jff,a,fd,jv",T:"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n"},i=1,r=2,o=4,a=8,c=16,l=32;let h;function d(A){if(!h){const I={R:r,L:i,D:o,C:c,U:l,T:a};h=new Map;for(let x in n){let y=0;n[x].split(",").forEach(U=>{let[D,F]=U.split("+");D=parseInt(D,36),F=F?parseInt(F,36):0,h.set(y+=D,I[x]);for(let N=F;N--;)h.set(++y,I[x])})}}return h.get(A)||l}const u=1,f=2,g=3,v=4,_=[null,"isol","init","fina","medi"];function p(A){const I=new Uint8Array(A.length);let x=l,y=u,U=-1;for(let D=0;D<A.length;D++){const F=A.codePointAt(D);let N=d(F)|0,X=u;N&a||(x&(i|o|c)?N&(r|o|c)?(X=g,(y===u||y===g)&&I[U]++):N&(i|l)&&(y===f||y===v)&&I[U]--:x&(r|l)&&(y===f||y===v)&&I[U]--,y=I[D]=X,x=N,U=D,F>65535&&D++)}return I}function M(A,I){const x=[];for(let U=0;U<I.length;U++){const D=I.codePointAt(U);D>65535&&U++,x.push(s.U.codeToGlyph(A,D))}const y=A.GSUB;if(y){const{lookupList:U,featureList:D}=y;let F;const N=/^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws|ccmp)$/,X=[];D.forEach(H=>{if(N.test(H.tag))for(let oe=0;oe<H.tab.length;oe++){if(X[H.tab[oe]])continue;X[H.tab[oe]]=!0;const K=U[H.tab[oe]],Q=/^(isol|init|fina|medi)$/.test(H.tag);Q&&!F&&(F=p(I));for(let $=0;$<x.length;$++)(!F||!Q||_[F[$]]===H.tag)&&s.U._applySubs(x,$,K,U)}})}return x}function E(A,I){const x=new Int16Array(I.length*3);let y=0;for(;y<I.length;y++){const N=I[y];if(N===-1)continue;x[y*3+2]=A.hmtx.aWidth[N];const X=A.GPOS;if(X){const H=X.lookupList;for(let oe=0;oe<H.length;oe++){const K=H[oe];for(let Q=0;Q<K.tabs.length;Q++){const $=K.tabs[Q];if(K.ltype===1){if(s._lctf.coverageIndex($.coverage,N)!==-1&&$.pos){F($.pos,y);break}}else if(K.ltype===2){let k=null,Y=U();if(Y!==-1){const ie=s._lctf.coverageIndex($.coverage,I[Y]);if(ie!==-1){if($.fmt===1){const se=$.pairsets[ie];for(let ee=0;ee<se.length;ee++)se[ee].gid2===N&&(k=se[ee])}else if($.fmt===2){const se=s.U._getGlyphClass(I[Y],$.classDef1),ee=s.U._getGlyphClass(N,$.classDef2);k=$.matrix[se][ee]}if(k){k.val1&&F(k.val1,Y),k.val2&&F(k.val2,y);break}}}}else if(K.ltype===4){const k=s._lctf.coverageIndex($.markCoverage,N);if(k!==-1){const Y=U(D),ie=Y===-1?-1:s._lctf.coverageIndex($.baseCoverage,I[Y]);if(ie!==-1){const se=$.markArray[k],ee=$.baseArray[ie][se.markClass];x[y*3]=ee.x-se.x+x[Y*3]-x[Y*3+2],x[y*3+1]=ee.y-se.y+x[Y*3+1];break}}}else if(K.ltype===6){const k=s._lctf.coverageIndex($.mark1Coverage,N);if(k!==-1){const Y=U();if(Y!==-1){const ie=I[Y];if(b(A,ie)===3){const se=s._lctf.coverageIndex($.mark2Coverage,ie);if(se!==-1){const ee=$.mark1Array[k],W=$.mark2Array[se][ee.markClass];x[y*3]=W.x-ee.x+x[Y*3]-x[Y*3+2],x[y*3+1]=W.y-ee.y+x[Y*3+1];break}}}}}}}}else if(A.kern&&!A.cff){const H=U();if(H!==-1){const oe=A.kern.glyph1.indexOf(I[H]);if(oe!==-1){const K=A.kern.rval[oe].glyph2.indexOf(N);K!==-1&&(x[H*3+2]+=A.kern.rval[oe].vals[K])}}}}return x;function U(N){for(let X=y-1;X>=0;X--)if(I[X]!==-1&&(!N||N(I[X])))return X;return-1}function D(N){return b(A,N)===1}function F(N,X){for(let H=0;H<3;H++)x[X*3+H]+=N[H]||0}}function b(A,I){const x=A.GDEF&&A.GDEF.glyphClassDef;return x?s.U._getGlyphClass(I,x):0}function R(...A){for(let I=0;I<A.length;I++)if(typeof A[I]=="number")return A[I]}function T(A){const I=Object.create(null),x=A["OS/2"],y=A.hhea,U=A.head.unitsPerEm,D=R(x&&x.sTypoAscender,y&&y.ascender,U),F={unitsPerEm:U,ascender:D,descender:R(x&&x.sTypoDescender,y&&y.descender,0),capHeight:R(x&&x.sCapHeight,D),xHeight:R(x&&x.sxHeight,D),lineGap:R(x&&x.sTypoLineGap,y&&y.lineGap),supportsCodePoint(N){return s.U.codeToGlyph(A,N)>0},forEachGlyph(N,X,H,oe){let K=0;const Q=1/F.unitsPerEm*X,$=M(A,N);let k=0;const Y=E(A,$);return $.forEach((ie,se)=>{if(ie!==-1){let ee=I[ie];if(!ee){const{cmds:W,crds:V}=s.U.glyphToPath(A,ie);let te="",ge=0;for(let Oe=0,Ee=W.length;Oe<Ee;Oe++){const Te=t[W[Oe]];te+=W[Oe];for(let ve=1;ve<=Te;ve++)te+=(ve>1?",":"")+V[ge++]}let we,me,be,L;if(V.length){we=me=1/0,be=L=-1/0;for(let Oe=0,Ee=V.length;Oe<Ee;Oe+=2){let Te=V[Oe],ve=V[Oe+1];Te<we&&(we=Te),ve<me&&(me=ve),Te>be&&(be=Te),ve>L&&(L=ve)}}else we=be=me=L=0;ee=I[ie]={index:ie,advanceWidth:A.hmtx.aWidth[ie],xMin:we,yMin:me,xMax:be,yMax:L,path:te}}oe.call(null,ee,K+Y[se*3]*Q,Y[se*3+1]*Q,k),K+=Y[se*3+2]*Q,H&&(K+=H*X)}k+=N.codePointAt(k)>65535?2:1}),K}};return F}return function(I){const x=new Uint8Array(I,0,4),y=s._bin.readASCII(x,0,4);if(y==="wOFF")I=e(I);else if(y==="wOF2")throw new Error("woff2 fonts not supported");return T(s.parse(I)[0])}}const kC=zr({name:"Typr Font Parser",dependencies:[FC,NC,OC],init(s,e,t){const n=s(),i=e();return t(n,i)}});/*!
Custom bundle of @unicode-font-resolver/client v1.0.2 (https://github.com/lojjic/unicode-font-resolver)
for use in Troika text rendering. 
Original MIT license applies
*/function zC(){return function(s){var e=function(){this.buckets=new Map};e.prototype.add=function(E){var b=E>>5;this.buckets.set(b,(this.buckets.get(b)||0)|1<<(31&E))},e.prototype.has=function(E){var b=this.buckets.get(E>>5);return b!==void 0&&(b&1<<(31&E))!=0},e.prototype.serialize=function(){var E=[];return this.buckets.forEach(function(b,R){E.push((+R).toString(36)+":"+b.toString(36))}),E.join(",")},e.prototype.deserialize=function(E){var b=this;this.buckets.clear(),E.split(",").forEach(function(R){var T=R.split(":");b.buckets.set(parseInt(T[0],36),parseInt(T[1],36))})};var t=Math.pow(2,8),n=t-1,i=~n;function r(E){var b=function(T){return T&i}(E).toString(16),R=function(T){return(T&i)+t-1}(E).toString(16);return"codepoint-index/plane"+(E>>16)+"/"+b+"-"+R+".json"}function o(E,b){var R=E&n,T=b.codePointAt(R/6|0);return((T=(T||48)-48)&1<<R%6)!=0}function a(E,b){var R;(R=E,R.replace(/U\+/gi,"").replace(/^,+|,+$/g,"").split(/,+/).map(function(T){return T.split("-").map(function(A){return parseInt(A.trim(),16)})})).forEach(function(T){var A=T[0],I=T[1];I===void 0&&(I=A),b(A,I)})}function c(E,b){a(E,function(R,T){for(var A=R;A<=T;A++)b(A)})}var l={},h={},d=new WeakMap,u="https://cdn.jsdelivr.net/gh/lojjic/unicode-font-resolver@v1.0.1/packages/data";function f(E){var b=d.get(E);return b||(b=new e,c(E.ranges,function(R){return b.add(R)}),d.set(E,b)),b}var g,v=new Map;function _(E,b,R){return E[b]?b:E[R]?R:function(T){for(var A in T)return A}(E)}function p(E,b){var R=b;if(!E.includes(R)){R=1/0;for(var T=0;T<E.length;T++)Math.abs(E[T]-b)<Math.abs(R-b)&&(R=E[T])}return R}function M(E){return g||(g=new Set,c("9-D,20,85,A0,1680,2000-200A,2028-202F,205F,3000",function(b){g.add(b)})),g.has(E)}return s.CodePointSet=e,s.clearCache=function(){l={},h={}},s.getFontsForString=function(E,b){b===void 0&&(b={});var R,T=b.lang;T===void 0&&(T=new RegExp("\\p{Script=Hangul}","u").test(R=E)?"ko":new RegExp("\\p{Script=Hiragana}|\\p{Script=Katakana}","u").test(R)?"ja":"en");var A=b.category;A===void 0&&(A="sans-serif");var I=b.style;I===void 0&&(I="normal");var x=b.weight;x===void 0&&(x=400);var y=(b.dataUrl||u).replace(/\/$/g,""),U=new Map,D=new Uint8Array(E.length),F={},N={},X=new Array(E.length),H=new Map,oe=!1;function K(k){var Y=v.get(k);return Y||(Y=fetch(y+"/"+k).then(function(ie){if(!ie.ok)throw new Error(ie.statusText);return ie.json().then(function(se){if(!Array.isArray(se)||se[0]!==1)throw new Error("Incorrect schema version; need 1, got "+se[0]);return se[1]})}).catch(function(ie){if(y!==u)return oe||(console.error('unicode-font-resolver: Failed loading from dataUrl "'+y+'", trying default CDN. '+ie.message),oe=!0),y=u,v.delete(k),K(k);throw ie}),v.set(k,Y)),Y}for(var Q=function(k){var Y=E.codePointAt(k),ie=r(Y);X[k]=ie,l[ie]||H.has(ie)||H.set(ie,K(ie).then(function(se){l[ie]=se})),Y>65535&&(k++,$=k)},$=0;$<E.length;$++)Q($);return Promise.all(H.values()).then(function(){H.clear();for(var k=function(ie){var se=E.codePointAt(ie),ee=null,W=l[X[ie]],V=void 0;for(var te in W){var ge=N[te];if(ge===void 0&&(ge=N[te]=new RegExp(te).test(T||"en")),ge){for(var we in V=te,W[te])if(o(se,W[te][we])){ee=we;break}break}}if(!ee){e:for(var me in W)if(me!==V){for(var be in W[me])if(o(se,W[me][be])){ee=be;break e}}}ee||(console.debug("No font coverage for U+"+se.toString(16)),ee="latin"),X[ie]=ee,h[ee]||H.has(ee)||H.set(ee,K("font-meta/"+ee+".json").then(function(L){h[ee]=L})),se>65535&&(ie++,Y=ie)},Y=0;Y<E.length;Y++)k(Y);return Promise.all(H.values())}).then(function(){for(var k,Y=null,ie=0;ie<E.length;ie++){var se=E.codePointAt(ie);if(Y&&(M(se)||f(Y).has(se)))D[ie]=D[ie-1];else{Y=h[X[ie]];var ee=F[Y.id];if(!ee){var W=Y.typeforms,V=_(W,A,"sans-serif"),te=_(W[V],I,"normal"),ge=p((k=W[V])===null||k===void 0?void 0:k[te],x);ee=F[Y.id]=y+"/font-files/"+Y.id+"/"+V+"."+te+"."+ge+".woff"}var we=U.get(ee);we==null&&(we=U.size,U.set(ee,we)),D[ie]=we}se>65535&&(ie++,D[ie]=D[ie-1])}return{fontUrls:Array.from(U.keys()),chars:D}})},Object.defineProperty(s,"__esModule",{value:!0}),s}({})}function BC(s,e){const t=Object.create(null),n=Object.create(null);function i(o,a){const c=l=>{console.error(`Failure loading font ${o}`,l)};try{const l=new XMLHttpRequest;l.open("get",o,!0),l.responseType="arraybuffer",l.onload=function(){if(l.status>=400)c(new Error(l.statusText));else if(l.status>0)try{const h=s(l.response);h.src=o,a(h)}catch(h){c(h)}},l.onerror=c,l.send()}catch(l){c(l)}}function r(o,a){let c=t[o];c?a(c):n[o]?n[o].push(a):(n[o]=[a],i(o,l=>{l.src=o,t[o]=l,n[o].forEach(h=>h(l)),delete n[o]}))}return function(o,a,{lang:c,fonts:l=[],style:h="normal",weight:d="normal",unicodeFontsURL:u}={}){const f=new Uint8Array(o.length),g=[];o.length||M();const v=new Map,_=[];if(h!=="italic"&&(h="normal"),typeof d!="number"&&(d=d==="bold"?700:400),l&&!Array.isArray(l)&&(l=[l]),l=l.slice().filter(b=>!b.lang||b.lang.test(c)).reverse(),l.length){let A=0;(function I(x=0){for(let y=x,U=o.length;y<U;y++){const D=o.codePointAt(y);if(A===1&&g[f[y-1]].supportsCodePoint(D)||y>0&&/\s/.test(o[y]))f[y]=f[y-1],A===2&&(_[_.length-1][1]=y);else for(let F=f[y],N=l.length;F<=N;F++)if(F===N){const X=A===2?_[_.length-1]:_[_.length]=[y,y];X[1]=y,A=2}else{f[y]=F;const{src:X,unicodeRange:H}=l[F];if(!H||E(D,H)){const oe=t[X];if(!oe){r(X,()=>{I(y)});return}if(oe.supportsCodePoint(D)){let K=v.get(oe);typeof K!="number"&&(K=g.length,g.push(oe),v.set(oe,K)),f[y]=K,A=1;break}}}D>65535&&y+1<U&&(f[y+1]=f[y],y++,A===2&&(_[_.length-1][1]=y))}p()})()}else _.push([0,o.length-1]),p();function p(){if(_.length){const b=_.map(R=>o.substring(R[0],R[1]+1)).join(`
`);e.getFontsForString(b,{lang:c||void 0,style:h,weight:d,dataUrl:u}).then(({fontUrls:R,chars:T})=>{const A=g.length;let I=0;_.forEach(y=>{for(let U=0,D=y[1]-y[0];U<=D;U++)f[y[0]+U]=T[I++]+A;I++});let x=0;R.forEach((y,U)=>{r(y,D=>{g[U+A]=D,++x===R.length&&M()})})})}else M()}function M(){a({chars:f,fonts:g})}function E(b,R){for(let T=0;T<R.length;T++){const[A,I=A]=R[T];if(A<=b&&b<=I)return!0}return!1}}}const GC=zr({name:"FontResolver",dependencies:[BC,kC,zC],init(s,e,t){return s(e,t())}});function HC(s,e){const n=/[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,i="[^\\S\\u00A0]",r=new RegExp(`${i}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`);function o({text:g,lang:v,fonts:_,style:p,weight:M,preResolvedFonts:E,unicodeFontsURL:b},R){const T=({chars:A,fonts:I})=>{let x,y;const U=[];for(let D=0;D<A.length;D++)A[D]!==y?(y=A[D],U.push(x={start:D,end:D,fontObj:I[A[D]]})):x.end=D;R(U)};E?T(E):s(g,T,{lang:v,fonts:_,style:p,weight:M,unicodeFontsURL:b})}function a({text:g="",font:v,lang:_,sdfGlyphSize:p=64,fontSize:M=400,fontWeight:E=1,fontStyle:b="normal",letterSpacing:R=0,lineHeight:T="normal",maxWidth:A=1/0,direction:I,textAlign:x="left",textIndent:y=0,whiteSpace:U="normal",overflowWrap:D="normal",anchorX:F=0,anchorY:N=0,metricsOnly:X=!1,unicodeFontsURL:H,preResolvedFonts:oe=null,includeCaretPositions:K=!1,chunkedBoundsSize:Q=8192,colorRanges:$=null},k){const Y=d(),ie={fontLoad:0,typesetting:0};g.indexOf("\r")>-1&&(console.info("Typesetter: got text with \\r chars; normalizing to \\n"),g=g.replace(/\r\n/g,`
`).replace(/\r/g,`
`)),M=+M,R=+R,A=+A,T=T||"normal",y=+y,o({text:g,lang:_,style:b,weight:E,fonts:typeof v=="string"?[{src:v}]:v,unicodeFontsURL:H,preResolvedFonts:oe},se=>{ie.fontLoad=d()-Y;const ee=isFinite(A);let W=null,V=null,te=null,ge=null,we=null,me=null,be=null,L=null,Oe=0,Ee=0,Te=U!=="nowrap";const ve=new Map,Se=d();let _e=y,Re=0,fe=new u;const Ve=[fe];se.forEach(ne=>{const{fontObj:J}=ne,{ascender:Me,descender:ue,unitsPerEm:De,lineGap:Ie,capHeight:de,xHeight:ye}=J;let Ae=ve.get(J);if(!Ae){const he=M/De,xe=T==="normal"?(Me-ue+Ie)*he:T*M,ke=(xe-(Me-ue)*he)/2,pe=Math.min(xe,(Me-ue)*he),ae=(Me+ue)/2*he+pe/2;Ae={index:ve.size,src:J.src,fontObj:J,fontSizeMult:he,unitsPerEm:De,ascender:Me*he,descender:ue*he,capHeight:de*he,xHeight:ye*he,lineHeight:xe,baseline:-ke-Me*he,caretTop:ae,caretBottom:ae-pe},ve.set(J,Ae)}const{fontSizeMult:Le}=Ae,Ce=g.slice(ne.start,ne.end+1);let Xe,G;J.forEachGlyph(Ce,M,R,(he,xe,ke,pe)=>{xe+=Re,pe+=ne.start,Xe=xe,G=he;const ae=g.charAt(pe),Ue=he.advanceWidth*Le,Be=fe.count;let Ge;if("isEmpty"in he||(he.isWhitespace=!!ae&&new RegExp(i).test(ae),he.canBreakAfter=!!ae&&r.test(ae),he.isEmpty=he.xMin===he.xMax||he.yMin===he.yMax||n.test(ae)),!he.isWhitespace&&!he.isEmpty&&Ee++,Te&&ee&&!he.isWhitespace&&xe+Ue+_e>A&&Be){if(fe.glyphAt(Be-1).glyphObj.canBreakAfter)Ge=new u,_e=-xe;else for(let Mt=Be;Mt--;)if(Mt===0&&D==="break-word"){Ge=new u,_e=-xe;break}else if(fe.glyphAt(Mt).glyphObj.canBreakAfter){Ge=fe.splitAt(Mt+1);const xt=Ge.glyphAt(0).x;_e-=xt;for(let Ct=Ge.count;Ct--;)Ge.glyphAt(Ct).x-=xt;break}Ge&&(fe.isSoftWrapped=!0,fe=Ge,Ve.push(fe),Oe=A)}let qe=fe.glyphAt(fe.count);qe.glyphObj=he,qe.x=xe+_e,qe.y=ke,qe.width=Ue,qe.charIndex=pe,qe.fontData=Ae,ae===`
`&&(fe=new u,Ve.push(fe),_e=-(xe+Ue+R*M)+y)}),Re=Xe+G.advanceWidth*Le+R*M});let P=0;Ve.forEach(ne=>{let J=!0;for(let Me=ne.count;Me--;){const ue=ne.glyphAt(Me);J&&!ue.glyphObj.isWhitespace&&(ne.width=ue.x+ue.width,ne.width>Oe&&(Oe=ne.width),J=!1);let{lineHeight:De,capHeight:Ie,xHeight:de,baseline:ye}=ue.fontData;De>ne.lineHeight&&(ne.lineHeight=De);const Ae=ye-ne.baseline;Ae<0&&(ne.baseline+=Ae,ne.cap+=Ae,ne.ex+=Ae),ne.cap=Math.max(ne.cap,ne.baseline+Ie),ne.ex=Math.max(ne.ex,ne.baseline+de)}ne.baseline-=P,ne.cap-=P,ne.ex-=P,P+=ne.lineHeight});let S=0,B=0;if(F&&(typeof F=="number"?S=-F:typeof F=="string"&&(S=-Oe*(F==="left"?0:F==="center"?.5:F==="right"?1:l(F)))),N&&(typeof N=="number"?B=-N:typeof N=="string"&&(B=N==="top"?0:N==="top-baseline"?-Ve[0].baseline:N==="top-cap"?-Ve[0].cap:N==="top-ex"?-Ve[0].ex:N==="middle"?P/2:N==="bottom"?P:N==="bottom-baseline"?-Ve[Ve.length-1].baseline:l(N)*P)),!X){const ne=e.getEmbeddingLevels(g,I);W=new Uint16Array(Ee),V=new Uint8Array(Ee),te=new Float32Array(Ee*2),ge={},be=[1/0,1/0,-1/0,-1/0],L=[],K&&(me=new Float32Array(g.length*4)),$&&(we=new Uint8Array(Ee*3));let J=0,Me=-1,ue=-1,De,Ie;if(Ve.forEach((de,ye)=>{let{count:Ae,width:Le}=de;if(Ae>0){let Ce=0;for(let pe=Ae;pe--&&de.glyphAt(pe).glyphObj.isWhitespace;)Ce++;let Xe=0,G=0;if(x==="center")Xe=(Oe-Le)/2;else if(x==="right")Xe=Oe-Le;else if(x==="justify"&&de.isSoftWrapped){let pe=0;for(let ae=Ae-Ce;ae--;)de.glyphAt(ae).glyphObj.isWhitespace&&pe++;G=(Oe-Le)/pe}if(G||Xe){let pe=0;for(let ae=0;ae<Ae;ae++){let Ue=de.glyphAt(ae);const Be=Ue.glyphObj;Ue.x+=Xe+pe,G!==0&&Be.isWhitespace&&ae<Ae-Ce&&(pe+=G,Ue.width+=G)}}const he=e.getReorderSegments(g,ne,de.glyphAt(0).charIndex,de.glyphAt(de.count-1).charIndex);for(let pe=0;pe<he.length;pe++){const[ae,Ue]=he[pe];let Be=1/0,Ge=-1/0;for(let qe=0;qe<Ae;qe++)if(de.glyphAt(qe).charIndex>=ae){let Mt=qe,xt=qe;for(;xt<Ae;xt++){let Ct=de.glyphAt(xt);if(Ct.charIndex>Ue)break;xt<Ae-Ce&&(Be=Math.min(Be,Ct.x),Ge=Math.max(Ge,Ct.x+Ct.width))}for(let Ct=Mt;Ct<xt;Ct++){const Ot=de.glyphAt(Ct);Ot.x=Ge-(Ot.x+Ot.width-Be)}break}}let xe;const ke=pe=>xe=pe;for(let pe=0;pe<Ae;pe++){const ae=de.glyphAt(pe);xe=ae.glyphObj;const Ue=xe.index,Be=ne.levels[ae.charIndex]&1;if(Be){const Ge=e.getMirroredCharacter(g[ae.charIndex]);Ge&&ae.fontData.fontObj.forEachGlyph(Ge,0,0,ke)}if(K){const{charIndex:Ge,fontData:qe}=ae,Mt=ae.x+S,xt=ae.x+ae.width+S;me[Ge*4]=Be?xt:Mt,me[Ge*4+1]=Be?Mt:xt,me[Ge*4+2]=de.baseline+qe.caretBottom+B,me[Ge*4+3]=de.baseline+qe.caretTop+B;const Ct=Ge-Me;Ct>1&&h(me,Me,Ct),Me=Ge}if($){const{charIndex:Ge}=ae;for(;Ge>ue;)ue++,$.hasOwnProperty(ue)&&(Ie=$[ue])}if(!xe.isWhitespace&&!xe.isEmpty){const Ge=J++,{fontSizeMult:qe,src:Mt,index:xt}=ae.fontData,Ct=ge[Mt]||(ge[Mt]={});Ct[Ue]||(Ct[Ue]={path:xe.path,pathBounds:[xe.xMin,xe.yMin,xe.xMax,xe.yMax]});const Ot=ae.x+S,gn=ae.y+de.baseline+B;te[Ge*2]=Ot,te[Ge*2+1]=gn;const wn=Ot+xe.xMin*qe,An=gn+xe.yMin*qe,vn=Ot+xe.xMax*qe,bn=gn+xe.yMax*qe;wn<be[0]&&(be[0]=wn),An<be[1]&&(be[1]=An),vn>be[2]&&(be[2]=vn),bn>be[3]&&(be[3]=bn),Ge%Q===0&&(De={start:Ge,end:Ge,rect:[1/0,1/0,-1/0,-1/0]},L.push(De)),De.end++;const Ut=De.rect;if(wn<Ut[0]&&(Ut[0]=wn),An<Ut[1]&&(Ut[1]=An),vn>Ut[2]&&(Ut[2]=vn),bn>Ut[3]&&(Ut[3]=bn),W[Ge]=Ue,V[Ge]=xt,$){const kn=Ge*3;we[kn]=Ie>>16&255,we[kn+1]=Ie>>8&255,we[kn+2]=Ie&255}}}}}),me){const de=g.length-Me;de>1&&h(me,Me,de)}}const re=[];ve.forEach(({index:ne,src:J,unitsPerEm:Me,ascender:ue,descender:De,lineHeight:Ie,capHeight:de,xHeight:ye})=>{re[ne]={src:J,unitsPerEm:Me,ascender:ue,descender:De,lineHeight:Ie,capHeight:de,xHeight:ye}}),ie.typesetting=d()-Se,k({glyphIds:W,glyphFontIndices:V,glyphPositions:te,glyphData:ge,fontData:re,caretPositions:me,glyphColors:we,chunkedBounds:L,fontSize:M,topBaseline:B+Ve[0].baseline,blockBounds:[S,B-P,S+Oe,B],visibleBounds:be,timings:ie})})}function c(g,v){a({...g,metricsOnly:!0},_=>{const[p,M,E,b]=_.blockBounds;v({width:E-p,height:b-M})})}function l(g){let v=g.match(/^([\d.]+)%$/),_=v?parseFloat(v[1]):NaN;return isNaN(_)?0:_/100}function h(g,v,_){const p=g[v*4],M=g[v*4+1],E=g[v*4+2],b=g[v*4+3],R=(M-p)/_;for(let T=0;T<_;T++){const A=(v+T)*4;g[A]=p+R*T,g[A+1]=p+R*(T+1),g[A+2]=E,g[A+3]=b}}function d(){return(self.performance||Date).now()}function u(){this.data=[]}const f=["glyphObj","x","y","width","charIndex","fontData"];return u.prototype={width:0,lineHeight:0,baseline:0,cap:0,ex:0,isSoftWrapped:!1,get count(){return Math.ceil(this.data.length/f.length)},glyphAt(g){let v=u.flyweight;return v.data=this.data,v.index=g,v},splitAt(g){let v=new u;return v.data=this.data.splice(g*f.length),v}},u.flyweight=f.reduce((g,v,_,p)=>(Object.defineProperty(g,v,{get(){return this.data[this.index*f.length+_]},set(M){this.data[this.index*f.length+_]=M}}),g),{data:null,index:0}),{typeset:a,measure:c}}const Yi=()=>(self.performance||Date).now(),Qo=Yu();let kd;function VC(s,e,t,n,i,r,o,a,c,l,h=!0){return h?jC(s,e,t,n,i,r,o,a,c,l).then(null,d=>(kd||(console.warn("WebGL SDF generation failed, falling back to JS",d),kd=!0),Bd(s,e,t,n,i,r,o,a,c,l))):Bd(s,e,t,n,i,r,o,a,c,l)}const Po=[],WC=5;let rl=0;function Ju(){const s=Yi();for(;Po.length&&Yi()-s<WC;)Po.shift()();rl=Po.length?setTimeout(Ju,0):0}const jC=(...s)=>new Promise((e,t)=>{Po.push(()=>{const n=Yi();try{Qo.webgl.generateIntoCanvas(...s),e({timing:Yi()-n})}catch(i){t(i)}}),rl||(rl=setTimeout(Ju,0))}),XC=4,qC=2e3,zd={};let YC=0;function Bd(s,e,t,n,i,r,o,a,c,l){const h="TroikaTextSDFGenerator_JS_"+YC++%XC;let d=zd[h];return d||(d=zd[h]={workerModule:zr({name:h,workerId:h,dependencies:[Yu,Yi],init(u,f){const g=u().javascript.generate;return function(...v){const _=f();return{textureData:g(...v),timing:f()-_}}},getTransferables(u){return[u.textureData.buffer]}}),requests:0,idleTimer:null}),d.requests++,clearTimeout(d.idleTimer),d.workerModule(s,e,t,n,i,r).then(({textureData:u,timing:f})=>{const g=Yi(),v=new Uint8Array(u.length*4);for(let _=0;_<u.length;_++)v[_*4+l]=u[_];return Qo.webglUtils.renderImageData(o,v,a,c,s,e,1<<3-l),f+=Yi()-g,--d.requests===0&&(d.idleTimer=setTimeout(()=>{EC(h)},qC)),{timing:f}})}function KC(s){s._warm||(Qo.webgl.isSupported(s),s._warm=!0)}const JC=Qo.webglUtils.resizeWebGLCanvasWithoutClearing,hs={unicodeFontsURL:null,sdfGlyphSize:64,sdfMargin:1/16,sdfExponent:9,textureWidth:2048},ZC=new rt;function br(){return(self.performance||Date).now()}const Gd=Object.create(null);function $C(s,e){s=e2({},s);const t=br(),n=[];if(s.font&&n.push({label:"user",src:t2(s.font)}),s.font=n,s.text=""+s.text,s.sdfGlyphSize=s.sdfGlyphSize||hs.sdfGlyphSize,s.unicodeFontsURL=s.unicodeFontsURL||hs.unicodeFontsURL,s.colorRanges!=null){let u={};for(let f in s.colorRanges)if(s.colorRanges.hasOwnProperty(f)){let g=s.colorRanges[f];typeof g!="number"&&(g=ZC.set(g).getHex()),u[f]=g}s.colorRanges=u}Object.freeze(s);const{textureWidth:i,sdfExponent:r}=hs,{sdfGlyphSize:o}=s,a=i/o*4;let c=Gd[o];if(!c){const u=document.createElement("canvas");u.width=i,u.height=o*256/a,c=Gd[o]={glyphCount:0,sdfGlyphSize:o,sdfCanvas:u,sdfTexture:new Jt(u,void 0,void 0,void 0,hn,hn),contextLost:!1,glyphsByFont:new Map},c.sdfTexture.generateMipmaps=!1,QC(c)}const{sdfTexture:l,sdfCanvas:h}=c;Qu(s).then(u=>{const{glyphIds:f,glyphFontIndices:g,fontData:v,glyphPositions:_,fontSize:p,timings:M}=u,E=[],b=new Float32Array(f.length*4);let R=0,T=0;const A=br(),I=v.map(F=>{let N=c.glyphsByFont.get(F.src);return N||c.glyphsByFont.set(F.src,N=new Map),N});f.forEach((F,N)=>{const X=g[N],{src:H,unitsPerEm:oe}=v[X];let K=I[X].get(F);if(!K){const{path:ie,pathBounds:se}=u.glyphData[H][F],ee=Math.max(se[2]-se[0],se[3]-se[1])/o*(hs.sdfMargin*o+.5),W=c.glyphCount++,V=[se[0]-ee,se[1]-ee,se[2]+ee,se[3]+ee];I[X].set(F,K={path:ie,atlasIndex:W,sdfViewBox:V}),E.push(K)}const{sdfViewBox:Q}=K,$=_[T++],k=_[T++],Y=p/oe;b[R++]=$+Q[0]*Y,b[R++]=k+Q[1]*Y,b[R++]=$+Q[2]*Y,b[R++]=k+Q[3]*Y,f[N]=K.atlasIndex}),M.quads=(M.quads||0)+(br()-A);const x=br();M.sdf={};const y=h.height,U=Math.ceil(c.glyphCount/a),D=Math.pow(2,Math.ceil(Math.log2(U*o)));D>y&&(console.info(`Increasing SDF texture size ${y}->${D}`),JC(h,i,D),l.dispose()),Promise.all(E.map(F=>Zu(F,c,s.gpuAccelerateSDF).then(({timing:N})=>{M.sdf[F.atlasIndex]=N}))).then(()=>{E.length&&!c.contextLost&&($u(c),l.needsUpdate=!0),M.sdfTotal=br()-x,M.total=br()-t,e(Object.freeze({parameters:s,sdfTexture:l,sdfGlyphSize:o,sdfExponent:r,glyphBounds:b,glyphAtlasIndices:f,glyphColors:u.glyphColors,caretPositions:u.caretPositions,chunkedBounds:u.chunkedBounds,ascender:u.ascender,descender:u.descender,lineHeight:u.lineHeight,capHeight:u.capHeight,xHeight:u.xHeight,topBaseline:u.topBaseline,blockBounds:u.blockBounds,visibleBounds:u.visibleBounds,timings:u.timings}))})}),Promise.resolve().then(()=>{c.contextLost||KC(h)})}function Zu({path:s,atlasIndex:e,sdfViewBox:t},{sdfGlyphSize:n,sdfCanvas:i,contextLost:r},o){if(r)return Promise.resolve({timing:-1});const{textureWidth:a,sdfExponent:c}=hs,l=Math.max(t[2]-t[0],t[3]-t[1]),h=Math.floor(e/4),d=h%(a/n)*n,u=Math.floor(h/(a/n))*n,f=e%4;return VC(n,n,s,t,l,c,i,d,u,f,o)}function QC(s){const e=s.sdfCanvas;e.addEventListener("webglcontextlost",t=>{console.log("Context Lost",t),t.preventDefault(),s.contextLost=!0}),e.addEventListener("webglcontextrestored",t=>{console.log("Context Restored",t),s.contextLost=!1;const n=[];s.glyphsByFont.forEach(i=>{i.forEach(r=>{n.push(Zu(r,s,!0))})}),Promise.all(n).then(()=>{$u(s),s.sdfTexture.needsUpdate=!0})})}function e2(s,e){for(let t in e)e.hasOwnProperty(t)&&(s[t]=e[t]);return s}let bo;function t2(s){return bo||(bo=typeof document>"u"?{}:document.createElement("a")),bo.href=s,bo.href}function $u(s){if(typeof createImageBitmap!="function"){console.info("Safari<15: applying SDF canvas workaround");const{sdfCanvas:e,sdfTexture:t}=s,{width:n,height:i}=e,r=s.sdfCanvas.getContext("webgl");let o=t.image.data;(!o||o.length!==n*i*4)&&(o=new Uint8Array(n*i*4),t.image={width:n,height:i,data:o},t.flipY=!1,t.isDataTexture=!0),r.readPixels(0,0,n,i,r.RGBA,r.UNSIGNED_BYTE,o)}}const n2=zr({name:"Typesetter",dependencies:[HC,GC,AC],init(s,e,t){return s(e,t())}}),Qu=zr({name:"Typesetter",dependencies:[n2],init(s){return function(e){return new Promise(t=>{s.typeset(e,t)})}},getTransferables(s){const e=[];for(let t in s)s[t]&&s[t].buffer&&e.push(s[t].buffer);return e}});Qu.onMainThread;const Hd={};function i2(s){let e=Hd[s];return e||(e=Hd[s]=new On(1,1,s,s).translate(.5,.5,0)),e}const r2="aTroikaGlyphBounds",Vd="aTroikaGlyphIndex",s2="aTroikaGlyphColor";class o2 extends c_{constructor(){super(),this.detail=1,this.curveRadius=0,this.groups=[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}],this.boundingSphere=new Ai,this.boundingBox=new ni}computeBoundingSphere(){}computeBoundingBox(){}set detail(e){if(e!==this._detail){this._detail=e,(typeof e!="number"||e<1)&&(e=1);let t=i2(e);["position","normal","uv"].forEach(n=>{this.attributes[n]=t.attributes[n].clone()}),this.setIndex(t.getIndex().clone())}}get detail(){return this._detail}set curveRadius(e){e!==this._curveRadius&&(this._curveRadius=e,this._updateBounds())}get curveRadius(){return this._curveRadius}updateGlyphs(e,t,n,i,r){this.updateAttributeData(r2,e,4),this.updateAttributeData(Vd,t,1),this.updateAttributeData(s2,r,3),this._blockBounds=n,this._chunkedBounds=i,this.instanceCount=t.length,this._updateBounds()}_updateBounds(){const e=this._blockBounds;if(e){const{curveRadius:t,boundingBox:n}=this;if(t){const{PI:i,floor:r,min:o,max:a,sin:c,cos:l}=Math,h=i/2,d=i*2,u=Math.abs(t),f=e[0]/u,g=e[2]/u,v=r((f+h)/d)!==r((g+h)/d)?-u:o(c(f)*u,c(g)*u),_=r((f-h)/d)!==r((g-h)/d)?u:a(c(f)*u,c(g)*u),p=r((f+i)/d)!==r((g+i)/d)?u*2:a(u-l(f)*u,u-l(g)*u);n.min.set(v,e[1],t<0?-p:0),n.max.set(_,e[3],t<0?0:p)}else n.min.set(e[0],e[1],0),n.max.set(e[2],e[3],0);n.getBoundingSphere(this.boundingSphere)}}applyClipRect(e){let t=this.getAttribute(Vd).count,n=this._chunkedBounds;if(n)for(let i=n.length;i--;){t=n[i].end;let r=n[i].rect;if(r[1]<e.w&&r[3]>e.y&&r[0]<e.z&&r[2]>e.x)break}this.instanceCount=t}updateAttributeData(e,t,n){const i=this.getAttribute(e);t?i&&i.array.length===t.length?(i.array.set(t),i.needsUpdate=!0):(this.setAttribute(e,new Jc(t,n)),delete this._maxInstanceCount,this.dispose()):i&&this.deleteAttribute(e)}}const a2=`
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform vec4 uTroikaTotalBounds;
uniform vec4 uTroikaClipRect;
uniform mat3 uTroikaOrient;
uniform bool uTroikaUseGlyphColors;
uniform float uTroikaEdgeOffset;
uniform float uTroikaBlurRadius;
uniform vec2 uTroikaPositionOffset;
uniform float uTroikaCurveRadius;
attribute vec4 aTroikaGlyphBounds;
attribute float aTroikaGlyphIndex;
attribute vec3 aTroikaGlyphColor;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec3 vTroikaGlyphColor;
varying vec2 vTroikaGlyphDimensions;
`,c2=`
vec4 bounds = aTroikaGlyphBounds;
bounds.xz += uTroikaPositionOffset.x;
bounds.yw -= uTroikaPositionOffset.y;

vec4 outlineBounds = vec4(
  bounds.xy - uTroikaEdgeOffset - uTroikaBlurRadius,
  bounds.zw + uTroikaEdgeOffset + uTroikaBlurRadius
);
vec4 clippedBounds = vec4(
  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),
  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)
);

vec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);

position.xy = mix(bounds.xy, bounds.zw, clippedXY);

uv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);

float rad = uTroikaCurveRadius;
if (rad != 0.0) {
  float angle = position.x / rad;
  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);
  normal.xz = vec2(sin(angle), cos(angle));
}
  
position = uTroikaOrient * position;
normal = uTroikaOrient * normal;

vTroikaGlyphUV = clippedXY.xy;
vTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);


float txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;
vec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;
vec2 txStartUV = txUvPerSquare * vec2(
  mod(floor(aTroikaGlyphIndex / 4.0), txCols),
  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)
);
vTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);
vTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);
`,l2=`
uniform sampler2D uTroikaSDFTexture;
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform float uTroikaSDFExponent;
uniform float uTroikaEdgeOffset;
uniform float uTroikaFillOpacity;
uniform float uTroikaBlurRadius;
uniform vec3 uTroikaStrokeColor;
uniform float uTroikaStrokeWidth;
uniform float uTroikaStrokeOpacity;
uniform bool uTroikaSDFDebug;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec2 vTroikaGlyphDimensions;

float troikaSdfValueToSignedDistance(float alpha) {
  // Inverse of exponential encoding in webgl-sdf-generator
  
  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);
  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;
  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);
  return signedDist;
}

float troikaGlyphUvToSdfValue(vec2 glyphUV) {
  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);
  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);
  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1
  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;
}

float troikaGlyphUvToDistance(vec2 uv) {
  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));
}

float troikaGetAADist() {
  
  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300
  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;
  #else
  return vTroikaGlyphDimensions.x / 64.0;
  #endif
}

float troikaGetFragDistValue() {
  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);
  float distance = troikaGlyphUvToDistance(clampedGlyphUV);
 
  // Extrapolate distance when outside bounds:
  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : 
    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);

  

  return distance;
}

float troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {
  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)
  float alpha = step(-distanceOffset, -distance);
  #else

  float alpha = smoothstep(
    distanceOffset + aaDist,
    distanceOffset - aaDist,
    distance
  );
  #endif

  return alpha;
}
`,h2=`
float aaDist = troikaGetAADist();
float fragDistance = troikaGetFragDistValue();
float edgeAlpha = uTroikaSDFDebug ?
  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :
  troikaGetEdgeAlpha(fragDistance, uTroikaEdgeOffset, max(aaDist, uTroikaBlurRadius));

#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)
vec4 fillRGBA = gl_FragColor;
fillRGBA.a *= uTroikaFillOpacity;
vec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);
if (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;
gl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(
  -uTroikaStrokeWidth - aaDist,
  -uTroikaStrokeWidth + aaDist,
  fragDistance
));
gl_FragColor.a *= edgeAlpha;
#endif

if (edgeAlpha == 0.0) {
  discard;
}
`;function d2(s){const e=il(s,{chained:!0,extensions:{derivatives:!0},uniforms:{uTroikaSDFTexture:{value:null},uTroikaSDFTextureSize:{value:new Qe},uTroikaSDFGlyphSize:{value:0},uTroikaSDFExponent:{value:0},uTroikaTotalBounds:{value:new At(0,0,0,0)},uTroikaClipRect:{value:new At(0,0,0,0)},uTroikaEdgeOffset:{value:0},uTroikaFillOpacity:{value:1},uTroikaPositionOffset:{value:new Qe},uTroikaCurveRadius:{value:0},uTroikaBlurRadius:{value:0},uTroikaStrokeWidth:{value:0},uTroikaStrokeColor:{value:new rt},uTroikaStrokeOpacity:{value:1},uTroikaOrient:{value:new et},uTroikaUseGlyphColors:{value:!0},uTroikaSDFDebug:{value:!1}},vertexDefs:a2,vertexTransform:c2,fragmentDefs:l2,fragmentColorTransform:h2,customRewriter({vertexShader:t,fragmentShader:n}){let i=/\buniform\s+vec3\s+diffuse\b/;return i.test(n)&&(n=n.replace(i,"varying vec3 vTroikaGlyphColor").replace(/\bdiffuse\b/g,"vTroikaGlyphColor"),i.test(t)||(t=t.replace(Ku,`uniform vec3 diffuse;
$&
vTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;
`))),{vertexShader:t,fragmentShader:n}}});return e.transparent=!0,e.forceSinglePass=!0,Object.defineProperties(e,{isTroikaTextMaterial:{value:!0},shadowSide:{get(){return this.side},set(){}}}),e}const Pl=new Vo({color:16777215,side:Fn,transparent:!0}),Wd=8421504,jd=new ft,yo=new q,ic=new q,cs=[],u2=new q,rc="+x+y";function Xd(s){return Array.isArray(s)?s[0]:s}let ef=()=>{const s=new Wt(new On(1,1),Pl);return ef=()=>s,s},tf=()=>{const s=new Wt(new On(1,1,32,1),Pl);return tf=()=>s,s};const f2={type:"syncstart"},p2={type:"synccomplete"},nf=["font","fontSize","fontStyle","fontWeight","lang","letterSpacing","lineHeight","maxWidth","overflowWrap","text","direction","textAlign","textIndent","whiteSpace","anchorX","anchorY","colorRanges","sdfGlyphSize"],_2=nf.concat("material","color","depthOffset","clipRect","curveRadius","orientation","glyphGeometryDetail");class sl extends Wt{constructor(){const e=new o2;super(e,null),this.text="",this.anchorX=0,this.anchorY=0,this.curveRadius=0,this.direction="auto",this.font=null,this.unicodeFontsURL=null,this.fontSize=.1,this.fontWeight="normal",this.fontStyle="normal",this.lang=null,this.letterSpacing=0,this.lineHeight="normal",this.maxWidth=1/0,this.overflowWrap="normal",this.textAlign="left",this.textIndent=0,this.whiteSpace="normal",this.material=null,this.color=null,this.colorRanges=null,this.outlineWidth=0,this.outlineColor=0,this.outlineOpacity=1,this.outlineBlur=0,this.outlineOffsetX=0,this.outlineOffsetY=0,this.strokeWidth=0,this.strokeColor=Wd,this.strokeOpacity=1,this.fillOpacity=1,this.depthOffset=0,this.clipRect=null,this.orientation=rc,this.glyphGeometryDetail=1,this.sdfGlyphSize=null,this.gpuAccelerateSDF=!0,this.debugSDF=!1}sync(e){this._needsSync&&(this._needsSync=!1,this._isSyncing?(this._queuedSyncs||(this._queuedSyncs=[])).push(e):(this._isSyncing=!0,this.dispatchEvent(f2),$C({text:this.text,font:this.font,lang:this.lang,fontSize:this.fontSize||.1,fontWeight:this.fontWeight||"normal",fontStyle:this.fontStyle||"normal",letterSpacing:this.letterSpacing||0,lineHeight:this.lineHeight||"normal",maxWidth:this.maxWidth,direction:this.direction||"auto",textAlign:this.textAlign,textIndent:this.textIndent,whiteSpace:this.whiteSpace,overflowWrap:this.overflowWrap,anchorX:this.anchorX,anchorY:this.anchorY,colorRanges:this.colorRanges,includeCaretPositions:!0,sdfGlyphSize:this.sdfGlyphSize,gpuAccelerateSDF:this.gpuAccelerateSDF,unicodeFontsURL:this.unicodeFontsURL},t=>{this._isSyncing=!1,this._textRenderInfo=t,this.geometry.updateGlyphs(t.glyphBounds,t.glyphAtlasIndices,t.blockBounds,t.chunkedBounds,t.glyphColors);const n=this._queuedSyncs;n&&(this._queuedSyncs=null,this._needsSync=!0,this.sync(()=>{n.forEach(i=>i&&i())})),this.dispatchEvent(p2),e&&e()})))}onBeforeRender(e,t,n,i,r,o){this.sync(),r.isTroikaTextMaterial&&this._prepareForRender(r)}dispose(){this.geometry.dispose()}get textRenderInfo(){return this._textRenderInfo||null}createDerivedMaterial(e){return d2(e)}get material(){let e=this._derivedMaterial;const t=this._baseMaterial||this._defaultMaterial||(this._defaultMaterial=Pl.clone());if((!e||!e.isDerivedFrom(t))&&(e=this._derivedMaterial=this.createDerivedMaterial(t),t.addEventListener("dispose",function n(){t.removeEventListener("dispose",n),e.dispose()})),this.hasOutline()){let n=e._outlineMtl;return n||(n=e._outlineMtl=Object.create(e,{id:{value:e.id+.1}}),n.isTextOutlineMaterial=!0,n.depthWrite=!1,n.map=null,e.addEventListener("dispose",function i(){e.removeEventListener("dispose",i),n.dispose()})),[n,e]}else return e}set material(e){e&&e.isTroikaTextMaterial?(this._derivedMaterial=e,this._baseMaterial=e.baseMaterial):this._baseMaterial=e}hasOutline(){return!!(this.outlineWidth||this.outlineBlur||this.outlineOffsetX||this.outlineOffsetY)}get glyphGeometryDetail(){return this.geometry.detail}set glyphGeometryDetail(e){this.geometry.detail=e}get curveRadius(){return this.geometry.curveRadius}set curveRadius(e){this.geometry.curveRadius=e}get customDepthMaterial(){return Xd(this.material).getDepthMaterial()}set customDepthMaterial(e){}get customDistanceMaterial(){return Xd(this.material).getDistanceMaterial()}set customDistanceMaterial(e){}_prepareForRender(e){const t=e.isTextOutlineMaterial,n=e.uniforms,i=this.textRenderInfo;if(i){const{sdfTexture:a,blockBounds:c}=i;n.uTroikaSDFTexture.value=a,n.uTroikaSDFTextureSize.value.set(a.image.width,a.image.height),n.uTroikaSDFGlyphSize.value=i.sdfGlyphSize,n.uTroikaSDFExponent.value=i.sdfExponent,n.uTroikaTotalBounds.value.fromArray(c),n.uTroikaUseGlyphColors.value=!t&&!!i.glyphColors;let l=0,h=0,d=0,u,f,g,v=0,_=0;if(t){let{outlineWidth:M,outlineOffsetX:E,outlineOffsetY:b,outlineBlur:R,outlineOpacity:T}=this;l=this._parsePercent(M)||0,h=Math.max(0,this._parsePercent(R)||0),u=T,v=this._parsePercent(E)||0,_=this._parsePercent(b)||0}else d=Math.max(0,this._parsePercent(this.strokeWidth)||0),d&&(g=this.strokeColor,n.uTroikaStrokeColor.value.set(g??Wd),f=this.strokeOpacity,f==null&&(f=1)),u=this.fillOpacity;n.uTroikaEdgeOffset.value=l,n.uTroikaPositionOffset.value.set(v,_),n.uTroikaBlurRadius.value=h,n.uTroikaStrokeWidth.value=d,n.uTroikaStrokeOpacity.value=f,n.uTroikaFillOpacity.value=u??1,n.uTroikaCurveRadius.value=this.curveRadius||0;let p=this.clipRect;if(p&&Array.isArray(p)&&p.length===4)n.uTroikaClipRect.value.fromArray(p);else{const M=(this.fontSize||.1)*100;n.uTroikaClipRect.value.set(c[0]-M,c[1]-M,c[2]+M,c[3]+M)}this.geometry.applyClipRect(n.uTroikaClipRect.value)}n.uTroikaSDFDebug.value=!!this.debugSDF,e.polygonOffset=!!this.depthOffset,e.polygonOffsetFactor=e.polygonOffsetUnits=this.depthOffset||0;const r=t?this.outlineColor||0:this.color;if(r==null)delete e.color;else{const a=e.hasOwnProperty("color")?e.color:e.color=new rt;(r!==a._input||typeof r=="object")&&a.set(a._input=r)}let o=this.orientation||rc;if(o!==e._orientation){let a=n.uTroikaOrient.value;o=o.replace(/[^-+xyz]/g,"");let c=o!==rc&&o.match(/^([-+])([xyz])([-+])([xyz])$/);if(c){let[,l,h,d,u]=c;yo.set(0,0,0)[h]=l==="-"?1:-1,ic.set(0,0,0)[u]=d==="-"?-1:1,jd.lookAt(u2,yo.cross(ic),ic),a.setFromMatrix4(jd)}else a.identity();e._orientation=o}}_parsePercent(e){if(typeof e=="string"){let t=e.match(/^(-?[\d.]+)%$/),n=t?parseFloat(t[1]):NaN;e=(isNaN(n)?0:n/100)*this.fontSize}return e}localPositionToTextCoords(e,t=new Qe){t.copy(e);const n=this.curveRadius;return n&&(t.x=Math.atan2(e.x,Math.abs(n)-Math.abs(e.z))*Math.abs(n)),t}worldPositionToTextCoords(e,t=new Qe){return yo.copy(e),this.localPositionToTextCoords(this.worldToLocal(yo),t)}raycast(e,t){const{textRenderInfo:n,curveRadius:i}=this;if(n){const r=n.blockBounds,o=i?tf():ef(),a=o.geometry,{position:c,uv:l}=a.attributes;for(let h=0;h<l.count;h++){let d=r[0]+l.getX(h)*(r[2]-r[0]);const u=r[1]+l.getY(h)*(r[3]-r[1]);let f=0;i&&(f=i-Math.cos(d/i)*i,d=Math.sin(d/i)*i),c.setXYZ(h,d,u,f)}a.boundingSphere=this.geometry.boundingSphere,a.boundingBox=this.geometry.boundingBox,o.matrixWorld=this.matrixWorld,o.material.side=this.material.side,cs.length=0,o.raycast(e,cs);for(let h=0;h<cs.length;h++)cs[h].object=this,t.push(cs[h])}}copy(e){const t=this.geometry;return super.copy(e),this.geometry=t,_2.forEach(n=>{this[n]=e[n]}),this}clone(){return new this.constructor().copy(this)}}nf.forEach(s=>{const e="_private_"+s;Object.defineProperty(sl.prototype,s,{get(){return this[e]},set(t){t!==this[e]&&(this[e]=t,this._needsSync=!0)}})});new ni;new rt;class m2{sprite;inUse=!1;canvas;ctx;constructor(){this.canvas=document.createElement("canvas"),this.canvas.width=512,this.canvas.height=256,this.ctx=this.canvas.getContext("2d");const e=new Eu(this.canvas),t=new yu({map:e,transparent:!0});this.sprite=new qp(t),this.sprite.scale.set(2,1,1),this.sprite.visible=!1}setText(e,t="#FFD700"){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.font="bold 96px Impact, Arial Black, sans-serif",this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.strokeStyle="white",this.ctx.lineWidth=12,this.ctx.strokeText(e,256,128),this.ctx.fillStyle=t,this.ctx.fillText(e,256,128),this.sprite.material.map.needsUpdate=!0,this.inUse=!0,this.sprite.visible=!0}reset(){this.inUse=!1,this.sprite.visible=!1,this.sprite.position.set(0,0,0),this.sprite.scale.set(2,1,1),this.sprite.material.opacity=1}isAvailable(){return!this.inUse}}class g2{group;titleText;descriptionText;backgroundMesh;inUse=!1;constructor(){this.group=new Mr,this.createBackground(),this.createTextObjects(),this.group.visible=!1}createBackground(){const e=new On(3,1,32,32),t=this.createRoundedRectCanvas(),n=new Eu(t);n.minFilter=hn,n.magFilter=hn;const i=new Vo({map:n,transparent:!0,side:Fn,depthWrite:!1});this.backgroundMesh=new Wt(e,i),this.backgroundMesh.renderOrder=-1,this.group.add(this.backgroundMesh)}createRoundedRectCanvas(){const e=document.createElement("canvas");e.width=2048,e.height=1024;const t=e.getContext("2d"),n=160;return t.beginPath(),t.moveTo(n,0),t.lineTo(e.width-n,0),t.quadraticCurveTo(e.width,0,e.width,n),t.lineTo(e.width,e.height-n),t.quadraticCurveTo(e.width,e.height,e.width-n,e.height),t.lineTo(n,e.height),t.quadraticCurveTo(0,e.height,0,e.height-n),t.lineTo(0,n),t.quadraticCurveTo(0,0,n,0),t.closePath(),t.fillStyle="rgba(20, 20, 20, 1.0)",t.fill(),t.strokeStyle="rgba(255, 140, 0, 0.6)",t.lineWidth=16,t.stroke(),t.shadowColor="rgba(255, 140, 0, 0.3)",t.shadowBlur=40,t.shadowOffsetX=0,t.shadowOffsetY=0,t.stroke(),e}createTextObjects(){this.titleText=new sl,this.titleText.fontSize=.22,this.titleText.color=16777215,this.titleText.anchorX="center",this.titleText.anchorY="middle",this.titleText.position.set(0,.2,.02),this.titleText.renderOrder=1,this.titleText.outlineWidth=.01,this.titleText.outlineColor=16747520,this.titleText.outlineOpacity=.5,this.group.add(this.titleText),this.descriptionText=new sl,this.descriptionText.fontSize=.14,this.descriptionText.color=13421772,this.descriptionText.anchorX="center",this.descriptionText.anchorY="middle",this.descriptionText.position.set(0,-.15,.02),this.descriptionText.renderOrder=1,this.descriptionText.outlineWidth=.005,this.descriptionText.outlineColor=16777215,this.descriptionText.outlineOpacity=.3,this.group.add(this.descriptionText)}setText(e,t){this.titleText.text=e,this.titleText.sync(),t?(this.descriptionText.text=t,this.descriptionText.visible=!0,this.descriptionText.sync(),this.backgroundMesh.scale.set(1,1.3,1)):(this.descriptionText.visible=!1,this.backgroundMesh.scale.set(1,.7,1)),this.inUse=!0,this.group.visible=!0}setPosition(e,t=new q(0,1.5,0)){this.group.position.copy(e).add(t)}faceCamera(e){this.group.lookAt(e)}reset(){this.inUse=!1,this.group.visible=!1}isAvailable(){return!this.inUse}}class w2{points;particles=[];geometry;material;maxParticles=100;inUse=!1;constructor(){this.geometry=new $t,this.material=new Mu({size:.1,transparent:!0,opacity:1,sizeAttenuation:!0}),this.points=new t_(this.geometry,this.material),this.points.visible=!1}spawn(e,t,n,i){this.inUse=!0,this.points.visible=!0,this.material.color.setHex(n),this.particles=[];for(let r=0;r<Math.min(t,this.maxParticles);r++){const o=Math.PI*2*r/t,a=new q(Math.cos(o)*i+(Math.random()-.5),Math.random()*i*2,Math.sin(o)*i+(Math.random()-.5));this.particles.push({position:e.clone(),velocity:a,life:1})}this.updateGeometry()}update(e){if(!this.inUse||this.particles.length===0)return;let t=!0;this.particles.forEach(n=>{n.position.add(n.velocity.clone().multiplyScalar(e)),n.velocity.y-=9.8*e,n.life-=e,n.life>0&&(t=!1)}),this.material.opacity=Math.max(0,this.particles[0]?.life||0),this.updateGeometry(),t&&this.reset()}updateGeometry(){const e=[];this.particles.forEach(t=>{t.life>0&&e.push(t.position.x,t.position.y,t.position.z)}),this.geometry.setAttribute("position",new Dt(e,3)),this.geometry.attributes.position.needsUpdate=!0}reset(){this.inUse=!1,this.points.visible=!1,this.particles=[]}isAvailable(){return!this.inUse}}class _s extends jo{static POOL_SIZES={TEXT_SPRITES:10,TOOLTIPS:3,PARTICLES:5};textSpritePool=[];tooltipPool=[];particlePool=[];activeTextAnims=new Map;activeTooltip=null;materialCache=new Map;cameraShake=null;async init(e){this.context=e;for(let t=0;t<_s.POOL_SIZES.TEXT_SPRITES;t++){const n=new m2;e.scene.add(n.sprite),e.cleanupRegistry.registerObject(n.sprite),this.textSpritePool.push(n)}for(let t=0;t<_s.POOL_SIZES.TOOLTIPS;t++){const n=new g2;e.scene.add(n.group),e.cleanupRegistry.registerObject(n.group),this.tooltipPool.push(n)}for(let t=0;t<_s.POOL_SIZES.PARTICLES;t++){const n=new w2;e.scene.add(n.points),e.cleanupRegistry.registerObject(n.points),this.particlePool.push(n)}console.log("✨ [VFXModule] Initialized with pools (text: %d, tooltips: %d, particles: %d)",this.textSpritePool.length,this.tooltipPool.length,this.particlePool.length)}update(e){this.updateTextSpriteAnimations(),this.updateTooltipBillboard(),this.updateParticleSystems(e),this.updateCameraShake(e)}updateTextSpriteAnimations(){const e=Date.now();this.activeTextAnims.forEach((t,n)=>{const r=(e-t.startTime)/t.duration;if(r>=1)n.reset(),this.activeTextAnims.delete(n);else{const o=1-Math.pow(1-r,3);n.sprite.position.y=t.startPos.y+o*2,n.sprite.material.opacity=1-r,n.sprite.scale.set(2*(1+r*.5),1*(1+r*.5),1)}})}updateTooltipBillboard(){this.activeTooltip&&this.context.camera&&this.activeTooltip.faceCamera(this.context.camera.instance.position)}updateParticleSystems(e){this.particlePool.forEach(t=>{t.update(e)})}updateCameraShake(e){if(!(!this.cameraShake||!this.context.camera))if(this.cameraShake.elapsed+=e,this.cameraShake.elapsed>=this.cameraShake.duration){const t=this.context.camera.instance;t.position.x=Math.round(t.position.x*100)/100,t.position.y=Math.round(t.position.y*100)/100,this.cameraShake=null}else{const t=this.cameraShake.elapsed/this.cameraShake.duration,n=this.cameraShake.intensity*(1-t);this.context.camera.instance.position.x+=(Math.random()-.5)*n,this.context.camera.instance.position.y+=(Math.random()-.5)*n}}async destroy(){this.activeTextAnims.clear(),this.activeTooltip=null,this.materialCache.clear()}showClickEffect(e,t="POW!",n){const i=this.textSpritePool.find(a=>a.isAvailable());if(!i){console.warn("[VFXModule] No available text sprites in pool");return}const r=["POW!","BAM!","CLICK!","ZAP!","WHAM!"],o=t||r[Math.floor(Math.random()*r.length)];i.setText(o,n),i.sprite.position.copy(e),this.activeTextAnims.set(i,{startTime:Date.now(),duration:1e3,startPos:e.clone()})}showTooltip(e,t,n){this.hideTooltip();const i=this.tooltipPool.find(r=>r.isAvailable());if(!i){console.warn("[VFXModule] No available tooltips in pool");return}i.setText(t,n),i.setPosition(e),this.context.camera&&i.faceCamera(this.context.camera.instance.position),this.activeTooltip=i}hideTooltip(){this.activeTooltip&&(this.activeTooltip.reset(),this.activeTooltip=null)}applyEmissive(e,t,n){e.traverse(i=>{if("isMesh"in i&&i.isMesh){const r=i,o=r.material;!this.materialCache.has(r.uuid)&&o.emissive&&this.materialCache.set(r.uuid,{emissive:o.emissive.clone(),emissiveIntensity:o.emissiveIntensity}),o.emissive&&(o.emissive.setHex(t),o.emissiveIntensity=n)}})}restoreEmissive(e){e.traverse(t=>{if("isMesh"in t&&t.isMesh){const n=t,i=this.materialCache.get(n.uuid);if(i){const r=n.material;r.emissive&&(r.emissive.copy(i.emissive),r.emissiveIntensity=i.emissiveIntensity)}}})}spawnParticles(e,t=20,n=16766720,i=3){const r=this.particlePool.find(o=>o.isAvailable());if(!r){console.warn("[VFXModule] No available particle systems in pool");return}r.spawn(e,t,n,i)}shakeCamera(e=.1,t=.3){this.cameraShake={intensity:e,duration:t,elapsed:0}}}var rf=(s=>(s.SCENE="scene",s.PLAYER="player",s.MULTIPLAYER="multiplayer",s.POSITION="position",s))(rf||{});class v2 extends jo{websocketManager;registry=new Map;constructor(){super(),this.websocketManager=Jd(),console.log("[NetworkingService] Initialized")}send(e,t){if(!this.websocketManager.clientData)throw new Error("Cannot send message: clientData is missing");const n=this.websocketManager.getWebSocketInstance(),i={type:"multiplayer",content:{category:e,...t},client:{id:this.websocketManager.clientData?.id,name:this.websocketManager.clientData?.name}};n?.send(JSON.stringify(i))}async init(e){this.websocketManager.register("NetworkingService",{data:async(t,n)=>{await this.routeMessage(n)}}),console.log("[NetworkingService] Registered with WebSocket store")}async routeMessage(e){const t=this.extractCategory(e.type);if(!t)return;const n=[];this.registry.forEach((i,r)=>{const o=i[t];o&&n.push(Promise.resolve(o(e)).catch(a=>{console.error(`[NetworkingService] Handler error in "${r}" for category "${t}":`,a)}))}),await Promise.all(n)}extractCategory(e){switch(e.split(".")[0].toLowerCase()){case"scene":return"scene";case"player":return"player";case"multiplayer":return"multiplayer";case"position":return"position";default:return null}}register(e,t){if(!e||typeof e!="string")throw new Error("[NetworkingService] Registration failed: source must be a non-empty string");this.registry.has(e)&&console.warn(`[NetworkingService] Overwriting existing handlers for "${e}"`),Object.entries(t).forEach(([i,r])=>{if(r&&typeof r!="function")throw new Error(`[NetworkingService] Handler for category "${i}" in "${e}" must be a function`)}),this.registry.set(e,t);const n=Object.keys(t).join(", ");console.log(`[NetworkingService] Registered "${e}" for categories: ${n}`)}unregister(e){this.registry.delete(e)?console.log(`[NetworkingService] Unregistered "${e}"`):console.warn(`[NetworkingService] Attempted to unregister unknown source: "${e}"`)}async destroy(){this.websocketManager.unregister("NetworkingService"),this.registry.clear(),console.log("[NetworkingService] Destroyed")}getRegisteredSources(){return Array.from(this.registry.keys())}getRegisteredCount(){return this.registry.size}isRegistered(e){return this.registry.has(e)}getClientData(){return this.websocketManager.clientData}}class b2{enabled=!1;modulesLoaded=!1;cleanupRegistry=new zu;sceneEvents=ws("scene:loading");moduleEvents=ws("module:loading");registry=new a0;services={interaction:new h0,vfx:new _s,physics:new bC,networking:new v2};character;settings;config;scenes;websocketManager;camera;constructor(){this.settings=zo(),this.config=tn(),this.scenes=Bo(),this.websocketManager=Jd(),this.camera=t0(),this.character=o0({cameraAngleH:this.camera.controller.angle.horizontal}),this.subscribe()}async start(){console.log(`🎬 [${this.name}] Initializing scene...`),await this.initializeAllServices(),this.registerModules(),this.addSceneObjects(),this.startModuleLoading(),this.finalizeSetup(),console.log(`✅ [${this.name}] Scene initialization complete`)}update(e){this.enabled&&(this.character.update(e),this.camera.update(this.character.controller.getPosition()),this.updateAllServices(e),this.registry.getInitializedUpdateable().forEach(t=>{t.update&&t.update(e)}))}addModule(e,t){return this.registry.add(e,t),console.log(`➕ [${this.name}] Added module: "${String(e)}"`),this}getModule(e){return this.registry.get(e)}moduleCount(){return this.registry.count()}forEachModule(e){this.registry.forEach(e)}loading(e,t){this.sceneEvents.$next(e,{sceneName:this.name,...t})}async initializeAllServices(){for(const e of Object.values(this.services))await e.start(this.getSceneContext())}updateAllServices(e){for(const t of Object.values(this.services))t.update&&t.update(e)}async destroyAllServices(){for(const e of Object.values(this.services))await e.destroy()}startModuleLoading(){const e=this.getSceneContext();this.loading("start",{totalAssets:this.moduleCount()}),this.forEachModule(t=>t.start(e))}getSceneContext(){const e=this.getClientData();return{engine:this.engine,sceneName:this.name,scene:this.engine.scene,clientData:e,cleanupRegistry:this.cleanupRegistry,services:this.services,camera:this.camera,character:this.character}}getClientData(){return{id:this.websocketManager.clientData?.id,name:this.websocketManager.clientData?.name,scene:this.name}}finalizeSetup(){this.camera.start()}subscribe(){this.moduleEvents.$subscribe({loaded:e=>{e.sceneName===this.name&&this.registry.forEach(t=>{this.registry.getModuleName(t)===e.moduleName&&(this.registry.markInitialized(t),this.loading("loaded",{loaded:this.registry.initializedCount(),assetName:e.moduleName}))})}}),this.sceneEvents.$subscribe({complete:e=>{e.sceneName===this.name&&(this.modulesLoaded=!0,this.enabled=this.modulesLoaded)}})}async destroy(){console.log(`🧹 [${this.name}] Starting scene cleanup...`),this.character.destroy(),this.camera.destroy(),await this.destroyAllServices(),this.forEachModule(e=>{e.destroy(this.getSceneContext()),e.close?.()}),this.cleanupRegistry.cleanup(this.engine.scene),this.registry.clear(),console.log(`✅ [${this.name}] Scene cleanup complete`)}}class Dl{constructor(e,t=!0){this.autoInitialize=t,e&&(this.name=e),this.id=this.name}name=this.constructor.name;rxjs=ws("module:loading",{},{static_instance:!0});id;context;async start(e){this.context=e,await this.init(e),this.autoInitialize&&this.initialized(e.sceneName)}setName(e){this.name=e,this.id=e}initialized(e){setTimeout(()=>{this.rxjs.$next("loaded",{moduleName:this.name,sceneName:e})},Math.random()*333)}close(){this.rxjs.$unsubscribe()}}class y2 extends Dl{lights=[];constructor(e){super(e)}async init(e){const t=new a_(16777215,.5);e.scene.add(t),e.cleanupRegistry.registerObject(t),this.lights.push(t);const n=new o_(16777215,1);n.position.set(10,10,5),n.castShadow=!0,n.shadow.mapSize.width=2048,n.shadow.mapSize.height=2048,n.shadow.camera.near=.5,n.shadow.camera.far=50,n.shadow.camera.left=-25,n.shadow.camera.right=25,n.shadow.camera.top=25,n.shadow.camera.bottom=-25,n.shadow.bias=-1e-4,n.shadow.normalBias=.02,this.addToScene(e,n),this.lights.push(n)}addToScene(e,t){e.scene.add(t),e.cleanupRegistry.registerObject(t)}async destroy(){this.lights=[]}}var ii=(s=>(s[s.DEFAULT=1]="DEFAULT",s[s.RENDERING=100]="RENDERING",s[s.PHYSICS=200]="PHYSICS",s[s.INTERACTION=300]="INTERACTION",s))(ii||{});class un{gameObject;cleanup=new zu;priority=1;onAttach(e){this.gameObject=e}getComponent(e){return this.gameObject.getComponent(e)}requireComponent(e){const t=this.getComponent(e);if(!t)throw new Error(`[${this.constructor.name}] Required component ${e.name} not found on GameObject "${this.gameObject.id}"`);return t}restrictComponent(e,t){if(this.gameObject.hasComponent(e)){const n=t?`[${this.constructor.name}] Cannot be used with ${e.name} on GameObject "${this.gameObject.id}". ${t}`:`[${this.constructor.name}] Cannot be used with ${e.name} on GameObject "${this.gameObject.id}"`;throw new Error(n)}}destroy(e){this.cleanup.cleanup(e)}}class Wi extends un{geometry;config;constructor(e){super(),this.config=e}async init(e){this.geometry=this.createGeometry(),e.cleanupRegistry.registerDisposable(this.geometry)}createGeometry(){const{type:e,params:t}=this.config;switch(e){case"plane":return new On(t[0],t[1]);case"box":return new jn(t[0],t[1],t[2]);case"sphere":return new Ms(t[0],t[1]||32,t[2]||16);case"cylinder":return new Lr(t[0],t[1],t[2],t[3]||16);case"cone":return new Cs(t[0],t[1],t[2]||16);case"capsule":return new Ur(t[0],t[1],t[2]||8,t[3]||16);default:return console.warn(`[GeometryComponent] Unknown geometry type: ${e}, defaulting to box`),new jn(1,1,1)}}destroy(){}}class ji extends un{material;config;settings=zo();constructor(e={}){super(),this.config=e}async init(e){const t=this.getColor();this.material=new $c({color:t,roughness:this.config.roughness??.8,metalness:this.config.metalness??0}),e.cleanupRegistry.registerDisposable(this.material)}getColor(){return this.config.color!==void 0?this.config.color:this.config.reactiveColor?this.settings.theme[this.config.reactiveColor]:this.config.useTheme?this.settings.theme.primaryForeground:8421504}updateColor(e){this.material&&this.material.color.setHex(e)}onThemeChange(e){if(this.isThemed){const t=this.getColor();this.updateColor(t)}}get isThemed(){return!!(this.config.useTheme||this.config.reactiveColor)}destroy(){}}class Zt extends un{position;rotation;scale;constructor(e={}){super(),this.position=new q(...e.position||[0,0,0]),this.rotation=new nn(...e.rotation||[0,0,0]),this.scale=new q(...e.scale||[1,1,1])}async init(e){}setPosition(e,t,n){e instanceof q?this.position.copy(e):this.position.set(e,t,n)}setRotation(e,t,n){e instanceof nn?this.rotation.copy(e):this.rotation.set(e,t,n)}setRotationFromQuaternion(e){this.rotation.setFromQuaternion(e)}setScale(e,t,n){e instanceof q?this.scale.copy(e):t===void 0&&n===void 0?this.scale.set(e,e,e):this.scale.set(e,t,n)}getPositionArray(){return[this.position.x,this.position.y,this.position.z]}getRotationArray(){return[this.rotation.x,this.rotation.y,this.rotation.z]}getScaleArray(){return[this.scale.x,this.scale.y,this.scale.z]}}class Ps extends un{priority=ii.RENDERING;mesh;config;constructor(e={}){super(),this.config=e}async init(e){const t=await ol(()=>Promise.resolve().then(()=>sf),void 0).then(o=>o.InstancedMeshComponent);this.restrictComponent(t,"Use InstancedMeshComponent OR MeshComponent, not both.");const n=this.requireComponent(Wi),i=this.requireComponent(ji);this.mesh=new Wt(n.geometry,i.material),this.mesh.castShadow=this.config.castShadow??!0,this.mesh.receiveShadow=this.config.receiveShadow??!0,this.mesh.name=this.gameObject.id;const r=this.getComponent(Zt);r&&this.applyTransform(r),e.scene.add(this.mesh),e.cleanupRegistry.registerObject(this.mesh)}applyTransform(e){this.mesh.position.copy(e.position),this.mesh.rotation.copy(e.rotation),this.mesh.scale.copy(e.scale)}updateTransform(){const e=this.getComponent(Zt);e&&this.applyTransform(e)}destroy(){}}class Xi{id;components=new Map;isInitialized=!1;context=null;constructor(e){this.id=e.id}addComponent(e){return this.isInitialized&&console.warn(`[GameObject] Adding component ${e.constructor.name} to already initialized GameObject "${this.id}". Component will not be initialized.`),e.onAttach(this),this.components.set(e.constructor,e),this}getComponent(e){return this.components.get(e)||null}hasComponent(e){return this.components.has(e)}removeComponent(e){this.components.delete(e)}getAllComponents(){return Array.from(this.components.values())}async init(e){if(this.isInitialized){console.warn(`[GameObject] GameObject "${this.id}" already initialized`);return}this.context=e;const t=Array.from(this.components.values()).sort((n,i)=>n.priority-i.priority);for(const n of t)await n.init(e);await this.registerWithServices(e),this.isInitialized=!0}async registerWithServices(e){await this.registerInteractions(e)}async registerInteractions(e){const t=this.getComponent(Ps);if(!t)return;const n=[];for(const r of this.components.values())"registerInteractions"in r&&typeof r.registerInteractions=="function"&&n.push(r);if(n.length===0)return;const i=e.services.interaction.register(this.id,t.mesh);for(const r of n)r.registerInteractions(i,e)}update(e){if(this.isInitialized)for(const t of this.components.values())t.update&&t.update(e)}destroy(){if(!this.context){console.warn(`[GameObject] GameObject "${this.id}" destroyed before initialization`),this.components.clear();return}for(const e of this.components.values())e.destroy&&e.destroy(this.context.scene);this.components.clear(),this.context=null,this.isInitialized=!1}}class ms extends un{priority=ii.RENDERING;instancedMesh;config;constructor(e){if(super(),this.config=e,!e.instances||e.instances.length===0)throw new Error("[InstancedMeshComponent] instances array cannot be empty")}async init(e){if(this.gameObject.hasComponent(Ps))throw new Error(`[InstancedMeshComponent] GameObject "${this.gameObject.id}" has MeshComponent. Use InstancedMeshComponent OR MeshComponent, not both.`);const t=this.requireComponent(Wi),n=this.requireComponent(ji);this.instancedMesh=new Jp(t.geometry,n.material,this.config.instances.length),this.instancedMesh.castShadow=this.config.castShadow??!0,this.instancedMesh.receiveShadow=this.config.receiveShadow??!0,this.instancedMesh.name=this.gameObject.id,this.instancedMesh.count=0,this.config.instances.forEach((i,r)=>{const o=new ft,a=new q(...i.position),c=new nn(...i.rotation||[0,0,0]),l=new yi().setFromEuler(c),h=new q(...i.scale||[1,1,1]);o.compose(a,l,h),this.instancedMesh.setMatrixAt(this.instancedMesh.count++,o)}),this.instancedMesh.instanceMatrix.needsUpdate=!0,this.instancedMesh.computeBoundingSphere(),e.scene.add(this.instancedMesh),e.cleanupRegistry.registerObject(this.instancedMesh)}getInstanceCount(){return this.config.instances.length}updateInstance(e,t){if(e<0||e>=this.config.instances.length){console.warn(`[InstancedMeshComponent] Invalid index ${e} (max: ${this.config.instances.length-1})`);return}const n=new ft,i=new q(...t.position),r=new nn(...t.rotation||[0,0,0]),o=new yi().setFromEuler(r),a=new q(...t.scale||[1,1,1]);n.compose(i,o,a),this.instancedMesh.setMatrixAt(e,n),this.instancedMesh.instanceMatrix.needsUpdate=!0,this.config.instances[e]=t}destroy(){}}const sf=Object.freeze(Object.defineProperty({__proto__:null,InstancedMeshComponent:ms},Symbol.toStringTag,{value:"Module"}));class of extends un{priority=ii.RENDERING;group;bodyMesh;bodyMaterial;coneMaterial;config;settings=zo();constructor(e={}){super(),this.config=e}async init(e){const t=this.requireComponent(Zt);this.group=new Mr,this.group.position.copy(t.position),this.group.rotation.copy(t.rotation),this.buildBody(),this.buildForwardIndicator(),e.scene.add(this.group),this.cleanup.registerObject(this.group)}update(e){const t=this.getComponent(Zt);t&&(this.group.position.copy(t.position),this.group.rotation.copy(t.rotation))}buildBody(){const e=this.config.bodyRadius??.5,t=this.config.bodyHeight??1,n=new Ur(e,t,8,16),i=this.config.bodyColor??this.settings.theme.primary;this.bodyMaterial=new $c({color:i}),this.bodyMesh=new Wt(n,this.bodyMaterial),this.bodyMesh.castShadow=!0,this.bodyMesh.receiveShadow=!0,this.group.add(this.bodyMesh)}buildForwardIndicator(){const e=this.config.coneRadius??.2,t=this.config.coneHeight??.4,n=this.config.coneOffset??.7,i=new Cs(e,t,8),r=this.config.coneColor??this.settings.theme.accent;this.coneMaterial=new $c({color:r});const o=new Wt(i,this.coneMaterial);o.position.set(0,0,n),o.rotation.x=Math.PI/2,o.castShadow=!0,this.group.add(o)}onThemeChange(e){this.bodyMaterial.color.setHex(e.primary),this.coneMaterial.color.setHex(e.accent)}}class Nr extends un{priority=ii.PHYSICS;config;isRegistered=!1;instanceIds=[];constructor(e){super(),this.config=e}async init(e){if(!e.services.physics.isReady()){console.warn(`[PhysicsComponent] Physics not ready for GameObject "${this.gameObject.id}". Skipping.`);return}const{meshComp:t,instancedMeshComp:n,characterMeshComp:i}=this.verifyRequiredComponents();this.config.type==="static"?this.handleStaticMesh(t,e,n):this.config.type==="kinematic"&&this.handleKinematicMesh(t,e,i),this.isRegistered=!0}verifyRequiredComponents(){const e=this.getComponent(Ps),t=this.getComponent(ms),n=this.getComponent(of);if(!e&&!t&&!n)throw new Error(`[PhysicsComponent] GameObject "${this.gameObject.id}" requires MeshComponent, InstancedMeshComponent, or CharacterMeshComponent`);return{meshComp:e,instancedMeshComp:t,characterMeshComp:n}}handleStaticMesh(e,t,n){e?t.services.physics.registerStaticFromMesh(this.gameObject.id,e.mesh,{showDebug:this.config.showDebug}):n&&(this.instanceIds=t.services.physics.registerInstancedStatic(this.gameObject.id,n.instancedMesh))}handleKinematicMesh(e,t,n){if(!this.config.characterController){console.warn(`[PhysicsComponent] Kinematic type requires characterController: true for GameObject "${this.gameObject.id}"`);return}let i;if(n)i=n.bodyMesh;else if(e)i=e.mesh;else{console.warn(`[PhysicsComponent] Kinematic character controller requires MeshComponent or CharacterMeshComponent for GameObject "${this.gameObject.id}"`);return}const r=this.config.initialPosition||[0,1,0];t.services.physics.registerKinematicFromMesh(this.gameObject.id,i,r,this.config.characterOptions||{enableAutostep:!0,enableSnapToGround:!0,maxStepHeight:.5,minStepWidth:.2,snapToGroundDistance:.5})}updatePosition(e,t,n){if(!this.isRegistered)return;const i=this.context;i?.services?.physics&&i.services.physics.setPosition(this.gameObject.id,{x:e,y:t,z:n})}destroy(){this.isRegistered&&(this.instanceIds.length>0&&(this.instanceIds=[]),this.isRegistered=!1)}}class af extends un{config;context;transformComp;constructor(e={}){super(),this.config=e}async init(e){this.context=e;const t=await ol(()=>Promise.resolve().then(()=>sf),void 0).then(n=>n.InstancedMeshComponent);this.restrictComponent(t,"Individual instances cannot be dragged. Drag is only for single-mesh GameObjects."),this.transformComp=this.requireComponent(Zt)}registerInteractions(e,t){e.withDrag({lockAxis:this.config.lockAxis,snapToGrid:this.config.snapToGrid,onStart:n=>this.handleDragStart(n),onMove:n=>this.handleDragMove(n),onEnd:n=>this.handleDragEnd(n)})}getConfig(){return this.config}handleDragStart(e){this.config.onStart?.(e)}handleDragMove(e){this.transformComp.setPosition(e),this.config.onMove?.(e)}handleDragEnd(e){this.transformComp.setPosition(e),this.getComponent(Nr)&&this.context.services.physics.isReady()&&this.context.services.physics.setPosition(this.gameObject.id,{x:e.x,y:e.y,z:e.z}),this.config.onEnd?.(e)}destroy(){}}class x2 extends un{config;constructor(e={}){super(),this.config=e}async init(e){}registerInteractions(e,t){this.config.glowColor&&e.withHoverGlow(this.config.glowColor,this.config.glowIntensity),this.config.tooltip&&e.withTooltip(this.config.tooltip.title,this.config.tooltip.description),(this.config.onStart||this.config.onEnd)&&e.withHoverCallbacks({onStart:this.config.onStart,onEnd:this.config.onEnd})}destroy(){}}class S2 extends un{sceneStore=Bo();context;transformComp;async init(e){this.context=e,this.transformComp=this.requireComponent(Zt),this.loadPosition();const t=this.getComponent(af);if(t){const n=t.getConfig().onEnd,i=t.getConfig();i.onEnd=r=>{this.savePosition(r),n?.(r)}}}loadPosition(){const e=this.sceneStore.getObjectPosition(this.context.sceneName,this.gameObject.id);e&&this.transformComp.setPosition(e.x,e.y,e.z)}savePosition(e){const t=e||this.transformComp.position;this.sceneStore.saveObjectPosition(this.context.sceneName,this.gameObject.id,{x:t.x,y:t.y,z:t.z})}clearPosition(){console.warn(`[PersistenceComponent] clearPosition() not yet implemented for ${this.gameObject.id}`)}destroy(){}}class M2 extends Xl{constructor(){super("multiplayer","https://topsyde-gaming.duckdns.org:3000")}async getPlayersInScene(e){const t=await this.post("state",{id:e});return Xl.Status(t),t.data}}class Oi extends un{priority=ii.DEFAULT;playerId;username;interpolationSpeed;currentPosition=new q;targetPosition=new q;velocity=new q;currentRotation=new nn;targetRotation=new nn;lastUpdateTime=0;timeSinceLastUpdate=0;context=null;constructor(e){super(),this.playerId=e.playerId,this.username=e.username,this.interpolationSpeed=e.interpolationSpeed??.1,e.initialPosition&&(this.currentPosition.set(...e.initialPosition),this.targetPosition.set(...e.initialPosition))}async init(e){this.context=e;const t=this.requireComponent(Zt);this.currentPosition.copy(t.position),this.targetPosition.copy(t.position),this.currentRotation.copy(t.rotation),this.targetRotation.copy(t.rotation),console.log(`👤 [RemotePlayerComponent] Initialized for player: ${this.username} (${this.playerId})`)}update(e){if(!this.context)return;const t=this.getComponent(Zt);if(t){if(this.timeSinceLastUpdate+=e,this.currentPosition.lerp(this.targetPosition,this.interpolationSpeed),this.velocity.lengthSq()>.001){const n=this.velocity.clone().multiplyScalar(e);this.currentPosition.add(n)}this.currentRotation.equals(this.targetRotation)===!1&&(this.currentRotation.x+=(this.targetRotation.x-this.currentRotation.x)*this.interpolationSpeed,this.currentRotation.y+=(this.targetRotation.y-this.currentRotation.y)*this.interpolationSpeed,this.currentRotation.z+=(this.targetRotation.z-this.currentRotation.z)*this.interpolationSpeed),t.position.copy(this.currentPosition),t.rotation.copy(this.currentRotation)}}destroy(){this.context?.services.multiplayer,console.log(`👤 [RemotePlayerComponent] Destroyed for player: ${this.username} (${this.playerId})`)}updatePosition(e){const t=new q(e.position.x,e.position.y,e.position.z),n=(e.timestamp-this.lastUpdateTime)/1e3;n>0&&this.velocity.subVectors(t,this.targetPosition).divideScalar(n),this.targetPosition.copy(t),e.rotation&&this.targetRotation.set(e.rotation.x,e.rotation.y,e.rotation.z),this.lastUpdateTime=e.timestamp,this.timeSinceLastUpdate=0}teleport(e){this.currentPosition.copy(e),this.targetPosition.copy(e),this.velocity.set(0,0,0);const t=this.getComponent(Zt);t&&t.position.copy(e)}setInterpolationSpeed(e){this.interpolationSpeed=Math.max(.01,Math.min(1,e))}getUsername(){return this.username}getVelocity(){return this.velocity.clone()}isMoving(){return this.velocity.lengthSq()>.01}getTimeSinceLastUpdate(){return this.timeSinceLastUpdate}}function cf(s){return[new Zt({position:s.position}),new of({bodyRadius:s.bodyRadius??.5,bodyHeight:s.bodyHeight??1,coneRadius:s.coneRadius??.2,coneHeight:s.coneHeight??.4,coneOffset:s.coneOffset??.7,initialPosition:s.position,bodyColor:s.bodyColor,coneColor:s.coneColor})]}class qd extends Xi{username;constructor(e){super({id:e.playerId}),this.username=e.username;const t=e.position??[0,10,0];console.log(`[RemotePlayer] Creating "${e.username}" at (${t[0].toFixed(1)}, ${t[1].toFixed(1)}, ${t[2].toFixed(1)})`),cf({position:t,bodyRadius:.5,bodyHeight:1,coneRadius:.2,coneHeight:.4,coneOffset:.7,bodyColor:e.color??16711680,coneColor:e.color??16711680}).forEach(r=>this.addComponent(r));const i={playerId:e.playerId,username:e.username,initialPosition:t,interpolationSpeed:e.interpolationSpeed??.1};this.addComponent(new Oi(i))}getUsername(){return this.username}isMoving(){const e=this.getComponent(Oi);return e?e.isMoving():!1}getVelocity(){const e=this.getComponent(Oi);return e?e.getVelocity():null}teleport(e,t,n){const i=this.getComponent(Oi);if(i){const{Vector3:r}=require("three");i.teleport(new r(e,t,n))}}getTimeSinceLastUpdate(){const e=this.getComponent(Oi);return e?e.getTimeSinceLastUpdate():1/0}setInterpolationSpeed(e){const t=this.getComponent(Oi);t&&t.setInterpolationSpeed(e)}}class E2 extends Dl{constructor(e,t){super(e,!1),this.gameObjectManager=t}localPlayer=null;remotePlayers=new Map;async init(e){console.log("🌐 [MultiplayerModule] Starting...");try{await this.fetchRemotePlayers(e),this.registerWithNetworkingService(),console.log("✅ [MultiplayerModule] Started"),this.initialized(e.sceneName)}catch(t){console.error("❌ [MultiplayerModule] Failed to connect to Multiplayer API:",t)}}registerWithNetworkingService(){this.context.services.networking.register("MultiplayerModule",{scene:this.handleSceneUpdates.bind(this)})}async fetchRemotePlayers(e){const t=new M2;if(!e.clientData||!e.clientData.id)throw new Error("Client data missing or invalid");(await t.getPlayersInScene(e.clientData.id)).data.playersInScene.forEach(i=>{const r=new qd({playerId:i.id,username:i.username||"Remote Player",position:i.position});this.registerRemotePlayer(r.id,r),this.gameObjectManager.add(r,!1)})}handleSceneUpdates(e){switch(e.type){case"scene.joined":{this.onSceneJoined(e);break}case"scene.left":{this.onSceneLeft(e);break}case"scene.player.position":this.onPlayerPositionUpdate(e);break}}onSceneLeft(e){const t=e.content,n=t.playerId;this.unregisterRemotePlayer(n),console.log("[MultiplayerModule] Player left:",t.playerId)}onSceneJoined(e){const t=e.content;console.log("[MultiplayerModule] Player joined:",e.content);const n=new qd({playerId:t.id,username:t.username||"Remote Player",position:t.position});this.registerRemotePlayer(n.id,n),this.gameObjectManager.add(n,!1)}onPlayerPositionUpdate(e){const t=this.remotePlayers.get(e.content.playerId);if(t){const n=t.getComponent(Oi);n&&n.updatePosition({playerId:e.content.playerId,playerName:t.getUsername(),position:e.content.position,rotation:e.content.rotation,timestamp:e.content.timestamp,playerSceneId:this.context.sceneName})}}async destroy(){this.remotePlayers.forEach((e,t)=>{this.unregisterRemotePlayer(t)}),this.remotePlayers.clear(),console.log("🧹 [MultiplayerModule] Destroyed")}registerRemotePlayer(e,t){this.remotePlayers.has(e)&&console.warn(`[MultiplayerModule] Remote player already registered (${e}). Replacing.`),this.remotePlayers.set(e,t),console.log(`👤 [MultiplayerModule] Registered remote player: ${e}`)}unregisterRemotePlayer(e){this.remotePlayers.has(e)&&(this.gameObjectManager.has(e)&&this.gameObjectManager.remove(e),this.remotePlayers.delete(e),console.log(`👤 [MultiplayerModule] Unregistered remote player: ${e}`))}getRemotePlayerCount(){return this.remotePlayers.size}getRemotePlayerIds(){return Array.from(this.remotePlayers.keys())}}class T2 extends Dl{gameObjects=new Map;add(e,t=!0){if(this.gameObjects.has(e.id)){console.warn(`[GameObjectManager] GameObject with id "${e.id}" already exists. Skipping.`);return}this.gameObjects.set(e.id,e),this.context&&t&&e.init(this.context).catch(n=>{console.error(`[GameObjectManager] Failed to initialize GameObject "${e.id}":`,n)})}remove(e){const t=this.gameObjects.get(e);t&&(t.destroy(),this.gameObjects.delete(e))}get(e){return this.gameObjects.get(e)||null}has(e){return this.gameObjects.has(e)}getAll(){return Array.from(this.gameObjects.values())}onThemeChange(e){for(const t of this.gameObjects.values()){const n=t.getAllComponents();for(const i of n)if("onThemeChange"in i&&typeof i.onThemeChange=="function")try{console.log(i),i.onThemeChange?.(e)}catch(r){console.error(`[GameObjectManager] Failed to notify theme change for component in GameObject "${t.id}":`,r)}}console.log(`🎨 [GameObjectManager] Notified ${this.gameObjects.size} GameObjects of theme change to "${e}"`)}async init(e){this.context=e;for(const t of this.gameObjects.values())try{await t.init(this.context)}catch(n){console.error(`[GameObjectManager] Failed to initialize GameObject "${t.id}":`,n)}console.log(`✅ [GameObjectManager] Initialized ${this.gameObjects.size} GameObjects`)}update(e){for(const t of this.gameObjects.values())t.update(e)}async destroy(){for(const e of this.gameObjects.values())e.destroy();this.gameObjects.clear(),console.log("🧹 [GameObjectManager] Destroyed all GameObjects")}}class A2 extends un{priority=ii.RENDERING;config;gridHelper;constructor(e={}){super(),this.config=e}async init(e){const t=this.config.size??10,n=this.config.divisions??10,i=this.config.centerColor??4473924,r=this.config.gridColor??8947848,o=this.config.yOffset??.01;this.gridHelper=new Iu(t,n,i,r),this.gridHelper.position.y=o,e.scene.add(this.gridHelper),e.cleanupRegistry.registerObject(this.gridHelper)}destroy(){}}class R2 extends Xi{constructor(e={}){super({id:"ground"});const t=zo(),n=e.size??100,i=e.gridDivisions??50,r=e.position??[0,0,0],o=e.useTheme??!1,a=e.staticColor??8421504,c=e.showGrid??!0,l=e.enablePhysics??!0;o&&t.theme.primaryForeground;const h=[r[0],r[1]-.05,r[2]];this.addComponent(new Zt({position:h,rotation:[-Math.PI/2,0,0]})).addComponent(new Wi({type:"plane",params:[n,n]})).addComponent(new ji({reactiveColor:"background",roughness:.8,metalness:0})).addComponent(new Ps({castShadow:!1,receiveShadow:!0})),c&&this.addComponent(new A2({size:n,divisions:i,centerColor:4473924,gridColor:8947848,yOffset:.01})),l&&this.addComponent(new Nr({type:"static",shape:"cuboid",shapeParams:[n/2,.1,n/2]}))}}class sc extends un{priority=ii.INTERACTION;characterController;enableJumping;enableGravity;verticalVelocity=5;config=tn();context=null;constructor(e){super(),this.characterController=e.characterController,this.enableJumping=e.enableJumping??!0,this.enableGravity=e.enableGravity??!0}async init(e){if(this.context=e,this.requireComponent(Zt),!e.services.physics.isReady())throw new Error(`[MovementComponent] Physics service not ready for GameObject "${this.gameObject.id}"`);if(!e.services.physics.getPosition(this.gameObject.id))throw new Error(`[MovementComponent] Physics body not found for GameObject "${this.gameObject.id}". Did you add PhysicsComponent with kinematic character controller?`)}update(e){if(!this.context)return;const t=this.context.services.physics.getPosition(this.gameObject.id);if(!t)return;this.enableJumping&&this.handleJumping(e);const n={x:this.characterController.position.x.value-t.x,y:this.verticalVelocity*e,z:this.characterController.position.z.value-t.z},i=this.context.services.physics.moveKinematic(this.gameObject.id,n),r=this.getComponent(Zt);r&&(r.setPosition(i.x,i.y,i.z),r.setRotation(0,this.characterController.rotation.value,0)),this.characterController.position.x.value=i.x,this.characterController.position.y.value=i.y,this.characterController.position.z.value=i.z,i.isGrounded&&(this.verticalVelocity=0,this.config.character.groundLevel=i.y,this.characterController.isJumping.value&&(this.characterController.isJumping.value=!1))}handleJumping(e){this.characterController.isJumping.value&&this.verticalVelocity===0&&(this.verticalVelocity=this.config.character.jumpInitialVelocity),this.enableGravity&&(this.verticalVelocity-=this.config.character.jumpGravity*e)}resetVerticalVelocity(){this.verticalVelocity=0}getVerticalVelocity(){return this.verticalVelocity}destroy(){this.context=null}}class C2 extends un{priority=ii.DEFAULT;playerId;updateRate;positionThreshold;rotationThreshold;syncRotation;timeSinceLastSync=0;lastSyncedPosition=new q;lastSyncedRotation={x:0,y:0,z:0};context=null;constructor(e){super(),this.playerId=e.playerId,this.updateRate=e.updateRate??100,this.positionThreshold=e.positionThreshold??.1,this.rotationThreshold=e.rotationThreshold??.05,this.syncRotation=e.syncRotation??!0}async init(e){this.context=e,this.requireComponent(Zt),console.log(`📡 [SyncMovementComponent] Initialized for player: ${this.playerId}`)}update(e){this.context&&(this.timeSinceLastSync+=e*1e3,this.timeSinceLastSync>=this.updateRate&&(this.syncPosition(),this.timeSinceLastSync=0))}syncPosition(){if(!this.context)return;const e=this.getComponent(Zt);if(!e)return;const t=e.position,n=e.rotation,i=t.distanceTo(this.lastSyncedPosition)>=this.positionThreshold,r=this.syncRotation&&(Math.abs(n.x-this.lastSyncedRotation.x)>=this.rotationThreshold||Math.abs(n.y-this.lastSyncedRotation.y)>=this.rotationThreshold||Math.abs(n.z-this.lastSyncedRotation.z)>=this.rotationThreshold);if(i||r){const o=this.context.services.networking.getClientData();if(!o)return;const a={playerId:o.id,playerName:o.name,playerSceneId:this.context.sceneName,position:{x:t.x,y:t.y,z:t.z},timestamp:Date.now()};this.syncRotation&&(a.rotation={x:n.x,y:n.y,z:n.z}),this.sendPositionUpdate(a),this.lastSyncedPosition.copy(t),this.syncRotation&&(this.lastSyncedRotation={x:n.x,y:n.y,z:n.z})}}sendPositionUpdate(e){if(!this.context?.services.networking)return;const t={action:"player.position.update",...e};this.context.services.networking.send(rf.PLAYER,t)}handleServerUpdate=e=>{};forceSync(){this.timeSinceLastSync=this.updateRate}setUpdateRate(e){this.updateRate=e}setPositionThreshold(e){this.positionThreshold=e}}class P2 extends Xi{characterController;constructor(e){super({id:e.playerId}),this.characterController=e.characterController;const t=e.characterController.getPosition(),n=[t.x,t.y,t.z];e.position&&(n[0]=e.position[0],n[2]=e.position[2],e.position[1]!==void 0&&(n[1]=e.position[1])),cf({position:n,bodyRadius:.5,bodyHeight:1,coneRadius:.2,coneHeight:.4,coneOffset:.7}).forEach(r=>this.addComponent(r)),this.addComponent(new Nr({type:"kinematic",characterController:!0,initialPosition:n,characterOptions:{enableAutostep:!0,enableSnapToGround:!0,maxStepHeight:.5,minStepWidth:.2,snapToGroundDistance:.5}})),this.addComponent(new sc({characterController:e.characterController,enableJumping:!0,enableGravity:!0})),this.addComponent(new C2({playerId:this.id,syncRotation:!0}))}getController(){return this.characterController}teleport(e,t,n){this.characterController.setPosition(e,t,n);const i=this.getComponent(Zt);i&&i.setPosition(e,t,n);const r=this.getComponent(Nr);r&&r.updatePosition(e,t,n);const o=this.getComponent(sc);o&&o.resetVerticalVelocity()}getPosition(){return this.characterController.getPosition()}isJumping(){return this.characterController.isJumping.value}getVerticalVelocity(){const e=this.getComponent(sc);return e?e.getVerticalVelocity():0}}class D2 extends b2{name="PlaygroundScene";engine;constructor(e){super(),this.engine=e.engine,this.start()}registerModules(){this.addModule("lighting",new y2),this.addModule("gameObjectsManager",new T2),this.addModule("multiplayer",new E2("multiplayer",this.getModule("gameObjectsManager")))}addSceneObjects(){const e=this.getModule("gameObjectsManager"),t=new R2({size:200,showGrid:!0});e.add(t);const n=new Xi({id:"modelComponent-editable-box"}).addComponent(new Zt({position:[5,1,5]})).addComponent(new Wi({type:"box",params:[1.5,1.5,1.5]})).addComponent(new ji({useTheme:!0})).addComponent(new Ps).addComponent(new Nr({type:"static"})).addComponent(new x2({tooltip:{title:"modelComponent Box",description:"Draggable in editor mode"}})).addComponent(new af({lockAxis:["y"],snapToGrid:this.config.editor.snapToGrid,onEnd:c=>console.log("✅ modelComponent box dragged to:",c)})).addComponent(new S2),i=new Xi({id:"tree-trunks"}).addComponent(new Wi({type:"cylinder",params:[.15,.2,1.5]})).addComponent(new ji({color:6636321,roughness:.9})).addComponent(new ms({instances:[{position:[10,.75,0]},{position:[12,.75,2]},{position:[14,.75,-1]},{position:[10,.75,-3]},{position:[13,.75,-2]}]})).addComponent(new Nr({type:"static",shape:"cylinder"})),r=new Xi({id:"tree-leaves"}).addComponent(new Wi({type:"cone",params:[.8,1.5,8]})).addComponent(new ji({color:2263842,roughness:.9})).addComponent(new ms({instances:[{position:[10,2,0]},{position:[12,2,2]},{position:[14,2,-1]},{position:[10,2,-3]},{position:[13,2,-2]}]})),o=new Xi({id:"bushes"}).addComponent(new Wi({type:"sphere",params:[.4,8,8]})).addComponent(new ji({color:2969622,roughness:1})).addComponent(new ms({instances:[{position:[8,.3,1]},{position:[11,.3,-1]},{position:[15,.3,0]},{position:[9,.3,-4]}]}));e.add(n),e.add(i),e.add(r),e.add(o);const a=new P2({playerId:"local-player",characterController:this.character.controller});e.add(a)}finalizeSetup(){super.finalizeSetup(),this.setWatchers()}setWatchers(){this.cleanupRegistry.registerWatcher(gs(()=>this.settings.theme.currentTheme,()=>{console.log("🎨 [PlaygroundScene] Theme changed, updating colors..."),this.updateMaterialColors()})),this.cleanupRegistry.registerWatcher(gs(()=>this.settings.theme.colorMode,()=>{console.log("🌗 [PlaygroundScene] Dark mode toggled, updating colors..."),this.updateMaterialColors()}))}updateMaterialColors(){const e={primary:this.settings.theme.primary,primaryForeground:this.settings.theme.primaryForeground,accent:this.settings.theme.accent,accentForeground:this.settings.theme.accentForeground,background:this.settings.theme.background,foreground:this.settings.theme.foreground,muted:this.settings.theme.muted,card:this.settings.theme.card,border:this.settings.theme.border};this.getModule("gameObjectsManager")?.onThemeChange?.(e)}}const I2={key:0,class:"fixed inset-0 z-50 flex items-center justify-center bg-background/80 backdrop-blur-sm"},U2={class:"flex flex-col items-center gap-6 w-full max-w-md px-6"},L2={class:"text-center space-y-2"},F2={class:"text-sm text-muted-foreground"},N2={class:"w-full space-y-2"},O2={class:"h-2 w-full overflow-hidden rounded-full bg-secondary"},k2={class:"flex justify-between text-xs text-muted-foreground"},z2={key:0,class:"text-xs text-center text-muted-foreground truncate w-full"},B2={key:1,class:"text-sm text-destructive text-center"},G2={key:2,class:"flex items-center gap-2 text-sm text-muted-foreground"},H2=al({__name:"LoadingScreen",setup(s){const e=ot(!1),t=ot(0),n=ot(0),i=ot(0),r=ot(n.value),o=ot(""),a=ot(""),c=ot(null),l=ot(0),h=Wn(()=>`${Math.round(t.value)}%`),d=Wn(()=>t.value>=100&&!e.value),u=ws("scene:loading",{start:f,loaded:g,fail:_});function f(p){e.value=!0,t.value=0,i.value=0+n.value,r.value+=p.totalAssets,a.value=p.sceneName,c.value=null,l.value=performance.now(),console.log(`🎬 [LoadingScreen] Loading ${p.sceneName}...`)}function g(p){const M=r.value>0?p.loaded/r.value*100:0;i.value=p.loaded,t.value=M,o.value=p.assetName||"",console.log(`⏳ [LoadingScreen] (${o.value}) Progress: ${M.toFixed(2)}%`),M>=100&&v({sceneName:p.sceneName})}function v(p){e.value=!1,t.value=100;const M=(performance.now()-l.value).toFixed(0);console.log(`✅ [LoadingScreen] ${p.sceneName} loaded in ${M}ms`),u.$next("complete",{...p,loadTime:Number(M),progress:t.value})}function _(p){e.value=!1,c.value=p.error,console.error(`❌ [LoadingScreen] Error loading ${p.sceneName}:`,p.error)}return(p,M)=>e.value||!d.value?(Gi(),xr("div",I2,[it("div",U2,[it("div",L2,[M[0]||(M[0]=it("h1",{class:"text-4xl font-bold tracking-tight"},"RUNE RPG",-1)),it("p",F2,ei(a.value||"Loading Scene"),1)]),it("div",N2,[it("div",O2,[it("div",{class:"h-full bg-primary transition-all duration-300 ease-out",style:yf({width:h.value})},null,4)]),it("div",k2,[it("span",null,ei(i.value)+" / "+ei(r.value)+" assets",1),it("span",null,ei(h.value),1)])]),o.value?(Gi(),xr("div",z2," Loading: "+ei(o.value),1)):Sr("",!0),c.value?(Gi(),xr("div",B2,"Error: "+ei(c.value),1)):Sr("",!0),e.value?(Gi(),xr("div",G2,[...M[1]||(M[1]=[it("svg",{class:"animate-spin h-4 w-4",xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},[it("circle",{class:"opacity-25",cx:"12",cy:"12",r:"10",stroke:"currentColor","stroke-width":"4"}),it("path",{class:"opacity-75",fill:"currentColor",d:"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"})],-1),it("span",null,"Loading...",-1)])])):Sr("",!0)])])):Sr("",!0)}}),V2={class:"flex items-center justify-between"},W2={class:"text-sm font-semibold text-primary flex items-center gap-2"},j2={class:"space-y-3"},X2={class:"flex items-center justify-between"},q2={class:"space-y-2"},Y2={class:"flex justify-between items-center"},K2={class:"text-xs text-muted-foreground font-mono"},J2={class:"space-y-2"},Z2={class:"flex justify-between items-center"},$2={class:"text-xs text-muted-foreground font-mono"},Q2={class:"pt-3 border-t border-border space-y-2"},eP={class:"flex items-center justify-between text-xs"},tP={class:"font-mono text-foreground"},nP=al({__name:"EditorPanel",setup(s){const e=tn(),t=Bo(),n=Wn(()=>t.getScene("PlaygroundScene")?.objects.length||0);function i(){e.editor.enabled=!1}function r(){confirm(`Reset all saved positions?

This will clear all saved object positions and reload the scene to defaults.

This action cannot be undone.`)&&(t.clearScene("PlaygroundScene"),alert("Scene reset! Reloading page..."),window.location.reload())}return(o,a)=>Sn(e).editor.enabled?(Gi(),xr("div",{key:0,class:"fixed top-20 right-4 z-40 bg-card/95 backdrop-blur-sm border border-border rounded-lg shadow-lg p-4 space-y-4 w-72",onWheel:a[3]||(a[3]=xf(()=>{},["stop"]))},[it("div",V2,[it("h3",W2,[pi(Sn(If),{class:"h-4 w-4"}),a[4]||(a[4]=xo(" Level Editor ",-1))]),pi(ql,{variant:"ghost",size:"icon",class:"h-6 w-6",onClick:i},{default:oc(()=>[pi(Sn(Sf),{class:"h-3 w-3"})]),_:1})]),a[13]||(a[13]=it("div",{class:"bg-primary/10 border border-primary/20 rounded-md p-3"},[it("div",{class:"flex items-center gap-2 text-xs text-primary font-medium"},[it("div",{class:"h-2 w-2 rounded-full bg-primary animate-pulse"}),xo(" Editor Mode Active ")]),it("p",{class:"text-xs text-muted-foreground mt-1"},"Drag objects to reposition them")],-1)),it("div",j2,[a[9]||(a[9]=it("h4",{class:"text-xs font-semibold text-foreground"},"Grid Settings",-1)),it("div",X2,[a[5]||(a[5]=it("label",{class:"text-xs font-medium cursor-pointer"},"Show Grid",-1)),pi(Mf,{modelValue:Sn(e).editor.showGrid,"onUpdate:modelValue":a[0]||(a[0]=c=>Sn(e).editor.showGrid=c)},null,8,["modelValue"])]),it("div",q2,[it("div",Y2,[a[6]||(a[6]=it("label",{class:"text-xs font-medium"},"Grid Snap",-1)),it("span",K2,ei(Sn(e).editor.snapToGrid),1)]),pi(Yl,{"model-value":[Sn(e).editor.snapToGrid],"onUpdate:modelValue":a[1]||(a[1]=c=>c&&(Sn(e).editor.snapToGrid=c[0])),min:.1,max:2,step:.1,class:"w-full"},null,8,["model-value"]),a[7]||(a[7]=it("div",{class:"flex justify-between text-xs text-muted-foreground"},[it("span",null,"0.1"),it("span",null,"2.0")],-1))]),it("div",J2,[it("div",Z2,[a[8]||(a[8]=it("label",{class:"text-xs font-medium"},"Drag Opacity",-1)),it("span",$2,ei(Sn(e).editor.dragOpacity.toFixed(2)),1)]),pi(Yl,{"model-value":[Sn(e).editor.dragOpacity],"onUpdate:modelValue":a[2]||(a[2]=c=>c&&(Sn(e).editor.dragOpacity=c[0])),min:.1,max:1,step:.05,class:"w-full"},null,8,["model-value"])])]),it("div",Q2,[a[12]||(a[12]=it("h4",{class:"text-xs font-semibold text-foreground"},"Scene Actions",-1)),it("div",eP,[a[10]||(a[10]=it("span",{class:"text-muted-foreground"},"Saved Positions",-1)),it("span",tP,ei(n.value),1)]),pi(ql,{onClick:r,variant:"destructive",size:"sm",class:"w-full text-xs"},{default:oc(()=>[...a[11]||(a[11]=[xo(" Reset All Positions ",-1)])]),_:1})])],32)):Sr("",!0)}}),iP={class:"scene-container"},rP=al({__name:"Scene",setup(s){const e=ot(null),t=Ef(),n=Bo();let i=null,r=null;const{width:o,height:a}=Pf();function c(){try{if(!e.value)return;if(i||r){console.warn("⚠️ [Game] Already initialized, skipping...");return}console.log("🎮 [Game] Initializing game..."),i=new Kv(e.value),console.log("   ↳ Scene UUID:",i.scene.uuid),u(),g(),console.log("✅ [Game] Game initialization complete")}catch(v){console.error("❌ [Game] Error during initialization:",v)}}function l(){if(!i||!r)return;const v=i.clock.getDelta();r.update(v),i.render(r.camera.instance)}async function h(){console.log("🧹 [Game] Starting cleanup..."),console.log("   ↳ Pausing render loop..."),f(),await d(),console.log("✅ [Game] Cleanup complete")}async function d(){r&&(console.log("   ↳ Destroying scene..."),await r.destroy(),r=null),i&&(console.log("   ↳ Cleaning up engine..."),i.cleanup(),i=null)}function u(){if(!i)return;const v=n.getActiveScene();if(!v)throw new Error("No active scene set in store");if(v==="PlaygroundScene"){const _={engine:i};r=new D2(_)}}const{pause:f,resume:g}=Tf(l,{immediate:!1,fpsLimit:void 0});return gs([o,a],()=>{i&&i.resize()}),Af(c),Cf(h),(v,_)=>(Gi(),xr("div",iP,[pi(H2,null,{default:oc(()=>[..._[0]||(_[0]=[xo(">",-1)])]),_:1}),Sn(t).isAuthenticated?(Gi(),Rf(nP,{key:0})):Sr("",!0),it("canvas",{ref_key:"canvasRef",ref:e,class:"three-canvas"},null,512)]))}}),sP=Df(rP,[["__scopeId","data-v-d14c1ba9"]]),SP=Object.freeze(Object.defineProperty({__proto__:null,default:sP},Symbol.toStringTag,{value:"Module"}));export{uP as $,$o as A,Cl as B,Xu as C,Al as D,tC as E,sC as F,oC as G,cC as H,lC as I,hC as J,dC as K,iC as L,rC as M,pC as N,_C as O,ju as P,mC as Q,Un as R,sP as S,aC as T,gC as U,We as V,wC as W,uC as X,fC as Y,Pt as Z,dP as _,Jd as a,As as a0,nC as a1,Dd as a2,Pd as a3,xP as a4,eC as a5,Rt as a6,Id as a7,QR as a8,SP as a9,yP as b,Tt as c,Fr as d,pP as e,fP as f,Ln as g,Mi as h,Ti as i,od as j,Ei as k,Si as l,Wu as m,Vu as n,kt as o,wP as p,bP as q,_P as r,gP as s,b0 as t,ws as u,vP as v,mP as w,y0 as x,jt as y,Rl as z};
